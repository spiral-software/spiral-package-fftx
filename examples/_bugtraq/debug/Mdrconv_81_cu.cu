
/*
 * This code was generated by Spiral 8.4.0-release, www.spiral.net
 */

#include <stdint.h>
__device__ double  *P1, *P2;
 __constant__ double D6[216] = {1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      0.99323835774194302, 0.11609291412523023, 0.97304487057982381, 0.23061587074244028, 
      0.9879898494768089, 0.15451879280784053, 0.96337087861588033, 0.26817261276063731, 
      0.98125531062738469, 0.19271226054808968, 0.95224788533841531, 0.30532599769511315, 
      0.97304487057982381, 0.23061587074244028, 0.89363264032341228, 0.44879918020046217, 
      0.95224788533841531, 0.30532599769511315, 0.85616689953026648, 0.51669937115186293, 
      0.92572396926889033, 0.37819985817164248, 0.81355207026296761, 0.58149207128802671, 
      0.93969262078590843, 0.34202014332566871, 0.76604444311897812, 0.64278760968653925, 
      0.89363264032341228, 0.44879918020046217, 0.6862416378687336, 0.72737364157304862, 
      0.83548781141293649, 0.54950897807080601, 0.59715859170278618, 0.80212319275504373, 
      0.89363264032341228, 0.44879918020046217, 0.59715859170278618, 0.80212319275504373, 
      0.81355207026296761, 0.58149207128802671, 0.46604351970253882, 0.88476179717665782, 
      0.71392973455789899, 0.7002173477671686, 0.32373394205832107, 0.94614815687575038, 
      0.83548781141293649, 0.54950897807080601, 0.39607976603915679, 0.918216106880274, 
      0.71392973455789899, 0.7002173477671686, 0.2117038722294107, 0.97733385825063557, 
      0.56560687548653854, 0.82467500410910677, 0.01939133177182437, 0.99981197044850145, 
      0.76604444311897812, 0.64278760968653925, 0.17364817766693033, 0.98480775301220802, 
      0.59715859170278618, 0.80212319275504373, (-0.058144828910475829), 0.99830815827126818, 
      0.39607976603915679, 0.918216106880274, (-0.28680323271109021), 0.9579895123154889, 
      0.6862416378687336, 0.72737364157304862, (-0.058144828910475829), 0.99830815827126818, 
      0.46604351970253882, 0.88476179717665782, (-0.32373394205832107), 0.94614815687575038, 
      0.2117038722294107, 0.97733385825063557, (-0.56560687548653854), 0.82467500410910677, 
      0.59715859170278618, 0.80212319275504373, (-0.28680323271109021), 0.9579895123154889, 
      0.32373394205832107, 0.94614815687575038, (-0.56560687548653854), 0.82467500410910677, 
      0.01939133177182437, 0.99981197044850145, (-0.79039266951875919), 0.61260054519320284, 
      0.5, 0.8660254037844386, (-0.5), 0.8660254037844386, 
      0.17364817766693033, 0.98480775301220802, (-0.76604444311897812), 0.64278760968653925, 
      (-0.17364817766693033), 0.98480775301220802, (-0.93969262078590843), 0.34202014332566871, 
      0.39607976603915679, 0.918216106880274, (-0.6862416378687336), 0.72737364157304862, 
      0.01939133177182437, 0.99981197044850145, (-0.91036294096614667), 0.41381072450513912, 
      (-0.36017772480471039), 0.93288370473200055, (-0.99924795250423004), 0.03877537125681671, 
      0.28680323271109021, 0.9579895123154889, (-0.83548781141293649), 0.54950897807080601, 
      (-0.13533129975013108), 0.99080040336484532, (-0.9879898494768089), 0.15451879280784053, 
      (-0.53320443280169116), 0.84598642591984108, (-0.96337087861588033), (-0.26817261276063731), 
      0.17364817766693033, 0.98480775301220802, (-0.93969262078590843), 0.34202014332566871, 
      (-0.28680323271109021), 0.9579895123154889, (-0.99323835774194302), (-0.11609291412523023), 
      (-0.6862416378687336), 0.72737364157304862, (-0.83548781141293649), (-0.54950897807080601), 
      0.058144828910475829, 0.99830815827126818, (-0.99323835774194302), 0.11609291412523023, 
      (-0.43138606568125337), 0.90216742478103773, (-0.92572396926889033), (-0.37819985817164248), 
      (-0.81355207026296761), 0.58149207128802671, (-0.62781212467209857), (-0.77836491192416002), 
      (-0.058144828910475829), 0.99830815827126818, (-0.99323835774194302), (-0.11609291412523023), 
      (-0.56560687548653854), 0.82467500410910677, (-0.79039266951875919), (-0.61260054519320284), 
      (-0.91036294096614667), 0.41381072450513912, (-0.36017772480471039), (-0.93288370473200055), 
      (-0.17364817766693033), 0.98480775301220802, (-0.93969262078590843), (-0.34202014332566871), 
      (-0.6862416378687336), 0.72737364157304862, (-0.59715859170278618), (-0.80212319275504373), 
      (-0.97304487057982381), 0.23061587074244028, (-0.058144828910475829), (-0.99830815827126818), 
      (-0.28680323271109021), 0.9579895123154889, (-0.83548781141293649), (-0.54950897807080601), 
      (-0.79039266951875919), 0.61260054519320284, (-0.36017772480471039), (-0.93288370473200055), 
      (-0.99924795250423004), 0.03877537125681671, 0.24944114405798132, (-0.9683899605278059), 
      (-0.39607976603915679), 0.918216106880274, (-0.6862416378687336), (-0.72737364157304862), 
      (-0.87555823130209087), 0.48311259929663852, (-0.096810870703179092), (-0.99530279579316583), 
      (-0.9879898494768089), (-0.15451879280784053), 0.53320443280169116, (-0.84598642591984108)};

 __constant__ double D16[96] = {0.97304487057982381, (-0.23061587074244028), 0.89363264032341228, (-0.44879918020046217), 
      0.96337087861588033, (-0.26817261276063731), 0.87555823130209087, (-0.48311259929663852), 
      0.95224788533841531, (-0.30532599769511315), 0.85616689953026648, (-0.51669937115186293), 
      0.93969262078590843, (-0.34202014332566871), 0.83548781141293649, (-0.54950897807080601), 
      0.92572396926889033, (-0.37819985817164248), 0.81355207026296761, (-0.58149207128802671), 
      0.91036294096614667, (-0.41381072450513912), 0.79039266951875919, (-0.61260054519320284), 
      0.89363264032341228, (-0.44879918020046217), 0.59715859170278618, (-0.80212319275504373), 
      0.85616689953026648, (-0.51669937115186293), 0.53320443280169116, (-0.84598642591984108), 
      0.81355207026296761, (-0.58149207128802671), 0.46604351970253882, (-0.88476179717665782), 
      0.76604444311897812, (-0.64278760968653925), 0.39607976603915679, (-0.918216106880274), 
      0.71392973455789899, (-0.7002173477671686), 0.32373394205832107, (-0.94614815687575038), 
      0.65752136856906362, (-0.75343589632766073), 0.24944114405798132, (-0.9683899605278059), 
      0.76604444311897812, (-0.64278760968653925), 0.17364817766693033, (-0.98480775301220802), 
      0.6862416378687336, (-0.72737364157304862), 0.058144828910475829, (-0.99830815827126818), 
      0.59715859170278618, (-0.80212319275504373), (-0.058144828910475829), (-0.99830815827126818), 
      0.5, (-0.8660254037844386), (-0.17364817766693033), (-0.98480775301220802), 
      0.39607976603915679, (-0.918216106880274), (-0.28680323271109021), (-0.9579895123154889), 
      0.28680323271109021, (-0.9579895123154889), (-0.39607976603915679), (-0.918216106880274), 
      0.59715859170278618, (-0.80212319275504373), (-0.28680323271109021), (-0.9579895123154889), 
      0.46604351970253882, (-0.88476179717665782), (-0.43138606568125337), (-0.90216742478103773), 
      0.32373394205832107, (-0.94614815687575038), (-0.56560687548653854), (-0.82467500410910677), 
      0.17364817766693033, (-0.98480775301220802), (-0.6862416378687336), (-0.72737364157304862), 
      0.01939133177182437, (-0.99981197044850145), (-0.79039266951875919), (-0.61260054519320284), 
      (-0.13533129975013108), (-0.99080040336484532), (-0.87555823130209087), (-0.48311259929663852)};

 __constant__ double D15[48] = {1.0, 0.0, 0.99924795250423004, (-0.03877537125681671), 
      0.99699294116779191, (-0.077492420671930962), 0.99323835774194302, (-0.11609291412523023), 
      0.9879898494768089, (-0.15451879280784053), 0.98125531062738469, (-0.19271226054808968), 
      1.0, 0.0, 0.99699294116779191, (-0.077492420671930962), 
      0.9879898494768089, (-0.15451879280784053), 0.97304487057982381, (-0.23061587074244028), 
      0.95224788533841531, (-0.30532599769511315), 0.92572396926889033, (-0.37819985817164248), 
      1.0, 0.0, 0.99323835774194302, (-0.11609291412523023), 
      0.97304487057982381, (-0.23061587074244028), 0.93969262078590843, (-0.34202014332566871), 
      0.89363264032341228, (-0.44879918020046217), 0.83548781141293649, (-0.54950897807080601), 
      1.0, 0.0, 0.9879898494768089, (-0.15451879280784053), 
      0.95224788533841531, (-0.30532599769511315), 0.89363264032341228, (-0.44879918020046217), 
      0.81355207026296761, (-0.58149207128802671), 0.71392973455789899, (-0.7002173477671686)};

 __constant__ double D14[108] = {0.5, (-0.8660254037844386), (-0.5), (-0.8660254037844386), 
      0.17364817766693033, (-0.98480775301220802), (-0.76604444311897812), (-0.64278760968653925), 
      (-0.17364817766693033), (-0.98480775301220802), (-0.93969262078590843), (-0.34202014332566871), 
      0.39607976603915679, (-0.918216106880274), (-0.6862416378687336), (-0.72737364157304862), 
      0.01939133177182437, (-0.99981197044850145), (-0.91036294096614667), (-0.41381072450513912), 
      (-0.36017772480471039), (-0.93288370473200055), (-0.99924795250423004), (-0.03877537125681671), 
      0.28680323271109021, (-0.9579895123154889), (-0.83548781141293649), (-0.54950897807080601), 
      (-0.13533129975013108), (-0.99080040336484532), (-0.9879898494768089), (-0.15451879280784053), 
      (-0.53320443280169116), (-0.84598642591984108), (-0.96337087861588033), 0.26817261276063731, 
      0.17364817766693033, (-0.98480775301220802), (-0.93969262078590843), (-0.34202014332566871), 
      (-0.28680323271109021), (-0.9579895123154889), (-0.99323835774194302), 0.11609291412523023, 
      (-0.6862416378687336), (-0.72737364157304862), (-0.83548781141293649), 0.54950897807080601, 
      0.058144828910475829, (-0.99830815827126818), (-0.99323835774194302), (-0.11609291412523023), 
      (-0.43138606568125337), (-0.90216742478103773), (-0.92572396926889033), 0.37819985817164248, 
      (-0.81355207026296761), (-0.58149207128802671), (-0.62781212467209857), 0.77836491192416002, 
      (-0.058144828910475829), (-0.99830815827126818), (-0.99323835774194302), 0.11609291412523023, 
      (-0.56560687548653854), (-0.82467500410910677), (-0.79039266951875919), 0.61260054519320284, 
      (-0.91036294096614667), (-0.41381072450513912), (-0.36017772480471039), 0.93288370473200055, 
      (-0.17364817766693033), (-0.98480775301220802), (-0.93969262078590843), 0.34202014332566871, 
      (-0.6862416378687336), (-0.72737364157304862), (-0.59715859170278618), 0.80212319275504373, 
      (-0.97304487057982381), (-0.23061587074244028), (-0.058144828910475829), 0.99830815827126818, 
      (-0.28680323271109021), (-0.9579895123154889), (-0.83548781141293649), 0.54950897807080601, 
      (-0.79039266951875919), (-0.61260054519320284), (-0.36017772480471039), 0.93288370473200055, 
      (-0.99924795250423004), (-0.03877537125681671), 0.24944114405798132, 0.9683899605278059, 
      (-0.39607976603915679), (-0.918216106880274), (-0.6862416378687336), 0.72737364157304862, 
      (-0.87555823130209087), (-0.48311259929663852), (-0.096810870703179092), 0.99530279579316583, 
      (-0.9879898494768089), 0.15451879280784053, 0.53320443280169116, 0.84598642591984108};

 __constant__ double D13[54] = {1.0, 0.0, 0.93969262078590843, (-0.34202014332566871), 
      0.76604444311897812, (-0.64278760968653925), 1.0, 0.0, 
      0.92572396926889033, (-0.37819985817164248), 0.71392973455789899, (-0.7002173477671686), 
      1.0, 0.0, 0.91036294096614667, (-0.41381072450513912), 
      0.65752136856906362, (-0.75343589632766073), 1.0, 0.0, 
      0.89363264032341228, (-0.44879918020046217), 0.59715859170278618, (-0.80212319275504373), 
      1.0, 0.0, 0.87555823130209087, (-0.48311259929663852), 
      0.53320443280169116, (-0.84598642591984108), 1.0, 0.0, 
      0.85616689953026648, (-0.51669937115186293), 0.46604351970253882, (-0.88476179717665782), 
      1.0, 0.0, 0.83548781141293649, (-0.54950897807080601), 
      0.39607976603915679, (-0.918216106880274), 1.0, 0.0, 
      0.81355207026296761, (-0.58149207128802671), 0.32373394205832107, (-0.94614815687575038), 
      1.0, 0.0, 0.79039266951875919, (-0.61260054519320284), 
      0.24944114405798132, (-0.9683899605278059)};

 __constant__ double D12[108] = {1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      0.99323835774194302, (-0.11609291412523023), 0.97304487057982381, (-0.23061587074244028), 
      0.9879898494768089, (-0.15451879280784053), 0.96337087861588033, (-0.26817261276063731), 
      0.98125531062738469, (-0.19271226054808968), 0.95224788533841531, (-0.30532599769511315), 
      0.97304487057982381, (-0.23061587074244028), 0.89363264032341228, (-0.44879918020046217), 
      0.95224788533841531, (-0.30532599769511315), 0.85616689953026648, (-0.51669937115186293), 
      0.92572396926889033, (-0.37819985817164248), 0.81355207026296761, (-0.58149207128802671), 
      0.93969262078590843, (-0.34202014332566871), 0.76604444311897812, (-0.64278760968653925), 
      0.89363264032341228, (-0.44879918020046217), 0.6862416378687336, (-0.72737364157304862), 
      0.83548781141293649, (-0.54950897807080601), 0.59715859170278618, (-0.80212319275504373), 
      0.89363264032341228, (-0.44879918020046217), 0.59715859170278618, (-0.80212319275504373), 
      0.81355207026296761, (-0.58149207128802671), 0.46604351970253882, (-0.88476179717665782), 
      0.71392973455789899, (-0.7002173477671686), 0.32373394205832107, (-0.94614815687575038), 
      0.83548781141293649, (-0.54950897807080601), 0.39607976603915679, (-0.918216106880274), 
      0.71392973455789899, (-0.7002173477671686), 0.2117038722294107, (-0.97733385825063557), 
      0.56560687548653854, (-0.82467500410910677), 0.01939133177182437, (-0.99981197044850145), 
      0.76604444311897812, (-0.64278760968653925), 0.17364817766693033, (-0.98480775301220802), 
      0.59715859170278618, (-0.80212319275504373), (-0.058144828910475829), (-0.99830815827126818), 
      0.39607976603915679, (-0.918216106880274), (-0.28680323271109021), (-0.9579895123154889), 
      0.6862416378687336, (-0.72737364157304862), (-0.058144828910475829), (-0.99830815827126818), 
      0.46604351970253882, (-0.88476179717665782), (-0.32373394205832107), (-0.94614815687575038), 
      0.2117038722294107, (-0.97733385825063557), (-0.56560687548653854), (-0.82467500410910677), 
      0.59715859170278618, (-0.80212319275504373), (-0.28680323271109021), (-0.9579895123154889), 
      0.32373394205832107, (-0.94614815687575038), (-0.56560687548653854), (-0.82467500410910677), 
      0.01939133177182437, (-0.99981197044850145), (-0.79039266951875919), (-0.61260054519320284)};

 __constant__ double D11[54] = {1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      0.99924795250423004, (-0.03877537125681671), 0.99699294116779191, (-0.077492420671930962), 
      1.0, 0.0, 0.99699294116779191, (-0.077492420671930962), 
      0.9879898494768089, (-0.15451879280784053), 1.0, 0.0, 
      0.99323835774194302, (-0.11609291412523023), 0.97304487057982381, (-0.23061587074244028), 
      1.0, 0.0, 0.9879898494768089, (-0.15451879280784053), 
      0.95224788533841531, (-0.30532599769511315), 1.0, 0.0, 
      0.98125531062738469, (-0.19271226054808968), 0.92572396926889033, (-0.37819985817164248), 
      1.0, 0.0, 0.97304487057982381, (-0.23061587074244028), 
      0.89363264032341228, (-0.44879918020046217), 1.0, 0.0, 
      0.96337087861588033, (-0.26817261276063731), 0.85616689953026648, (-0.51669937115186293), 
      1.0, 0.0, 0.95224788533841531, (-0.30532599769511315), 
      0.81355207026296761, (-0.58149207128802671)};

 __constant__ double D5[108] = {1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      0.99924795250423004, 0.03877537125681671, 0.99699294116779191, 0.077492420671930962, 
      1.0, 0.0, 0.99699294116779191, 0.077492420671930962, 
      0.9879898494768089, 0.15451879280784053, 1.0, 0.0, 
      0.99323835774194302, 0.11609291412523023, 0.97304487057982381, 0.23061587074244028, 
      1.0, 0.0, 0.9879898494768089, 0.15451879280784053, 
      0.95224788533841531, 0.30532599769511315, 1.0, 0.0, 
      0.98125531062738469, 0.19271226054808968, 0.92572396926889033, 0.37819985817164248, 
      1.0, 0.0, 0.97304487057982381, 0.23061587074244028, 
      0.89363264032341228, 0.44879918020046217, 1.0, 0.0, 
      0.96337087861588033, 0.26817261276063731, 0.85616689953026648, 0.51669937115186293, 
      1.0, 0.0, 0.95224788533841531, 0.30532599769511315, 
      0.81355207026296761, 0.58149207128802671, 1.0, 0.0, 
      0.93969262078590843, 0.34202014332566871, 0.76604444311897812, 0.64278760968653925, 
      1.0, 0.0, 0.92572396926889033, 0.37819985817164248, 
      0.71392973455789899, 0.7002173477671686, 1.0, 0.0, 
      0.91036294096614667, 0.41381072450513912, 0.65752136856906362, 0.75343589632766073, 
      1.0, 0.0, 0.89363264032341228, 0.44879918020046217, 
      0.59715859170278618, 0.80212319275504373, 1.0, 0.0, 
      0.87555823130209087, 0.48311259929663852, 0.53320443280169116, 0.84598642591984108, 
      1.0, 0.0, 0.85616689953026648, 0.51669937115186293, 
      0.46604351970253882, 0.88476179717665782, 1.0, 0.0, 
      0.83548781141293649, 0.54950897807080601, 0.39607976603915679, 0.918216106880274, 
      1.0, 0.0, 0.81355207026296761, 0.58149207128802671, 
      0.32373394205832107, 0.94614815687575038, 1.0, 0.0, 
      0.79039266951875919, 0.61260054519320284, 0.24944114405798132, 0.9683899605278059};

 __constant__ double D2[96] = {0.97304487057982381, 0.23061587074244028, 0.89363264032341228, 0.44879918020046217, 
      0.93969262078590843, 0.34202014332566871, 0.83548781141293649, 0.54950897807080601, 
      0.96337087861588033, 0.26817261276063731, 0.87555823130209087, 0.48311259929663852, 
      0.92572396926889033, 0.37819985817164248, 0.81355207026296761, 0.58149207128802671, 
      0.95224788533841531, 0.30532599769511315, 0.85616689953026648, 0.51669937115186293, 
      0.91036294096614667, 0.41381072450513912, 0.79039266951875919, 0.61260054519320284, 
      0.89363264032341228, 0.44879918020046217, 0.59715859170278618, 0.80212319275504373, 
      0.76604444311897812, 0.64278760968653925, 0.39607976603915679, 0.918216106880274, 
      0.85616689953026648, 0.51669937115186293, 0.53320443280169116, 0.84598642591984108, 
      0.71392973455789899, 0.7002173477671686, 0.32373394205832107, 0.94614815687575038, 
      0.81355207026296761, 0.58149207128802671, 0.46604351970253882, 0.88476179717665782, 
      0.65752136856906362, 0.75343589632766073, 0.24944114405798132, 0.9683899605278059, 
      0.76604444311897812, 0.64278760968653925, 0.17364817766693033, 0.98480775301220802, 
      0.5, 0.8660254037844386, (-0.17364817766693033), 0.98480775301220802, 
      0.6862416378687336, 0.72737364157304862, 0.058144828910475829, 0.99830815827126818, 
      0.39607976603915679, 0.918216106880274, (-0.28680323271109021), 0.9579895123154889, 
      0.59715859170278618, 0.80212319275504373, (-0.058144828910475829), 0.99830815827126818, 
      0.28680323271109021, 0.9579895123154889, (-0.39607976603915679), 0.918216106880274, 
      0.59715859170278618, 0.80212319275504373, (-0.28680323271109021), 0.9579895123154889, 
      0.17364817766693033, 0.98480775301220802, (-0.6862416378687336), 0.72737364157304862, 
      0.46604351970253882, 0.88476179717665782, (-0.43138606568125337), 0.90216742478103773, 
      0.01939133177182437, 0.99981197044850145, (-0.79039266951875919), 0.61260054519320284, 
      0.32373394205832107, 0.94614815687575038, (-0.56560687548653854), 0.82467500410910677, 
      (-0.13533129975013108), 0.99080040336484532, (-0.87555823130209087), 0.48311259929663852};

 __constant__ double D1[48] = {1.0, 0.0, 0.99323835774194302, 0.11609291412523023, 
      0.99924795250423004, 0.03877537125681671, 0.9879898494768089, 0.15451879280784053, 
      0.99699294116779191, 0.077492420671930962, 0.98125531062738469, 0.19271226054808968, 
      1.0, 0.0, 0.97304487057982381, 0.23061587074244028, 
      0.99699294116779191, 0.077492420671930962, 0.95224788533841531, 0.30532599769511315, 
      0.9879898494768089, 0.15451879280784053, 0.92572396926889033, 0.37819985817164248, 
      1.0, 0.0, 0.93969262078590843, 0.34202014332566871, 
      0.99323835774194302, 0.11609291412523023, 0.89363264032341228, 0.44879918020046217, 
      0.97304487057982381, 0.23061587074244028, 0.83548781141293649, 0.54950897807080601, 
      1.0, 0.0, 0.89363264032341228, 0.44879918020046217, 
      0.9879898494768089, 0.15451879280784053, 0.81355207026296761, 0.58149207128802671, 
      0.95224788533841531, 0.30532599769511315, 0.71392973455789899, 0.7002173477671686};


__global__ void ker_Mdrconv_81_cu0(double  *X) {
    __shared__ double T5[1629];
    for(int i109 = 0; i109 <= 8; i109++) {
        double s65, s66, s67, s68, s69, s70, s71, s72, 
                s73, s74, s75, s76, s77, s78, s79, s80, 
                s81, s82, t718, t719, t720, t721;
        int a76, b17;
        b17 = ((729*blockIdx.x) + (243*threadIdx.y) + (81*threadIdx.x) + i109);
        s65 = X[(b17 + 27)];
        s66 = (0.5*s65);
        s67 = (0.8660254037844386*s65);
        s68 = X[(b17 + 45)];
        s69 = (0.5*s68);
        s70 = (0.8660254037844386*s68);
        s71 = X[(b17 + 9)];
        s72 = X[(b17 + 63)];
        t718 = (s71 + s72);
        s73 = (0.5*t718);
        s74 = (0.8660254037844386*(s71 - s72));
        t719 = (s68 + t718);
        a76 = (10*i109);
        T5[((a76 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s65 + t719);
        T5[(((a76 + 1) + (181*threadIdx.x)) + (543*threadIdx.y))] = 0.0;
        T5[(((a76 + 6) + (181*threadIdx.x)) + (543*threadIdx.y))] = (s65 - (0.5*t719));
        T5[(((a76 + 7) + (181*threadIdx.x)) + (543*threadIdx.y))] = -((0.8660254037844386*(s68 - t718)));
        s75 = ((0.64278760968653925*s70) - (0.76604444311897812*s69));
        s76 = ((0.76604444311897812*s70) + (0.64278760968653925*s69));
        s77 = ((0.17364817766693033*s73) + (0.98480775301220802*s74));
        s78 = ((0.98480775301220802*s73) - (0.17364817766693033*s74));
        t720 = (s75 - s77);
        t721 = (s76 + s78);
        s79 = (s66 + (0.5*t720));
        s80 = (s67 - (0.5*t721));
        s81 = (0.8660254037844386*(s76 - s78));
        s82 = (0.8660254037844386*(s75 + s77));
        T5[(((a76 + 2) + (181*threadIdx.x)) + (543*threadIdx.y))] = (t720 - s66);
        T5[(((a76 + 3) + (181*threadIdx.x)) + (543*threadIdx.y))] = (s67 + t721);
        T5[(((a76 + 8) + (181*threadIdx.x)) + (543*threadIdx.y))] = (s81 - s79);
        T5[(((a76 + 9) + (181*threadIdx.x)) + (543*threadIdx.y))] = (s80 - s82);
        T5[(((a76 + 4) + (181*threadIdx.x)) + (543*threadIdx.y))] = -((s79 + s81));
        T5[(((a76 + 5) + (181*threadIdx.x)) + (543*threadIdx.y))] = -((s80 + s82));
    }
    for(int i110 = 0; i110 <= 8; i110++) {
        double s150, s151, s152, s153, s154, s155, s156, s157, 
                s158, s159, s160, s161, s162, s163, s164, s165, 
                s166, s167, s168, t755, t756, t757, t758, t759;
        int a158, b36;
        b36 = ((729*blockIdx.x) + (243*threadIdx.y) + (81*threadIdx.x) + i110);
        s150 = X[(b36 + 36)];
        s151 = (0.5*s150);
        s152 = (0.8660254037844386*s150);
        s153 = X[b36];
        s154 = X[(b36 + 54)];
        t755 = (s153 + s154);
        s155 = (0.5*t755);
        s156 = (0.8660254037844386*(s153 - s154));
        s157 = X[(b36 + 18)];
        s158 = X[(b36 + 72)];
        t756 = (s157 + s158);
        s159 = (0.5*t756);
        s160 = (0.8660254037844386*(s157 - s158));
        t757 = (t755 + t756);
        a158 = (10*i110);
        T5[(((a158 + 90) + (181*threadIdx.x)) + (543*threadIdx.y))] = (s150 + t757);
        T5[(((a158 + 91) + (181*threadIdx.x)) + (543*threadIdx.y))] = 0.0;
        T5[(((a158 + 96) + (181*threadIdx.x)) + (543*threadIdx.y))] = (s150 - (0.5*t757));
        T5[(((a158 + 97) + (181*threadIdx.x)) + (543*threadIdx.y))] = -((0.8660254037844386*(t755 - t756)));
        s161 = ((0.76604444311897812*s155) + (0.64278760968653925*s156));
        s162 = ((0.64278760968653925*s155) - (0.76604444311897812*s156));
        s163 = ((0.17364817766693033*s159) + (0.98480775301220802*s160));
        s164 = ((0.98480775301220802*s159) - (0.17364817766693033*s160));
        t758 = (s161 + s163);
        t759 = (s162 + s164);
        s165 = ((0.5*t758) - s151);
        s166 = (s152 - (0.5*t759));
        s167 = (0.8660254037844386*(s162 - s164));
        s168 = (0.8660254037844386*(s163 - s161));
        T5[(((a158 + 92) + (181*threadIdx.x)) + (543*threadIdx.y))] = -((s151 + t758));
        T5[(((a158 + 93) + (181*threadIdx.x)) + (543*threadIdx.y))] = (s152 + t759);
        T5[(((a158 + 98) + (181*threadIdx.x)) + (543*threadIdx.y))] = (s165 + s167);
        T5[(((a158 + 99) + (181*threadIdx.x)) + (543*threadIdx.y))] = (s166 - s168);
        T5[(((a158 + 94) + (181*threadIdx.x)) + (543*threadIdx.y))] = (s165 - s167);
        T5[(((a158 + 95) + (181*threadIdx.x)) + (543*threadIdx.y))] = -((s166 + s168));
    }
    double s325, s326, s327, s328, s329, s330, s331, s332, 
            s333, s334, s335, s336, s337, s338, s339, s340, 
            s341, s342, s343, s344, s345, s346, s347, s348, 
            s349, s350, s351, s352, s353, s354, s355, s356, 
            s357, s358, s359, s360, s361, s362, s363, s364, 
            s365, s366, s367, s368, s369, s370, s371, s372, 
            t880, t881, t882, t883, t884, t885, t886, t887, 
            t888, t889, t890, t891, t892, t893, t894, t895, 
            t896, t897, t898, t899, t900, t901, t902, t903;
    int a623, a624, a625, a626, a627, a628, a629, a630, 
            a631, a632, a633, a634, a635, a636, a637, a638, 
            a639, a640, a641, b129;
    t880 = (T5[((60 + (181*threadIdx.x)) + (543*threadIdx.y))] + T5[((120 + (181*threadIdx.x)) + (543*threadIdx.y))]);
    s325 = (T5[((181*threadIdx.x) + (543*threadIdx.y))] + t880);
    s326 = (T5[((181*threadIdx.x) + (543*threadIdx.y))] - (0.5*t880));
    s327 = (0.8660254037844386*(T5[((60 + (181*threadIdx.x)) + (543*threadIdx.y))] - T5[((120 + (181*threadIdx.x)) + (543*threadIdx.y))]));
    t881 = (T5[((70 + (181*threadIdx.x)) + (543*threadIdx.y))] + T5[((130 + (181*threadIdx.x)) + (543*threadIdx.y))]);
    s328 = (T5[((10 + (181*threadIdx.x)) + (543*threadIdx.y))] + t881);
    s329 = (T5[((10 + (181*threadIdx.x)) + (543*threadIdx.y))] - (0.5*t881));
    s330 = (0.8660254037844386*(T5[((70 + (181*threadIdx.x)) + (543*threadIdx.y))] - T5[((130 + (181*threadIdx.x)) + (543*threadIdx.y))]));
    t882 = (T5[((80 + (181*threadIdx.x)) + (543*threadIdx.y))] + T5[((140 + (181*threadIdx.x)) + (543*threadIdx.y))]);
    s331 = (T5[((20 + (181*threadIdx.x)) + (543*threadIdx.y))] + t882);
    s332 = (T5[((20 + (181*threadIdx.x)) + (543*threadIdx.y))] - (0.5*t882));
    s333 = (0.8660254037844386*(T5[((80 + (181*threadIdx.x)) + (543*threadIdx.y))] - T5[((140 + (181*threadIdx.x)) + (543*threadIdx.y))]));
    t883 = (T5[((90 + (181*threadIdx.x)) + (543*threadIdx.y))] + T5[((150 + (181*threadIdx.x)) + (543*threadIdx.y))]);
    s334 = (T5[((30 + (181*threadIdx.x)) + (543*threadIdx.y))] + t883);
    s335 = (T5[((30 + (181*threadIdx.x)) + (543*threadIdx.y))] - (0.5*t883));
    s336 = (0.8660254037844386*(T5[((90 + (181*threadIdx.x)) + (543*threadIdx.y))] - T5[((150 + (181*threadIdx.x)) + (543*threadIdx.y))]));
    t884 = (T5[((100 + (181*threadIdx.x)) + (543*threadIdx.y))] + T5[((160 + (181*threadIdx.x)) + (543*threadIdx.y))]);
    s337 = (T5[((40 + (181*threadIdx.x)) + (543*threadIdx.y))] + t884);
    s338 = (T5[((40 + (181*threadIdx.x)) + (543*threadIdx.y))] - (0.5*t884));
    s339 = (0.8660254037844386*(T5[((100 + (181*threadIdx.x)) + (543*threadIdx.y))] - T5[((160 + (181*threadIdx.x)) + (543*threadIdx.y))]));
    t885 = (T5[((110 + (181*threadIdx.x)) + (543*threadIdx.y))] + T5[((170 + (181*threadIdx.x)) + (543*threadIdx.y))]);
    s340 = (T5[((50 + (181*threadIdx.x)) + (543*threadIdx.y))] + t885);
    s341 = (T5[((50 + (181*threadIdx.x)) + (543*threadIdx.y))] - (0.5*t885));
    s342 = (0.8660254037844386*(T5[((110 + (181*threadIdx.x)) + (543*threadIdx.y))] - T5[((170 + (181*threadIdx.x)) + (543*threadIdx.y))]));
    t886 = (s331 + s337);
    s343 = (s325 + t886);
    s344 = (s325 - (0.5*t886));
    s345 = (0.8660254037844386*(s331 - s337));
    t887 = (s334 + s340);
    s346 = (s328 + t887);
    s347 = (s328 - (0.5*t887));
    s348 = (0.8660254037844386*(s334 - s340));
    a623 = ((738*blockIdx.x) + (246*threadIdx.y) + (82*threadIdx.x));
    b129 = ((18*blockIdx.x) + (6*threadIdx.y) + (2*threadIdx.x));
    a624 = (b129 + (13122*(a623 % 82)));
    P1[a624] = (s343 + s346);
    P1[(a624 + 1)] = 0.0;
    a625 = (b129 + (13122*((a623 + 81) % 82)));
    P1[a625] = (s343 - s346);
    P1[(a625 + 1)] = 0.0;
    s349 = ((0.5*s347) - (0.8660254037844386*s348));
    s350 = ((0.8660254037844386*s347) + (0.5*s348));
    a626 = (a623 + 27);
    a627 = ((2*(a626 / 82)) + (13122*(a626 % 82)));
    P1[a627] = (s344 + s349);
    P1[(a627 + 1)] = -((s345 + s350));
    a628 = (a623 + 54);
    a629 = ((2*(a628 / 82)) + (13122*(a628 % 82)));
    P1[a629] = (s344 - s349);
    P1[(a629 + 1)] = (s345 - s350);
    s351 = ((0.5*s335) - (0.8660254037844386*s336));
    s352 = ((0.8660254037844386*s335) + (0.5*s336));
    t888 = (s326 + s351);
    t889 = (s327 + s352);
    t890 = (s326 - s351);
    t891 = (s352 - s327);
    s353 = ((0.93969262078590843*s329) - (0.34202014332566871*s330));
    s354 = ((0.34202014332566871*s329) + (0.93969262078590843*s330));
    s355 = ((0.17364817766693033*s338) - (0.98480775301220802*s339));
    s356 = ((0.98480775301220802*s338) + (0.17364817766693033*s339));
    t892 = (s353 + s355);
    t893 = (s354 + s356);
    t894 = (s353 - s355);
    t895 = (s356 - s354);
    s357 = ((0.5*t894) + (0.8660254037844386*t895));
    s358 = ((0.5*t895) - (0.8660254037844386*t894));
    s359 = ((0.76604444311897812*s332) - (0.64278760968653925*s333));
    s360 = ((0.64278760968653925*s332) + (0.76604444311897812*s333));
    s361 = ((0.17364817766693033*s341) + (0.98480775301220802*s342));
    s362 = ((0.17364817766693033*s342) - (0.98480775301220802*s341));
    t896 = (s359 - s361);
    t897 = (s362 - s360);
    t898 = (s359 + s361);
    t899 = (s360 + s362);
    s363 = ((0.5*t898) + (0.8660254037844386*t899));
    s364 = ((0.5*t899) - (0.8660254037844386*t898));
    t900 = (t892 + t896);
    t901 = (t897 - t893);
    s365 = (t888 - (0.5*t900));
    s366 = (t889 + (0.5*t901));
    s367 = (0.8660254037844386*(t893 + t897));
    s368 = (0.8660254037844386*(t892 - t896));
    a630 = (a623 + 9);
    a631 = ((2*(a630 / 82)) + (13122*(a630 % 82)));
    P1[a631] = (t888 + t900);
    P1[(a631 + 1)] = (t901 - t889);
    a632 = (a623 + 63);
    a633 = ((2*(a632 / 82)) + (13122*(a632 % 82)));
    P1[a633] = (s365 - s367);
    P1[(a633 + 1)] = -((s366 + s368));
    a634 = (a623 + 45);
    a635 = ((2*(a634 / 82)) + (13122*(a634 % 82)));
    P1[a635] = (s365 + s367);
    P1[(a635 + 1)] = (s366 - s368);
    t902 = (s357 - s363);
    t903 = (s358 + s364);
    s369 = (t890 - (0.5*t902));
    s370 = (t891 - (0.5*t903));
    s371 = (0.8660254037844386*(s358 - s364));
    s372 = (0.8660254037844386*(s357 + s363));
    a636 = (a623 + 36);
    a637 = ((2*(a636 / 82)) + (13122*(a636 % 82)));
    P1[a637] = (t890 + t902);
    P1[(a637 + 1)] = (t891 + t903);
    a638 = (a623 + 72);
    a639 = ((2*(a638 / 82)) + (13122*(a638 % 82)));
    P1[a639] = (s369 + s371);
    P1[(a639 + 1)] = (s372 - s370);
    a640 = (a623 + 18);
    a641 = ((2*(a640 / 82)) + (13122*(a640 % 82)));
    P1[a641] = (s369 - s371);
    P1[(a641 + 1)] = -((s370 + s372));
    for(int i106 = 0; i106 <= 3; i106++) {
        double a2066, a2067, a2069, a2070, a2071, a2072, a2073, a2074, 
                a2075, a2076, a2077, a2078, a2079, a2080, a2081, a2082, 
                a2083, a2084, a2085, a2086, a2087, a2088, a2089, a2090, 
                a2091, a2092, a2093, a2094, a2095, a2096, a2097, a2098, 
                a2099, a2100, a2101, a2102, s1000, s1001, s1002, s1003, 
                s1004, s1005, s1006, s1007, s1008, s1009, s1010, s1011, 
                s1012, s1013, s1014, s1015, s1016, s1017, s1018, s1019, 
                s1020, s1021, s1022, s1023, s1024, s1025, s1026, s1027, 
                s1028, s1029, s1030, s1031, s1032, s1033, s1034, s1035, 
                s1036, s1037, s1038, s1039, s1040, s1041, s1042, s1043, 
                s1044, s1045, s1046, s1047, s1048, s1049, s1050, s1051, 
                s1052, s1053, s890, s891, s892, s893, s894, s895, 
                s896, s897, s898, s899, s900, s901, s902, s903, 
                s904, s905, s906, s907, s908, s909, s910, s911, 
                s912, s913, s914, s915, s916, s917, s918, s919, 
                s920, s921, s922, s923, s924, s925, s926, s927, 
                s928, s929, s930, s931, s932, s933, s934, s935, 
                s936, s937, s938, s939, s940, s941, s942, s943, 
                s944, s945, s946, s947, s948, s949, s950, s951, 
                s952, s953, s954, s955, s956, s957, s958, s959, 
                s960, s961, s962, s963, s964, s965, s966, s967, 
                s968, s969, s970, s971, s972, s973, s974, s975, 
                s976, s977, s978, s979, s980, s981, s982, s983, 
                s984, s985, s986, s987, s988, s989, s990, s991, 
                s992, s993, s994, s995, s996, s997, s998, s999, 
                t1252, t1253, t1254, t1255, t1256, t1257, t1258, t1259, 
                t1260, t1261, t1262, t1263, t1264, t1265, t1266, t1267, 
                t1268, t1269, t1270, t1271, t1272, t1273, t1274, t1275, 
                t1276, t1277, t1278, t1279, t1280, t1281, t1282, t1283, 
                t1284, t1285, t1286, t1287, t1288, t1289, t1290, t1291, 
                t1292, t1293, t1294, t1295, t1296, t1297, t1298, t1299, 
                t1300, t1301, t1302, t1303, t1304, t1305, t1306, t1307, 
                t1308, t1309, t1310, t1311, t1312, t1313, t1314, t1315, 
                t1316, t1317, t1318, t1319, t1320, t1321, t1322, t1323, 
                t1324, t1325, t1326, t1327, t1328, t1329, t1330, t1331, 
                t1332, t1333, t1334, t1335;
        int a2064, a2065, a2068, a2103, a2104, a2105, a2106, a2107, 
                a2108, a2109, a2110, a2111, a2112, a2113, a2114, a2115, 
                a2116, a2117, a2118, a2119, a2120, a2121, a2122, a2123, 
                a2124, a2125, a2126, a2127, a2128, a2129, a2130, a2131, 
                a2132, a2133, a2134, a2135, a2136, a2137, a2138, b371, 
                b372, b373;
        a2064 = (2*i106);
        s890 = T5[(((a2064 + 2) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s891 = T5[(((a2064 + 3) + (181*threadIdx.x)) + (543*threadIdx.y))];
        a2065 = (12*i106);
        a2066 = D15[a2065];
        a2067 = D15[(a2065 + 1)];
        s892 = ((a2066*s890) - (a2067*s891));
        s893 = ((a2067*s890) + (a2066*s891));
        s894 = T5[(((a2064 + 62) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s895 = T5[(((a2064 + 63) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s896 = T5[(((a2064 + 122) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s897 = T5[(((a2064 + 123) + (181*threadIdx.x)) + (543*threadIdx.y))];
        a2068 = (24*i106);
        a2069 = D16[a2068];
        a2070 = D16[(a2068 + 1)];
        s898 = ((a2069*s894) - (a2070*s895));
        s899 = ((a2070*s894) + (a2069*s895));
        a2071 = D16[(a2068 + 2)];
        a2072 = D16[(a2068 + 3)];
        s900 = ((a2071*s896) - (a2072*s897));
        s901 = ((a2072*s896) + (a2071*s897));
        t1252 = (s898 + s900);
        t1253 = (s899 + s901);
        s902 = (s892 + t1252);
        s903 = (s893 + t1253);
        s904 = (s892 - (0.5*t1252));
        s905 = (s893 - (0.5*t1253));
        s906 = (0.8660254037844386*(s899 - s901));
        s907 = (0.8660254037844386*(s898 - s900));
        t1254 = (s904 + s906);
        t1255 = (s905 - s907);
        t1256 = (s904 - s906);
        t1257 = (s905 + s907);
        s908 = T5[(((a2064 + 12) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s909 = T5[(((a2064 + 13) + (181*threadIdx.x)) + (543*threadIdx.y))];
        a2073 = D15[(a2065 + 2)];
        a2074 = D15[(a2065 + 3)];
        s910 = ((a2073*s908) - (a2074*s909));
        s911 = ((a2074*s908) + (a2073*s909));
        s912 = T5[(((a2064 + 72) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s913 = T5[(((a2064 + 73) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s914 = T5[(((a2064 + 132) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s915 = T5[(((a2064 + 133) + (181*threadIdx.x)) + (543*threadIdx.y))];
        a2075 = D16[(a2068 + 4)];
        a2076 = D16[(a2068 + 5)];
        s916 = ((a2075*s912) - (a2076*s913));
        s917 = ((a2076*s912) + (a2075*s913));
        a2077 = D16[(a2068 + 6)];
        a2078 = D16[(a2068 + 7)];
        s918 = ((a2077*s914) - (a2078*s915));
        s919 = ((a2078*s914) + (a2077*s915));
        t1258 = (s916 + s918);
        t1259 = (s917 + s919);
        s920 = (s910 + t1258);
        s921 = (s911 + t1259);
        s922 = (s910 - (0.5*t1258));
        s923 = (s911 - (0.5*t1259));
        s924 = (0.8660254037844386*(s917 - s919));
        s925 = (0.8660254037844386*(s916 - s918));
        t1260 = (s922 + s924);
        t1261 = (s923 - s925);
        t1262 = (s922 - s924);
        t1263 = (s923 + s925);
        s926 = ((0.93969262078590843*t1260) + (0.34202014332566871*t1261));
        s927 = ((0.93969262078590843*t1261) - (0.34202014332566871*t1260));
        s928 = ((0.76604444311897812*t1262) + (0.64278760968653925*t1263));
        s929 = ((0.76604444311897812*t1263) - (0.64278760968653925*t1262));
        s930 = T5[(((a2064 + 22) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s931 = T5[(((a2064 + 23) + (181*threadIdx.x)) + (543*threadIdx.y))];
        a2079 = D15[(a2065 + 4)];
        a2080 = D15[(a2065 + 5)];
        s932 = ((a2079*s930) - (a2080*s931));
        s933 = ((a2080*s930) + (a2079*s931));
        s934 = T5[(((a2064 + 82) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s935 = T5[(((a2064 + 83) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s936 = T5[(((a2064 + 142) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s937 = T5[(((a2064 + 143) + (181*threadIdx.x)) + (543*threadIdx.y))];
        a2081 = D16[(a2068 + 8)];
        a2082 = D16[(a2068 + 9)];
        s938 = ((a2081*s934) - (a2082*s935));
        s939 = ((a2082*s934) + (a2081*s935));
        a2083 = D16[(a2068 + 10)];
        a2084 = D16[(a2068 + 11)];
        s940 = ((a2083*s936) - (a2084*s937));
        s941 = ((a2084*s936) + (a2083*s937));
        t1264 = (s938 + s940);
        t1265 = (s939 + s941);
        s942 = (s932 + t1264);
        s943 = (s933 + t1265);
        s944 = (s932 - (0.5*t1264));
        s945 = (s933 - (0.5*t1265));
        s946 = (0.8660254037844386*(s939 - s941));
        s947 = (0.8660254037844386*(s938 - s940));
        t1266 = (s944 + s946);
        t1267 = (s945 - s947);
        t1268 = (s944 - s946);
        t1269 = (s945 + s947);
        s948 = ((0.76604444311897812*t1266) + (0.64278760968653925*t1267));
        s949 = ((0.76604444311897812*t1267) - (0.64278760968653925*t1266));
        s950 = ((0.17364817766693033*t1268) + (0.98480775301220802*t1269));
        s951 = ((0.17364817766693033*t1269) - (0.98480775301220802*t1268));
        s952 = T5[(((a2064 + 32) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s953 = T5[(((a2064 + 33) + (181*threadIdx.x)) + (543*threadIdx.y))];
        a2085 = D15[(a2065 + 6)];
        a2086 = D15[(a2065 + 7)];
        s954 = ((a2085*s952) - (a2086*s953));
        s955 = ((a2086*s952) + (a2085*s953));
        s956 = T5[(((a2064 + 92) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s957 = T5[(((a2064 + 93) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s958 = T5[(((a2064 + 152) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s959 = T5[(((a2064 + 153) + (181*threadIdx.x)) + (543*threadIdx.y))];
        a2087 = D16[(a2068 + 12)];
        a2088 = D16[(a2068 + 13)];
        s960 = ((a2087*s956) - (a2088*s957));
        s961 = ((a2088*s956) + (a2087*s957));
        a2089 = D16[(a2068 + 14)];
        a2090 = D16[(a2068 + 15)];
        s962 = ((a2089*s958) - (a2090*s959));
        s963 = ((a2090*s958) + (a2089*s959));
        t1270 = (s960 + s962);
        t1271 = (s961 + s963);
        s964 = (s954 + t1270);
        s965 = (s955 + t1271);
        s966 = (s954 - (0.5*t1270));
        s967 = (s955 - (0.5*t1271));
        s968 = (0.8660254037844386*(s961 - s963));
        s969 = (0.8660254037844386*(s960 - s962));
        t1272 = (s966 + s968);
        t1273 = (s967 - s969);
        t1274 = (s966 - s968);
        t1275 = (s967 + s969);
        s970 = ((0.5*t1272) + (0.8660254037844386*t1273));
        s971 = ((0.5*t1273) - (0.8660254037844386*t1272));
        s972 = ((0.8660254037844386*t1275) - (0.5*t1274));
        s973 = ((0.8660254037844386*t1274) + (0.5*t1275));
        s974 = T5[(((a2064 + 42) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s975 = T5[(((a2064 + 43) + (181*threadIdx.x)) + (543*threadIdx.y))];
        a2091 = D15[(a2065 + 8)];
        a2092 = D15[(a2065 + 9)];
        s976 = ((a2091*s974) - (a2092*s975));
        s977 = ((a2092*s974) + (a2091*s975));
        s978 = T5[(((a2064 + 102) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s979 = T5[(((a2064 + 103) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s980 = T5[(((a2064 + 162) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s981 = T5[(((a2064 + 163) + (181*threadIdx.x)) + (543*threadIdx.y))];
        a2093 = D16[(a2068 + 16)];
        a2094 = D16[(a2068 + 17)];
        s982 = ((a2093*s978) - (a2094*s979));
        s983 = ((a2094*s978) + (a2093*s979));
        a2095 = D16[(a2068 + 18)];
        a2096 = D16[(a2068 + 19)];
        s984 = ((a2095*s980) - (a2096*s981));
        s985 = ((a2096*s980) + (a2095*s981));
        t1276 = (s982 + s984);
        t1277 = (s983 + s985);
        s986 = (s976 + t1276);
        s987 = (s977 + t1277);
        s988 = (s976 - (0.5*t1276));
        s989 = (s977 - (0.5*t1277));
        s990 = (0.8660254037844386*(s983 - s985));
        s991 = (0.8660254037844386*(s982 - s984));
        t1278 = (s988 + s990);
        t1279 = (s989 - s991);
        t1280 = (s988 - s990);
        t1281 = (s989 + s991);
        s992 = ((0.17364817766693033*t1278) + (0.98480775301220802*t1279));
        s993 = ((0.17364817766693033*t1279) - (0.98480775301220802*t1278));
        s994 = ((0.34202014332566871*t1281) - (0.93969262078590843*t1280));
        s995 = ((0.34202014332566871*t1280) + (0.93969262078590843*t1281));
        s996 = T5[(((a2064 + 52) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s997 = T5[(((a2064 + 53) + (181*threadIdx.x)) + (543*threadIdx.y))];
        a2097 = D15[(a2065 + 10)];
        a2098 = D15[(a2065 + 11)];
        s998 = ((a2097*s996) - (a2098*s997));
        s999 = ((a2098*s996) + (a2097*s997));
        s1000 = T5[(((a2064 + 112) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s1001 = T5[(((a2064 + 113) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s1002 = T5[(((a2064 + 172) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s1003 = T5[(((a2064 + 173) + (181*threadIdx.x)) + (543*threadIdx.y))];
        a2099 = D16[(a2068 + 20)];
        a2100 = D16[(a2068 + 21)];
        s1004 = ((a2099*s1000) - (a2100*s1001));
        s1005 = ((a2100*s1000) + (a2099*s1001));
        a2101 = D16[(a2068 + 22)];
        a2102 = D16[(a2068 + 23)];
        s1006 = ((a2101*s1002) - (a2102*s1003));
        s1007 = ((a2102*s1002) + (a2101*s1003));
        t1282 = (s1004 + s1006);
        t1283 = (s1005 + s1007);
        s1008 = (s998 + t1282);
        s1009 = (s999 + t1283);
        s1010 = (s998 - (0.5*t1282));
        s1011 = (s999 - (0.5*t1283));
        s1012 = (0.8660254037844386*(s1005 - s1007));
        s1013 = (0.8660254037844386*(s1004 - s1006));
        t1284 = (s1010 + s1012);
        t1285 = (s1011 - s1013);
        t1286 = (s1010 - s1012);
        t1287 = (s1011 + s1013);
        s1014 = ((0.98480775301220802*t1285) - (0.17364817766693033*t1284));
        s1015 = ((0.98480775301220802*t1284) + (0.17364817766693033*t1285));
        s1016 = ((0.93969262078590843*t1286) + (0.34202014332566871*t1287));
        s1017 = ((0.34202014332566871*t1286) - (0.93969262078590843*t1287));
        t1288 = (s902 + s964);
        t1289 = (s903 + s965);
        t1290 = (s902 - s964);
        t1291 = (s903 - s965);
        t1292 = (s920 + s986);
        t1293 = (s921 + s987);
        t1294 = (s920 - s986);
        t1295 = (s921 - s987);
        s1018 = ((0.5*t1294) + (0.8660254037844386*t1295));
        s1019 = ((0.5*t1295) - (0.8660254037844386*t1294));
        t1296 = (s942 + s1008);
        t1297 = (s943 + s1009);
        t1298 = (s942 - s1008);
        t1299 = (s943 - s1009);
        s1020 = ((0.8660254037844386*t1299) - (0.5*t1298));
        s1021 = ((0.8660254037844386*t1298) + (0.5*t1299));
        t1300 = (t1292 + t1296);
        t1301 = (t1293 + t1297);
        s1022 = (t1288 - (0.5*t1300));
        s1023 = (t1289 - (0.5*t1301));
        s1024 = (0.8660254037844386*(t1293 - t1297));
        s1025 = (0.8660254037844386*(t1292 - t1296));
        b371 = ((738*blockIdx.x) + (246*threadIdx.y) + (82*threadIdx.x));
        b372 = (b371 + i106);
        a2103 = (b372 + 1);
        a2104 = ((2*(a2103 / 82)) + (13122*(a2103 % 82)));
        P1[a2104] = (t1288 + t1300);
        P1[(a2104 + 1)] = (t1289 + t1301);
        a2105 = (b372 + 55);
        a2106 = ((2*(a2105 / 82)) + (13122*(a2105 % 82)));
        P1[a2106] = (s1022 + s1024);
        P1[(a2106 + 1)] = (s1023 - s1025);
        b373 = (b371 - i106);
        a2107 = (b373 + 53);
        a2108 = ((2*(a2107 / 82)) + (13122*(a2107 % 82)));
        P1[a2108] = (s1022 - s1024);
        P1[(a2108 + 1)] = -((s1023 + s1025));
        t1302 = (s1018 + s1020);
        t1303 = (s1019 - s1021);
        s1026 = (t1290 - (0.5*t1302));
        s1027 = (t1291 - (0.5*t1303));
        s1028 = (0.8660254037844386*(s1019 + s1021));
        s1029 = (0.8660254037844386*(s1018 - s1020));
        a2109 = (b372 + 28);
        a2110 = ((2*(a2109 / 82)) + (13122*(a2109 % 82)));
        P1[a2110] = (t1290 + t1302);
        P1[(a2110 + 1)] = (t1291 + t1303);
        a2111 = (b373 + 80);
        a2112 = ((2*(a2111 / 82)) + (13122*(a2111 % 82)));
        P1[a2112] = (s1026 + s1028);
        P1[(a2112 + 1)] = (s1029 - s1027);
        a2113 = (b373 + 26);
        a2114 = ((2*(a2113 / 82)) + (13122*(a2113 % 82)));
        P1[a2114] = (s1026 - s1028);
        P1[(a2114 + 1)] = -((s1027 + s1029));
        t1304 = (t1254 + s970);
        t1305 = (t1255 + s971);
        t1306 = (t1254 - s970);
        t1307 = (t1255 - s971);
        t1308 = (s926 + s992);
        t1309 = (s927 + s993);
        t1310 = (s926 - s992);
        t1311 = (s927 - s993);
        s1030 = ((0.5*t1310) + (0.8660254037844386*t1311));
        s1031 = ((0.5*t1311) - (0.8660254037844386*t1310));
        t1312 = (s948 + s1014);
        t1313 = (s949 - s1015);
        t1314 = (s948 - s1014);
        t1315 = (s949 + s1015);
        s1032 = ((0.8660254037844386*t1315) - (0.5*t1314));
        s1033 = ((0.8660254037844386*t1314) + (0.5*t1315));
        t1316 = (t1308 + t1312);
        t1317 = (t1309 + t1313);
        s1034 = (t1304 - (0.5*t1316));
        s1035 = (t1305 - (0.5*t1317));
        s1036 = (0.8660254037844386*(t1309 - t1313));
        s1037 = (0.8660254037844386*(t1308 - t1312));
        a2115 = (b372 + 10);
        a2116 = ((2*(a2115 / 82)) + (13122*(a2115 % 82)));
        P1[a2116] = (t1304 + t1316);
        P1[(a2116 + 1)] = (t1305 + t1317);
        a2117 = (b372 + 64);
        a2118 = ((2*(a2117 / 82)) + (13122*(a2117 % 82)));
        P1[a2118] = (s1034 + s1036);
        P1[(a2118 + 1)] = (s1035 - s1037);
        a2119 = (b373 + 44);
        a2120 = ((2*(a2119 / 82)) + (13122*(a2119 % 82)));
        P1[a2120] = (s1034 - s1036);
        P1[(a2120 + 1)] = -((s1035 + s1037));
        t1318 = (s1030 + s1032);
        t1319 = (s1031 - s1033);
        s1038 = (t1306 - (0.5*t1318));
        s1039 = (t1307 - (0.5*t1319));
        s1040 = (0.8660254037844386*(s1031 + s1033));
        s1041 = (0.8660254037844386*(s1030 - s1032));
        a2121 = (b372 + 37);
        a2122 = ((2*(a2121 / 82)) + (13122*(a2121 % 82)));
        P1[a2122] = (t1306 + t1318);
        P1[(a2122 + 1)] = (t1307 + t1319);
        a2123 = (b373 + 71);
        a2124 = ((2*(a2123 / 82)) + (13122*(a2123 % 82)));
        P1[a2124] = (s1038 + s1040);
        P1[(a2124 + 1)] = (s1041 - s1039);
        a2125 = (b373 + 17);
        a2126 = ((2*(a2125 / 82)) + (13122*(a2125 % 82)));
        P1[a2126] = (s1038 - s1040);
        P1[(a2126 + 1)] = -((s1039 + s1041));
        t1320 = (t1256 + s972);
        t1321 = (t1257 - s973);
        t1322 = (t1256 - s972);
        t1323 = (t1257 + s973);
        t1324 = (s928 + s994);
        t1325 = (s929 - s995);
        t1326 = (s928 - s994);
        t1327 = (s929 + s995);
        s1042 = ((0.5*t1326) + (0.8660254037844386*t1327));
        s1043 = ((0.5*t1327) - (0.8660254037844386*t1326));
        t1328 = (s950 - s1016);
        t1329 = (s951 + s1017);
        t1330 = (s950 + s1016);
        t1331 = (s951 - s1017);
        s1044 = ((0.8660254037844386*t1331) - (0.5*t1330));
        s1045 = ((0.8660254037844386*t1330) + (0.5*t1331));
        t1332 = (t1324 + t1328);
        t1333 = (t1325 + t1329);
        s1046 = (t1320 - (0.5*t1332));
        s1047 = (t1321 - (0.5*t1333));
        s1048 = (0.8660254037844386*(t1325 - t1329));
        s1049 = (0.8660254037844386*(t1324 - t1328));
        a2127 = (b372 + 19);
        a2128 = ((2*(a2127 / 82)) + (13122*(a2127 % 82)));
        P1[a2128] = (t1320 + t1332);
        P1[(a2128 + 1)] = (t1321 + t1333);
        a2129 = (b372 + 73);
        a2130 = ((2*(a2129 / 82)) + (13122*(a2129 % 82)));
        P1[a2130] = (s1046 + s1048);
        P1[(a2130 + 1)] = (s1047 - s1049);
        a2131 = (b373 + 35);
        a2132 = ((2*(a2131 / 82)) + (13122*(a2131 % 82)));
        P1[a2132] = (s1046 - s1048);
        P1[(a2132 + 1)] = -((s1047 + s1049));
        t1334 = (s1042 + s1044);
        t1335 = (s1043 - s1045);
        s1050 = (t1322 - (0.5*t1334));
        s1051 = (t1323 - (0.5*t1335));
        s1052 = (0.8660254037844386*(s1043 + s1045));
        s1053 = (0.8660254037844386*(s1042 - s1044));
        a2133 = (b372 + 46);
        a2134 = ((2*(a2133 / 82)) + (13122*(a2133 % 82)));
        P1[a2134] = (t1322 + t1334);
        P1[(a2134 + 1)] = (t1323 + t1335);
        a2135 = (b373 + 62);
        a2136 = ((2*(a2135 / 82)) + (13122*(a2135 % 82)));
        P1[a2136] = (s1050 + s1052);
        P1[(a2136 + 1)] = (s1053 - s1051);
        a2137 = (b373 + 8);
        a2138 = ((2*(a2137 / 82)) + (13122*(a2137 % 82)));
        P1[a2138] = (s1050 - s1052);
        P1[(a2138 + 1)] = -((s1051 + s1053));
    }
}

__global__ void ker_Mdrconv_81_cu1() {
    __shared__ double T170[2925];
    for(int i174 = 0; i174 <= 8; i174++) {
        double a2522, a2523, a2526, a2527, a2528, a2529, a2530, a2531, 
                a2532, a2533, a2534, a2535, a2536, a2537, a2538, a2539, 
                a2540, a2541, s1228, s1229, s1230, s1231, s1232, s1233, 
                s1234, s1235, s1236, s1237, s1238, s1239, s1240, s1241, 
                s1242, s1243, s1244, s1245, s1246, s1247, s1248, s1249, 
                s1250, s1251, s1252, s1253, s1254, s1255, s1256, s1257, 
                s1258, s1259, s1260, s1261, s1262, s1263, s1264, s1265, 
                s1266, s1267, s1268, s1269, s1270, s1271, s1272, s1273, 
                t1448, t1449, t1450, t1451, t1452, t1453, t1454, t1455, 
                t1456, t1457, t1458, t1459, t1460, t1461, t1462, t1463, 
                t1464, t1465, t1466, t1467, t1468, t1469, t1470, t1471, 
                t1472, t1473, t1474, t1475, t1476, t1477, t1478, t1479;
        int a2521, a2524, a2525, b403;
        b403 = ((162*threadIdx.x) + (1458*blockIdx.x) + (486*threadIdx.y) + (2*i174));
        s1228 = P1[(b403 + 54)];
        s1229 = P1[(b403 + 55)];
        s1230 = (0.5*s1228);
        s1231 = (0.5*s1229);
        s1232 = (0.8660254037844386*s1229);
        s1233 = (0.8660254037844386*s1228);
        t1448 = (s1230 + s1232);
        t1449 = (s1233 - s1231);
        t1450 = (s1232 - s1230);
        t1451 = (s1231 + s1233);
        s1234 = P1[(b403 + 90)];
        s1235 = P1[(b403 + 91)];
        s1236 = (0.5*s1234);
        s1237 = (0.5*s1235);
        s1238 = (0.8660254037844386*s1235);
        s1239 = (0.8660254037844386*s1234);
        t1452 = (s1236 + s1238);
        t1453 = (s1239 - s1237);
        t1454 = (s1238 - s1236);
        t1455 = (s1237 + s1239);
        s1240 = ((0.64278760968653925*t1453) - (0.76604444311897812*t1452));
        s1241 = ((0.76604444311897812*t1453) + (0.64278760968653925*t1452));
        s1242 = ((0.17364817766693033*t1454) - (0.98480775301220802*t1455));
        s1243 = ((0.98480775301220802*t1454) + (0.17364817766693033*t1455));
        s1244 = P1[(b403 + 18)];
        s1245 = P1[(b403 + 19)];
        s1246 = P1[(b403 + 126)];
        s1247 = P1[(b403 + 127)];
        t1456 = (s1244 + s1246);
        t1457 = (s1245 + s1247);
        s1248 = (0.5*t1456);
        s1249 = (0.5*t1457);
        s1250 = (0.8660254037844386*(s1245 - s1247));
        s1251 = (0.8660254037844386*(s1244 - s1246));
        t1458 = (s1250 - s1248);
        t1459 = (s1249 + s1251);
        t1460 = (s1248 + s1250);
        t1461 = (s1251 - s1249);
        s1252 = ((0.17364817766693033*t1458) - (0.98480775301220802*t1459));
        s1253 = ((0.98480775301220802*t1458) + (0.17364817766693033*t1459));
        s1254 = ((0.93969262078590843*t1460) + (0.34202014332566871*t1461));
        s1255 = ((0.34202014332566871*t1460) - (0.93969262078590843*t1461));
        t1462 = (s1234 + t1456);
        t1463 = (s1235 + t1457);
        s1256 = (s1228 + t1462);
        s1257 = (s1229 + t1463);
        s1258 = (s1228 - (0.5*t1462));
        s1259 = (s1229 - (0.5*t1463));
        s1260 = (0.8660254037844386*(s1235 - t1457));
        s1261 = (0.8660254037844386*(s1234 - t1456));
        a2521 = (6*i174);
        a2522 = D11[a2521];
        a2523 = D11[(a2521 + 1)];
        a2524 = (18*i174);
        T170[((a2524 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2522*s1256) - (a2523*s1257));
        T170[(((a2524 + 1) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2523*s1256) + (a2522*s1257));
        t1464 = (s1258 + s1260);
        t1465 = (s1259 - s1261);
        t1466 = (s1258 - s1260);
        t1467 = (s1259 + s1261);
        a2525 = (12*i174);
        a2526 = D12[a2525];
        a2527 = D12[(a2525 + 1)];
        a2528 = D12[(a2525 + 2)];
        a2529 = D12[(a2525 + 3)];
        T170[(((a2524 + 6) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2526*t1464) - (a2527*t1465));
        T170[(((a2524 + 7) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2527*t1464) + (a2526*t1465));
        T170[(((a2524 + 12) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2528*t1466) - (a2529*t1467));
        T170[(((a2524 + 13) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2529*t1466) + (a2528*t1467));
        t1468 = (s1240 + s1252);
        t1469 = (s1241 - s1253);
        s1262 = (t1468 - t1448);
        s1263 = (t1449 + t1469);
        s1264 = (t1448 + (0.5*t1468));
        s1265 = (t1449 - (0.5*t1469));
        s1266 = (0.8660254037844386*(s1241 + s1253));
        s1267 = (0.8660254037844386*(s1240 - s1252));
        a2530 = D11[(a2521 + 2)];
        a2531 = D11[(a2521 + 3)];
        T170[(((a2524 + 2) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2530*s1262) - (a2531*s1263));
        T170[(((a2524 + 3) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2531*s1262) + (a2530*s1263));
        t1470 = (s1266 - s1264);
        t1471 = (s1265 - s1267);
        t1472 = (s1264 + s1266);
        t1473 = (s1265 + s1267);
        a2532 = D12[(a2525 + 4)];
        a2533 = D12[(a2525 + 5)];
        a2534 = D12[(a2525 + 6)];
        a2535 = D12[(a2525 + 7)];
        T170[(((a2524 + 8) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2532*t1470) - (a2533*t1471));
        T170[(((a2524 + 9) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2533*t1470) + (a2532*t1471));
        T170[(((a2524 + 14) + (325*threadIdx.x)) + (975*threadIdx.y))] = -(((a2534*t1472) + (a2535*t1473)));
        T170[(((a2524 + 15) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2534*t1473) - (a2535*t1472));
        t1474 = (s1242 + s1254);
        t1475 = (s1255 - s1243);
        s1268 = (t1450 + t1474);
        s1269 = (t1475 - t1451);
        s1270 = (t1450 - (0.5*t1474));
        s1271 = (t1451 + (0.5*t1475));
        s1272 = (0.8660254037844386*(s1243 + s1255));
        s1273 = (0.8660254037844386*(s1242 - s1254));
        a2536 = D11[(a2521 + 4)];
        a2537 = D11[(a2521 + 5)];
        T170[(((a2524 + 4) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2536*s1268) - (a2537*s1269));
        T170[(((a2524 + 5) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2537*s1268) + (a2536*s1269));
        t1476 = (s1270 - s1272);
        t1477 = (s1271 + s1273);
        t1478 = (s1270 + s1272);
        t1479 = (s1273 - s1271);
        a2538 = D12[(a2525 + 8)];
        a2539 = D12[(a2525 + 9)];
        a2540 = D12[(a2525 + 10)];
        a2541 = D12[(a2525 + 11)];
        T170[(((a2524 + 10) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2538*t1476) + (a2539*t1477));
        T170[(((a2524 + 11) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2539*t1476) - (a2538*t1477));
        T170[(((a2524 + 16) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2540*t1478) - (a2541*t1479));
        T170[(((a2524 + 17) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2541*t1478) + (a2540*t1479));
    }
    for(int i175 = 0; i175 <= 8; i175++) {
        double a2938, a2939, a2942, a2943, a2944, a2945, a2946, a2947, 
                a2948, a2949, a2950, a2951, a2952, a2953, a2954, a2955, 
                a2956, a2957, s1454, s1455, s1456, s1457, s1458, s1459, 
                s1460, s1461, s1462, s1463, s1464, s1465, s1466, s1467, 
                s1468, s1469, s1470, s1471, s1472, s1473, s1474, s1475, 
                s1476, s1477, s1478, s1479, s1480, s1481, s1482, s1483, 
                s1484, s1485, s1486, s1487, s1488, s1489, s1490, s1491, 
                s1492, s1493, s1494, s1495, s1496, s1497, s1498, s1499, 
                s1500, s1501, t1602, t1603, t1604, t1605, t1606, t1607, 
                t1608, t1609, t1610, t1611, t1612, t1613, t1614, t1615, 
                t1616, t1617, t1618, t1619, t1620, t1621, t1622, t1623, 
                t1624, t1625, t1626, t1627, t1628, t1629, t1630, t1631, 
                t1632, t1633, t1634, t1635;
        int a2937, a2940, a2941, b437;
        b437 = ((162*threadIdx.x) + (1458*blockIdx.x) + (486*threadIdx.y) + (2*i175));
        s1454 = P1[(b437 + 72)];
        s1455 = P1[(b437 + 73)];
        s1456 = (0.5*s1454);
        s1457 = (0.5*s1455);
        s1458 = (0.8660254037844386*s1455);
        s1459 = (0.8660254037844386*s1454);
        t1602 = (s1456 + s1458);
        t1603 = (s1459 - s1457);
        t1604 = (s1458 - s1456);
        t1605 = (s1457 + s1459);
        s1460 = P1[b437];
        s1461 = P1[(b437 + 1)];
        s1462 = P1[(b437 + 108)];
        s1463 = P1[(b437 + 109)];
        t1606 = (s1460 + s1462);
        t1607 = (s1461 + s1463);
        s1464 = (0.5*t1606);
        s1465 = (0.5*t1607);
        s1466 = (0.8660254037844386*(s1461 - s1463));
        s1467 = (0.8660254037844386*(s1460 - s1462));
        t1608 = (s1466 - s1464);
        t1609 = (s1465 + s1467);
        t1610 = (s1464 + s1466);
        t1611 = (s1467 - s1465);
        s1468 = ((0.76604444311897812*t1608) - (0.64278760968653925*t1609));
        s1469 = ((0.64278760968653925*t1608) + (0.76604444311897812*t1609));
        s1470 = ((0.98480775301220802*t1611) - (0.17364817766693033*t1610));
        s1471 = ((0.17364817766693033*t1611) + (0.98480775301220802*t1610));
        s1472 = P1[(b437 + 36)];
        s1473 = P1[(b437 + 37)];
        s1474 = P1[(b437 + 144)];
        s1475 = P1[(b437 + 145)];
        t1612 = (s1472 + s1474);
        t1613 = (s1473 + s1475);
        s1476 = (0.5*t1612);
        s1477 = (0.5*t1613);
        s1478 = (0.8660254037844386*(s1473 - s1475));
        s1479 = (0.8660254037844386*(s1472 - s1474));
        t1614 = (s1478 - s1476);
        t1615 = (s1477 + s1479);
        t1616 = (s1476 + s1478);
        t1617 = (s1479 - s1477);
        s1480 = ((0.17364817766693033*t1614) - (0.98480775301220802*t1615));
        s1481 = ((0.98480775301220802*t1614) + (0.17364817766693033*t1615));
        s1482 = ((0.93969262078590843*t1616) + (0.34202014332566871*t1617));
        s1483 = ((0.34202014332566871*t1616) - (0.93969262078590843*t1617));
        t1618 = (t1606 + t1612);
        t1619 = (t1607 + t1613);
        s1484 = (s1454 + t1618);
        s1485 = (s1455 + t1619);
        s1486 = (s1454 - (0.5*t1618));
        s1487 = (s1455 - (0.5*t1619));
        s1488 = (0.8660254037844386*(t1607 - t1613));
        s1489 = (0.8660254037844386*(t1606 - t1612));
        a2937 = (6*i175);
        a2938 = D13[a2937];
        a2939 = D13[(a2937 + 1)];
        a2940 = (18*i175);
        T170[(((a2940 + 162) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2938*s1484) - (a2939*s1485));
        T170[(((a2940 + 163) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2939*s1484) + (a2938*s1485));
        t1620 = (s1486 + s1488);
        t1621 = (s1487 - s1489);
        t1622 = (s1486 - s1488);
        t1623 = (s1487 + s1489);
        a2941 = (12*i175);
        a2942 = D14[a2941];
        a2943 = D14[(a2941 + 1)];
        a2944 = D14[(a2941 + 2)];
        a2945 = D14[(a2941 + 3)];
        T170[(((a2940 + 168) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2942*t1620) - (a2943*t1621));
        T170[(((a2940 + 169) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2943*t1620) + (a2942*t1621));
        T170[(((a2940 + 174) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2944*t1622) - (a2945*t1623));
        T170[(((a2940 + 175) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2945*t1622) + (a2944*t1623));
        t1624 = (s1468 + s1480);
        t1625 = (s1469 + s1481);
        s1490 = (t1624 - t1602);
        s1491 = (t1603 - t1625);
        s1492 = (t1602 + (0.5*t1624));
        s1493 = (t1603 + (0.5*t1625));
        s1494 = (0.8660254037844386*(s1481 - s1469));
        s1495 = (0.8660254037844386*(s1468 - s1480));
        a2946 = D13[(a2937 + 2)];
        a2947 = D13[(a2937 + 3)];
        T170[(((a2940 + 164) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2946*s1490) - (a2947*s1491));
        T170[(((a2940 + 165) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2947*s1490) + (a2946*s1491));
        t1626 = (s1494 - s1492);
        t1627 = (s1493 - s1495);
        t1628 = (s1492 + s1494);
        t1629 = (s1493 + s1495);
        a2948 = D14[(a2941 + 4)];
        a2949 = D14[(a2941 + 5)];
        a2950 = D14[(a2941 + 6)];
        a2951 = D14[(a2941 + 7)];
        T170[(((a2940 + 170) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2948*t1626) - (a2949*t1627));
        T170[(((a2940 + 171) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2949*t1626) + (a2948*t1627));
        T170[(((a2940 + 176) + (325*threadIdx.x)) + (975*threadIdx.y))] = -(((a2950*t1628) + (a2951*t1629)));
        T170[(((a2940 + 177) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2950*t1629) - (a2951*t1628));
        t1630 = (s1470 + s1482);
        t1631 = (s1471 + s1483);
        s1496 = (t1604 + t1630);
        s1497 = (t1631 - t1605);
        s1498 = (t1604 - (0.5*t1630));
        s1499 = (t1605 + (0.5*t1631));
        s1500 = (0.8660254037844386*(s1471 - s1483));
        s1501 = (0.8660254037844386*(s1470 - s1482));
        a2952 = D13[(a2937 + 4)];
        a2953 = D13[(a2937 + 5)];
        T170[(((a2940 + 166) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2952*s1496) - (a2953*s1497));
        T170[(((a2940 + 167) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2953*s1496) + (a2952*s1497));
        t1632 = (s1498 + s1500);
        t1633 = (s1499 + s1501);
        t1634 = (s1498 - s1500);
        t1635 = (s1501 - s1499);
        a2954 = D14[(a2941 + 8)];
        a2955 = D14[(a2941 + 9)];
        a2956 = D14[(a2941 + 10)];
        a2957 = D14[(a2941 + 11)];
        T170[(((a2940 + 172) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2954*t1632) + (a2955*t1633));
        T170[(((a2940 + 173) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2955*t1632) - (a2954*t1633));
        T170[(((a2940 + 178) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2956*t1634) - (a2957*t1635));
        T170[(((a2940 + 179) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a2957*t1634) + (a2956*t1635));
    }
    for(int i179 = 0; i179 <= 8; i179++) {
        double s1910, s1911, s1912, s1913, s1914, s1915, s1916, s1917, 
                s1918, s1919, s1920, s1921, s1922, s1923, s1924, s1925, 
                s1926, s1927, s1928, s1929, s1930, s1931, s1932, s1933, 
                s1934, s1935, s1936, s1937, s1938, s1939, s1940, s1941, 
                s1942, s1943, s1944, s1945, s1946, s1947, s1948, s1949, 
                s1950, s1951, s1952, s1953, s1954, s1955, s1956, s1957, 
                s1958, s1959, s1960, s1961, s1962, s1963, s1964, s1965, 
                s1966, s1967, s1968, s1969, s1970, s1971, s1972, s1973, 
                s1974, s1975, s1976, s1977, s1978, s1979, s1980, s1981, 
                s1982, s1983, s1984, s1985, s1986, s1987, s1988, s1989, 
                s1990, s1991, s1992, s1993, s1994, s1995, s1996, s1997, 
                s1998, s1999, s2000, s2001, s2002, s2003, s2004, s2005, 
                s2006, s2007, s2008, s2009, s2010, s2011, s2012, s2013, 
                s2014, s2015, s2016, s2017, s2018, s2019, s2020, s2021, 
                s2022, s2023, s2024, s2025, s2026, s2027, s2028, s2029, 
                s2030, s2031, s2032, s2033, s2034, s2035, s2036, s2037, 
                t1984, t1985, t1986, t1987, t1988, t1989, t1990, t1991, 
                t1992, t1993, t1994, t1995, t1996, t1997, t1998, t1999, 
                t2000, t2001, t2002, t2003, t2004, t2005, t2006, t2007, 
                t2008, t2009, t2010, t2011, t2012, t2013, t2014, t2015, 
                t2016, t2017, t2018, t2019, t2020, t2021, t2022, t2023, 
                t2024, t2025, t2026, t2027, t2028, t2029, t2030, t2031, 
                t2032, t2033, t2034, t2035, t2036, t2037, t2038, t2039, 
                t2040, t2041, t2042, t2043, t2044, t2045, t2046, t2047, 
                t2048, t2049, t2050, t2051, t2052, t2053, t2054, t2055, 
                t2056, t2057, t2058, t2059, t2060, t2061, t2062, t2063, 
                t2064, t2065, t2066, t2067;
        int a4022, a4023, a4024, a4025, a4026, a4027, a4028, a4029, 
                a4030, a4031, a4032, a4033, a4034, a4035, a4036, a4037, 
                a4038, a4039, a4040, a4041, a4042, b689;
        a4022 = (2*i179);
        s1910 = T170[((a4022 + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1911 = T170[(((a4022 + 1) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1912 = T170[(((a4022 + 108) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1913 = T170[(((a4022 + 109) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1914 = T170[(((a4022 + 216) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1915 = T170[(((a4022 + 217) + (325*threadIdx.x)) + (975*threadIdx.y))];
        t1984 = (s1912 + s1914);
        t1985 = (s1913 + s1915);
        s1916 = (s1910 + t1984);
        s1917 = (s1911 + t1985);
        s1918 = (s1910 - (0.5*t1984));
        s1919 = (s1911 - (0.5*t1985));
        s1920 = (0.8660254037844386*(s1913 - s1915));
        s1921 = (0.8660254037844386*(s1912 - s1914));
        t1986 = (s1918 + s1920);
        t1987 = (s1919 - s1921);
        t1988 = (s1918 - s1920);
        t1989 = (s1919 + s1921);
        s1922 = T170[(((a4022 + 18) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1923 = T170[(((a4022 + 19) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1924 = T170[(((a4022 + 126) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1925 = T170[(((a4022 + 127) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1926 = T170[(((a4022 + 234) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1927 = T170[(((a4022 + 235) + (325*threadIdx.x)) + (975*threadIdx.y))];
        t1990 = (s1924 + s1926);
        t1991 = (s1925 + s1927);
        s1928 = (s1922 + t1990);
        s1929 = (s1923 + t1991);
        s1930 = (s1922 - (0.5*t1990));
        s1931 = (s1923 - (0.5*t1991));
        s1932 = (0.8660254037844386*(s1925 - s1927));
        s1933 = (0.8660254037844386*(s1924 - s1926));
        t1992 = (s1930 + s1932);
        t1993 = (s1931 - s1933);
        t1994 = (s1930 - s1932);
        t1995 = (s1931 + s1933);
        s1934 = ((0.93969262078590843*t1992) + (0.34202014332566871*t1993));
        s1935 = ((0.93969262078590843*t1993) - (0.34202014332566871*t1992));
        s1936 = ((0.76604444311897812*t1994) + (0.64278760968653925*t1995));
        s1937 = ((0.76604444311897812*t1995) - (0.64278760968653925*t1994));
        s1938 = T170[(((a4022 + 36) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1939 = T170[(((a4022 + 37) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1940 = T170[(((a4022 + 144) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1941 = T170[(((a4022 + 145) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1942 = T170[(((a4022 + 252) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1943 = T170[(((a4022 + 253) + (325*threadIdx.x)) + (975*threadIdx.y))];
        t1996 = (s1940 + s1942);
        t1997 = (s1941 + s1943);
        s1944 = (s1938 + t1996);
        s1945 = (s1939 + t1997);
        s1946 = (s1938 - (0.5*t1996));
        s1947 = (s1939 - (0.5*t1997));
        s1948 = (0.8660254037844386*(s1941 - s1943));
        s1949 = (0.8660254037844386*(s1940 - s1942));
        t1998 = (s1946 + s1948);
        t1999 = (s1947 - s1949);
        t2000 = (s1946 - s1948);
        t2001 = (s1947 + s1949);
        s1950 = ((0.76604444311897812*t1998) + (0.64278760968653925*t1999));
        s1951 = ((0.76604444311897812*t1999) - (0.64278760968653925*t1998));
        s1952 = ((0.17364817766693033*t2000) + (0.98480775301220802*t2001));
        s1953 = ((0.17364817766693033*t2001) - (0.98480775301220802*t2000));
        s1954 = T170[(((a4022 + 54) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1955 = T170[(((a4022 + 55) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1956 = T170[(((a4022 + 162) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1957 = T170[(((a4022 + 163) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1958 = T170[(((a4022 + 270) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1959 = T170[(((a4022 + 271) + (325*threadIdx.x)) + (975*threadIdx.y))];
        t2002 = (s1956 + s1958);
        t2003 = (s1957 + s1959);
        s1960 = (s1954 + t2002);
        s1961 = (s1955 + t2003);
        s1962 = (s1954 - (0.5*t2002));
        s1963 = (s1955 - (0.5*t2003));
        s1964 = (0.8660254037844386*(s1957 - s1959));
        s1965 = (0.8660254037844386*(s1956 - s1958));
        t2004 = (s1962 + s1964);
        t2005 = (s1963 - s1965);
        t2006 = (s1962 - s1964);
        t2007 = (s1963 + s1965);
        s1966 = ((0.5*t2004) + (0.8660254037844386*t2005));
        s1967 = ((0.5*t2005) - (0.8660254037844386*t2004));
        s1968 = ((0.8660254037844386*t2007) - (0.5*t2006));
        s1969 = ((0.8660254037844386*t2006) + (0.5*t2007));
        s1970 = T170[(((a4022 + 72) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1971 = T170[(((a4022 + 73) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1972 = T170[(((a4022 + 180) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1973 = T170[(((a4022 + 181) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1974 = T170[(((a4022 + 288) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1975 = T170[(((a4022 + 289) + (325*threadIdx.x)) + (975*threadIdx.y))];
        t2008 = (s1972 + s1974);
        t2009 = (s1973 + s1975);
        s1976 = (s1970 + t2008);
        s1977 = (s1971 + t2009);
        s1978 = (s1970 - (0.5*t2008));
        s1979 = (s1971 - (0.5*t2009));
        s1980 = (0.8660254037844386*(s1973 - s1975));
        s1981 = (0.8660254037844386*(s1972 - s1974));
        t2010 = (s1978 + s1980);
        t2011 = (s1979 - s1981);
        t2012 = (s1978 - s1980);
        t2013 = (s1979 + s1981);
        s1982 = ((0.17364817766693033*t2010) + (0.98480775301220802*t2011));
        s1983 = ((0.17364817766693033*t2011) - (0.98480775301220802*t2010));
        s1984 = ((0.34202014332566871*t2013) - (0.93969262078590843*t2012));
        s1985 = ((0.34202014332566871*t2012) + (0.93969262078590843*t2013));
        s1986 = T170[(((a4022 + 90) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1987 = T170[(((a4022 + 91) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1988 = T170[(((a4022 + 198) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1989 = T170[(((a4022 + 199) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1990 = T170[(((a4022 + 306) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s1991 = T170[(((a4022 + 307) + (325*threadIdx.x)) + (975*threadIdx.y))];
        t2014 = (s1988 + s1990);
        t2015 = (s1989 + s1991);
        s1992 = (s1986 + t2014);
        s1993 = (s1987 + t2015);
        s1994 = (s1986 - (0.5*t2014));
        s1995 = (s1987 - (0.5*t2015));
        s1996 = (0.8660254037844386*(s1989 - s1991));
        s1997 = (0.8660254037844386*(s1988 - s1990));
        t2016 = (s1994 + s1996);
        t2017 = (s1995 - s1997);
        t2018 = (s1994 - s1996);
        t2019 = (s1995 + s1997);
        s1998 = ((0.98480775301220802*t2017) - (0.17364817766693033*t2016));
        s1999 = ((0.98480775301220802*t2016) + (0.17364817766693033*t2017));
        s2000 = ((0.93969262078590843*t2018) + (0.34202014332566871*t2019));
        s2001 = ((0.34202014332566871*t2018) - (0.93969262078590843*t2019));
        t2020 = (s1916 + s1960);
        t2021 = (s1917 + s1961);
        t2022 = (s1916 - s1960);
        t2023 = (s1917 - s1961);
        t2024 = (s1928 + s1976);
        t2025 = (s1929 + s1977);
        t2026 = (s1928 - s1976);
        t2027 = (s1929 - s1977);
        s2002 = ((0.5*t2026) + (0.8660254037844386*t2027));
        s2003 = ((0.5*t2027) - (0.8660254037844386*t2026));
        t2028 = (s1944 + s1992);
        t2029 = (s1945 + s1993);
        t2030 = (s1944 - s1992);
        t2031 = (s1945 - s1993);
        s2004 = ((0.8660254037844386*t2031) - (0.5*t2030));
        s2005 = ((0.8660254037844386*t2030) + (0.5*t2031));
        t2032 = (t2024 + t2028);
        t2033 = (t2025 + t2029);
        s2006 = (t2020 - (0.5*t2032));
        s2007 = (t2021 - (0.5*t2033));
        s2008 = (0.8660254037844386*(t2025 - t2029));
        s2009 = (0.8660254037844386*(t2024 - t2028));
        a4023 = (18*blockIdx.x);
        a4024 = ((162*threadIdx.x) + (486*threadIdx.y) + i179);
        b689 = (threadIdx.x + (3*threadIdx.y));
        a4025 = (a4023 + (13284*(a4024 % 162)) + (2*(b689 % 9)));
        P2[a4025] = (t2020 + t2032);
        P2[(a4025 + 1)] = (t2021 + t2033);
        a4026 = (a4023 + (13284*((a4024 + 54) % 162)) + (2*(b689 % 9)));
        P2[a4026] = (s2006 + s2008);
        P2[(a4026 + 1)] = (s2007 - s2009);
        a4027 = (a4023 + (13284*((a4024 + 108) % 162)) + (2*(b689 % 9)));
        P2[a4027] = (s2006 - s2008);
        P2[(a4027 + 1)] = (s2007 + s2009);
        t2034 = (s2002 + s2004);
        t2035 = (s2003 - s2005);
        s2010 = (t2022 - (0.5*t2034));
        s2011 = (t2023 - (0.5*t2035));
        s2012 = (0.8660254037844386*(s2003 + s2005));
        s2013 = (0.8660254037844386*(s2002 - s2004));
        a4028 = (a4023 + (13284*((a4024 + 27) % 162)) + (2*(b689 % 9)));
        P2[a4028] = (t2022 + t2034);
        P2[(a4028 + 1)] = (t2023 + t2035);
        a4029 = (a4023 + (13284*((a4024 + 81) % 162)) + (2*(b689 % 9)));
        P2[a4029] = (s2010 + s2012);
        P2[(a4029 + 1)] = (s2011 - s2013);
        a4030 = (a4023 + (13284*((a4024 + 135) % 162)) + (2*(b689 % 9)));
        P2[a4030] = (s2010 - s2012);
        P2[(a4030 + 1)] = (s2011 + s2013);
        t2036 = (t1986 + s1966);
        t2037 = (t1987 + s1967);
        t2038 = (t1986 - s1966);
        t2039 = (t1987 - s1967);
        t2040 = (s1934 + s1982);
        t2041 = (s1935 + s1983);
        t2042 = (s1934 - s1982);
        t2043 = (s1935 - s1983);
        s2014 = ((0.5*t2042) + (0.8660254037844386*t2043));
        s2015 = ((0.5*t2043) - (0.8660254037844386*t2042));
        t2044 = (s1950 + s1998);
        t2045 = (s1951 - s1999);
        t2046 = (s1950 - s1998);
        t2047 = (s1951 + s1999);
        s2016 = ((0.8660254037844386*t2047) - (0.5*t2046));
        s2017 = ((0.8660254037844386*t2046) + (0.5*t2047));
        t2048 = (t2040 + t2044);
        t2049 = (t2041 + t2045);
        s2018 = (t2036 - (0.5*t2048));
        s2019 = (t2037 - (0.5*t2049));
        s2020 = (0.8660254037844386*(t2041 - t2045));
        s2021 = (0.8660254037844386*(t2040 - t2044));
        a4031 = (a4023 + (13284*((a4024 + 9) % 162)) + (2*(b689 % 9)));
        P2[a4031] = (t2036 + t2048);
        P2[(a4031 + 1)] = (t2037 + t2049);
        a4032 = (a4023 + (13284*((a4024 + 63) % 162)) + (2*(b689 % 9)));
        P2[a4032] = (s2018 + s2020);
        P2[(a4032 + 1)] = (s2019 - s2021);
        a4033 = (a4023 + (13284*((a4024 + 117) % 162)) + (2*(b689 % 9)));
        P2[a4033] = (s2018 - s2020);
        P2[(a4033 + 1)] = (s2019 + s2021);
        t2050 = (s2014 + s2016);
        t2051 = (s2015 - s2017);
        s2022 = (t2038 - (0.5*t2050));
        s2023 = (t2039 - (0.5*t2051));
        s2024 = (0.8660254037844386*(s2015 + s2017));
        s2025 = (0.8660254037844386*(s2014 - s2016));
        a4034 = (a4023 + (13284*((a4024 + 36) % 162)) + (2*(b689 % 9)));
        P2[a4034] = (t2038 + t2050);
        P2[(a4034 + 1)] = (t2039 + t2051);
        a4035 = (a4023 + (13284*((a4024 + 90) % 162)) + (2*(b689 % 9)));
        P2[a4035] = (s2022 + s2024);
        P2[(a4035 + 1)] = (s2023 - s2025);
        a4036 = (a4023 + (13284*((a4024 + 144) % 162)) + (2*(b689 % 9)));
        P2[a4036] = (s2022 - s2024);
        P2[(a4036 + 1)] = (s2023 + s2025);
        t2052 = (t1988 + s1968);
        t2053 = (t1989 - s1969);
        t2054 = (t1988 - s1968);
        t2055 = (t1989 + s1969);
        t2056 = (s1936 + s1984);
        t2057 = (s1937 - s1985);
        t2058 = (s1936 - s1984);
        t2059 = (s1937 + s1985);
        s2026 = ((0.5*t2058) + (0.8660254037844386*t2059));
        s2027 = ((0.5*t2059) - (0.8660254037844386*t2058));
        t2060 = (s1952 - s2000);
        t2061 = (s1953 + s2001);
        t2062 = (s1952 + s2000);
        t2063 = (s1953 - s2001);
        s2028 = ((0.8660254037844386*t2063) - (0.5*t2062));
        s2029 = ((0.8660254037844386*t2062) + (0.5*t2063));
        t2064 = (t2056 + t2060);
        t2065 = (t2057 + t2061);
        s2030 = (t2052 - (0.5*t2064));
        s2031 = (t2053 - (0.5*t2065));
        s2032 = (0.8660254037844386*(t2057 - t2061));
        s2033 = (0.8660254037844386*(t2056 - t2060));
        a4037 = (a4023 + (13284*((a4024 + 18) % 162)) + (2*(b689 % 9)));
        P2[a4037] = (t2052 + t2064);
        P2[(a4037 + 1)] = (t2053 + t2065);
        a4038 = (a4023 + (13284*((a4024 + 72) % 162)) + (2*(b689 % 9)));
        P2[a4038] = (s2030 + s2032);
        P2[(a4038 + 1)] = (s2031 - s2033);
        a4039 = (a4023 + (13284*((a4024 + 126) % 162)) + (2*(b689 % 9)));
        P2[a4039] = (s2030 - s2032);
        P2[(a4039 + 1)] = (s2031 + s2033);
        t2066 = (s2026 + s2028);
        t2067 = (s2027 - s2029);
        s2034 = (t2054 - (0.5*t2066));
        s2035 = (t2055 - (0.5*t2067));
        s2036 = (0.8660254037844386*(s2027 + s2029));
        s2037 = (0.8660254037844386*(s2026 - s2028));
        a4040 = (a4023 + (13284*((a4024 + 45) % 162)) + (2*(b689 % 9)));
        P2[a4040] = (t2054 + t2066);
        P2[(a4040 + 1)] = (t2055 + t2067);
        a4041 = (a4023 + (13284*((a4024 + 99) % 162)) + (2*(b689 % 9)));
        P2[a4041] = (s2034 + s2036);
        P2[(a4041 + 1)] = (s2035 - s2037);
        a4042 = (a4023 + (13284*((a4024 + 153) % 162)) + (2*(b689 % 9)));
        P2[a4042] = (s2034 - s2036);
        P2[(a4042 + 1)] = (s2035 + s2037);
    }
}

__global__ void ker_Mdrconv_81_cu2(double  *sym) {
    __shared__ double T264[3900];
    __shared__ double T265[3900];
    __shared__ double T266[3900];
    for(int i98 = 0; i98 <= 8; i98++) {
        double a4448, a4449, a4452, a4453, a4454, a4455, a4456, a4457, 
                a4458, a4459, a4460, a4461, a4462, a4463, a4464, a4465, 
                a4466, a4467, s2218, s2219, s2220, s2221, s2222, s2223, 
                s2224, s2225, s2226, s2227, s2228, s2229, s2230, s2231, 
                s2232, s2233, s2234, s2235, s2236, s2237, s2238, s2239, 
                s2240, s2241, s2242, s2243, s2244, s2245, s2246, s2247, 
                s2248, s2249, s2250, s2251, s2252, s2253, s2254, s2255, 
                s2256, s2257, s2258, s2259, s2260, s2261, s2262, s2263, 
                s2264, s2265, t2158, t2159, t2160, t2161, t2162, t2163, 
                t2164, t2165, t2166, t2167, t2168, t2169, t2170, t2171, 
                t2172, t2173, t2174, t2175, t2176, t2177, t2178, t2179, 
                t2180, t2181, t2182, t2183;
        int a4446, a4447, a4450, a4451;
        a4446 = ((1944*blockIdx.x) + (162*threadIdx.x) + (486*threadIdx.y) + (2*i98));
        s2218 = P2[a4446];
        s2219 = P2[(a4446 + 1)];
        s2220 = P2[(a4446 + 108)];
        s2221 = P2[(a4446 + 109)];
        s2222 = (s2218 + s2220);
        s2223 = (s2219 + s2221);
        s2224 = (s2218 - (0.5*s2220));
        s2225 = (s2219 - (0.5*s2221));
        s2226 = (0.8660254037844386*s2221);
        s2227 = (0.8660254037844386*s2220);
        t2158 = (s2224 + s2226);
        t2159 = (s2225 - s2227);
        t2160 = (s2224 - s2226);
        t2161 = (s2225 + s2227);
        s2228 = P2[(a4446 + 36)];
        s2229 = P2[(a4446 + 37)];
        s2230 = P2[(a4446 + 144)];
        s2231 = P2[(a4446 + 145)];
        s2232 = (s2228 + s2230);
        s2233 = (s2229 + s2231);
        s2234 = (s2228 - (0.5*s2230));
        s2235 = (s2229 - (0.5*s2231));
        s2236 = (0.8660254037844386*s2231);
        s2237 = (0.8660254037844386*s2230);
        t2162 = (s2234 + s2236);
        t2163 = (s2235 - s2237);
        t2164 = (s2234 - s2236);
        t2165 = (s2235 + s2237);
        s2238 = ((0.76604444311897812*t2162) + (0.64278760968653925*t2163));
        s2239 = ((0.76604444311897812*t2163) - (0.64278760968653925*t2162));
        s2240 = ((0.17364817766693033*t2164) + (0.98480775301220802*t2165));
        s2241 = ((0.17364817766693033*t2165) - (0.98480775301220802*t2164));
        s2242 = P2[(a4446 + 72)];
        s2243 = P2[(a4446 + 73)];
        s2244 = ((0.17364817766693033*s2242) + (0.98480775301220802*s2243));
        s2245 = ((0.17364817766693033*s2243) - (0.98480775301220802*s2242));
        s2246 = ((0.34202014332566871*s2243) - (0.93969262078590843*s2242));
        s2247 = ((0.34202014332566871*s2242) + (0.93969262078590843*s2243));
        t2166 = (s2232 + s2242);
        t2167 = (s2233 + s2243);
        s2248 = (s2222 + t2166);
        s2249 = (s2223 + t2167);
        s2250 = (s2222 - (0.5*t2166));
        s2251 = (s2223 - (0.5*t2167));
        s2252 = (0.8660254037844386*(s2233 - s2243));
        s2253 = (0.8660254037844386*(s2232 - s2242));
        a4447 = (6*i98);
        a4448 = D11[a4447];
        a4449 = D11[(a4447 + 1)];
        a4450 = (18*i98);
        T266[((a4450 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4448*s2248) - (a4449*s2249));
        T266[(((a4450 + 1) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4449*s2248) + (a4448*s2249));
        t2168 = (s2250 + s2252);
        t2169 = (s2251 - s2253);
        t2170 = (s2250 - s2252);
        t2171 = (s2251 + s2253);
        a4451 = (12*i98);
        a4452 = D12[a4451];
        a4453 = D12[(a4451 + 1)];
        a4454 = D12[(a4451 + 2)];
        a4455 = D12[(a4451 + 3)];
        T266[(((a4450 + 6) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4452*t2168) - (a4453*t2169));
        T266[(((a4450 + 7) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4453*t2168) + (a4452*t2169));
        T266[(((a4450 + 12) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4454*t2170) - (a4455*t2171));
        T266[(((a4450 + 13) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4455*t2170) + (a4454*t2171));
        t2172 = (s2238 + s2244);
        t2173 = (s2239 + s2245);
        s2254 = (t2158 + t2172);
        s2255 = (t2159 + t2173);
        s2256 = (t2158 - (0.5*t2172));
        s2257 = (t2159 - (0.5*t2173));
        s2258 = (0.8660254037844386*(s2239 - s2245));
        s2259 = (0.8660254037844386*(s2238 - s2244));
        a4456 = D11[(a4447 + 2)];
        a4457 = D11[(a4447 + 3)];
        T266[(((a4450 + 2) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4456*s2254) - (a4457*s2255));
        T266[(((a4450 + 3) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4457*s2254) + (a4456*s2255));
        t2174 = (s2256 + s2258);
        t2175 = (s2257 - s2259);
        t2176 = (s2256 - s2258);
        t2177 = (s2257 + s2259);
        a4458 = D12[(a4451 + 4)];
        a4459 = D12[(a4451 + 5)];
        a4460 = D12[(a4451 + 6)];
        a4461 = D12[(a4451 + 7)];
        T266[(((a4450 + 8) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4458*t2174) - (a4459*t2175));
        T266[(((a4450 + 9) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4459*t2174) + (a4458*t2175));
        T266[(((a4450 + 14) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4460*t2176) - (a4461*t2177));
        T266[(((a4450 + 15) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4461*t2176) + (a4460*t2177));
        t2178 = (s2240 + s2246);
        t2179 = (s2241 - s2247);
        s2260 = (t2160 + t2178);
        s2261 = (t2161 + t2179);
        s2262 = (t2160 - (0.5*t2178));
        s2263 = (t2161 - (0.5*t2179));
        s2264 = (0.8660254037844386*(s2241 + s2247));
        s2265 = (0.8660254037844386*(s2240 - s2246));
        a4462 = D11[(a4447 + 4)];
        a4463 = D11[(a4447 + 5)];
        T266[(((a4450 + 4) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4462*s2260) - (a4463*s2261));
        T266[(((a4450 + 5) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4463*s2260) + (a4462*s2261));
        t2180 = (s2262 + s2264);
        t2181 = (s2263 - s2265);
        t2182 = (s2262 - s2264);
        t2183 = (s2263 + s2265);
        a4464 = D12[(a4451 + 8)];
        a4465 = D12[(a4451 + 9)];
        a4466 = D12[(a4451 + 10)];
        a4467 = D12[(a4451 + 11)];
        T266[(((a4450 + 10) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4464*t2180) - (a4465*t2181));
        T266[(((a4450 + 11) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4465*t2180) + (a4464*t2181));
        T266[(((a4450 + 16) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4466*t2182) - (a4467*t2183));
        T266[(((a4450 + 17) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4467*t2182) + (a4466*t2183));
    }
    for(int i99 = 0; i99 <= 8; i99++) {
        double a4857, a4858, a4861, a4862, a4863, a4864, a4865, a4866, 
                a4867, a4868, a4869, a4870, a4871, a4872, a4873, a4874, 
                a4875, a4876, s2422, s2423, s2424, s2425, s2426, s2427, 
                s2428, s2429, s2430, s2431, s2432, s2433, s2434, s2435, 
                s2436, s2437, s2438, s2439, s2440, s2441, s2442, s2443, 
                s2444, s2445, s2446, s2447, s2448, s2449, s2450, s2451, 
                s2452, s2453, s2454, s2455, s2456, s2457, s2458, s2459, 
                s2460, s2461, t2262, t2263, t2264, t2265, t2266, t2267, 
                t2268, t2269, t2270, t2271, t2272, t2273, t2274, t2275, 
                t2276, t2277, t2278, t2279, t2280, t2281, t2282, t2283;
        int a4856, a4859, a4860, b749;
        b749 = ((1944*blockIdx.x) + (162*threadIdx.x) + (486*threadIdx.y) + (2*i99));
        s2422 = P2[(b749 + 18)];
        s2423 = P2[(b749 + 19)];
        s2424 = P2[(b749 + 126)];
        s2425 = P2[(b749 + 127)];
        s2426 = (s2422 + s2424);
        s2427 = (s2423 + s2425);
        s2428 = (s2422 - (0.5*s2424));
        s2429 = (s2423 - (0.5*s2425));
        s2430 = (0.8660254037844386*s2425);
        s2431 = (0.8660254037844386*s2424);
        t2262 = (s2428 + s2430);
        t2263 = (s2429 - s2431);
        t2264 = (s2428 - s2430);
        t2265 = (s2429 + s2431);
        s2432 = P2[(b749 + 54)];
        s2433 = P2[(b749 + 55)];
        s2434 = ((0.76604444311897812*s2432) + (0.64278760968653925*s2433));
        s2435 = ((0.76604444311897812*s2433) - (0.64278760968653925*s2432));
        s2436 = ((0.17364817766693033*s2432) + (0.98480775301220802*s2433));
        s2437 = ((0.17364817766693033*s2433) - (0.98480775301220802*s2432));
        s2438 = P2[(b749 + 90)];
        s2439 = P2[(b749 + 91)];
        s2440 = ((0.17364817766693033*s2438) + (0.98480775301220802*s2439));
        s2441 = ((0.17364817766693033*s2439) - (0.98480775301220802*s2438));
        s2442 = ((0.34202014332566871*s2439) - (0.93969262078590843*s2438));
        s2443 = ((0.34202014332566871*s2438) + (0.93969262078590843*s2439));
        t2266 = (s2432 + s2438);
        t2267 = (s2433 + s2439);
        s2444 = (s2426 + t2266);
        s2445 = (s2427 + t2267);
        s2446 = (s2426 - (0.5*t2266));
        s2447 = (s2427 - (0.5*t2267));
        s2448 = (0.8660254037844386*(s2433 - s2439));
        s2449 = (0.8660254037844386*(s2432 - s2438));
        a4856 = (6*i99);
        a4857 = D13[a4856];
        a4858 = D13[(a4856 + 1)];
        a4859 = (18*i99);
        T266[(((a4859 + 162) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4857*s2444) - (a4858*s2445));
        T266[(((a4859 + 163) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4858*s2444) + (a4857*s2445));
        t2268 = (s2446 + s2448);
        t2269 = (s2447 - s2449);
        t2270 = (s2446 - s2448);
        t2271 = (s2447 + s2449);
        a4860 = (12*i99);
        a4861 = D14[a4860];
        a4862 = D14[(a4860 + 1)];
        a4863 = D14[(a4860 + 2)];
        a4864 = D14[(a4860 + 3)];
        T266[(((a4859 + 168) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4861*t2268) - (a4862*t2269));
        T266[(((a4859 + 169) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4862*t2268) + (a4861*t2269));
        T266[(((a4859 + 174) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4863*t2270) - (a4864*t2271));
        T266[(((a4859 + 175) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4864*t2270) + (a4863*t2271));
        t2272 = (s2434 + s2440);
        t2273 = (s2435 + s2441);
        s2450 = (t2262 + t2272);
        s2451 = (t2263 + t2273);
        s2452 = (t2262 - (0.5*t2272));
        s2453 = (t2263 - (0.5*t2273));
        s2454 = (0.8660254037844386*(s2435 - s2441));
        s2455 = (0.8660254037844386*(s2434 - s2440));
        a4865 = D13[(a4856 + 2)];
        a4866 = D13[(a4856 + 3)];
        T266[(((a4859 + 164) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4865*s2450) - (a4866*s2451));
        T266[(((a4859 + 165) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4866*s2450) + (a4865*s2451));
        t2274 = (s2452 + s2454);
        t2275 = (s2453 - s2455);
        t2276 = (s2452 - s2454);
        t2277 = (s2453 + s2455);
        a4867 = D14[(a4860 + 4)];
        a4868 = D14[(a4860 + 5)];
        a4869 = D14[(a4860 + 6)];
        a4870 = D14[(a4860 + 7)];
        T266[(((a4859 + 170) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4867*t2274) - (a4868*t2275));
        T266[(((a4859 + 171) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4868*t2274) + (a4867*t2275));
        T266[(((a4859 + 176) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4869*t2276) - (a4870*t2277));
        T266[(((a4859 + 177) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4870*t2276) + (a4869*t2277));
        t2278 = (s2436 + s2442);
        t2279 = (s2437 - s2443);
        s2456 = (t2264 + t2278);
        s2457 = (t2265 + t2279);
        s2458 = (t2264 - (0.5*t2278));
        s2459 = (t2265 - (0.5*t2279));
        s2460 = (0.8660254037844386*(s2437 + s2443));
        s2461 = (0.8660254037844386*(s2436 - s2442));
        a4871 = D13[(a4856 + 4)];
        a4872 = D13[(a4856 + 5)];
        T266[(((a4859 + 166) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4871*s2456) - (a4872*s2457));
        T266[(((a4859 + 167) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4872*s2456) + (a4871*s2457));
        t2280 = (s2458 + s2460);
        t2281 = (s2459 - s2461);
        t2282 = (s2458 - s2460);
        t2283 = (s2459 + s2461);
        a4873 = D14[(a4860 + 8)];
        a4874 = D14[(a4860 + 9)];
        a4875 = D14[(a4860 + 10)];
        a4876 = D14[(a4860 + 11)];
        T266[(((a4859 + 172) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4873*t2280) - (a4874*t2281));
        T266[(((a4859 + 173) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4874*t2280) + (a4873*t2281));
        T266[(((a4859 + 178) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4875*t2282) - (a4876*t2283));
        T266[(((a4859 + 179) + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a4876*t2282) + (a4875*t2283));
    }
    for(int i103 = 0; i103 <= 8; i103++) {
        double a5579, a5580, a5581, a5582, a5583, a5584, a5585, a5586, 
                a5587, a5588, a5589, a5590, a5591, a5592, a5593, a5594, 
                a5595, a5596, s2942, s2943, s2944, s2945, s2946, s2947, 
                s2948, s2949, s2950, s2951, s2952, s2953, s2954, s2955, 
                s2956, s2957, s2958, s2959, s2960, s2961, s2962, s2963, 
                s2964, s2965, s2966, s2967, s2968, s2969, s2970, s2971, 
                s2972, s2973, s2974, s2975, s2976, s2977, s2978, s2979, 
                s2980, s2981, s2982, s2983, s2984, s2985, s2986, s2987, 
                s2988, s2989, s2990, s2991, s2992, s2993, s2994, s2995, 
                s2996, s2997, s2998, s2999, s3000, s3001, s3002, s3003, 
                s3004, s3005, s3006, s3007, s3008, s3009, s3010, s3011, 
                s3012, s3013, s3014, s3015, s3016, s3017, s3018, s3019, 
                s3020, s3021, s3022, s3023, s3024, s3025, s3026, s3027, 
                s3028, s3029, s3030, s3031, s3032, s3033, s3034, s3035, 
                s3036, s3037, s3038, s3039, s3040, s3041, s3042, s3043, 
                s3044, s3045, s3046, s3047, s3048, s3049, s3050, s3051, 
                s3052, s3053, s3054, s3055, s3056, s3057, s3058, s3059, 
                s3060, s3061, s3062, s3063, s3064, s3065, s3066, s3067, 
                s3068, s3069, t2632, t2633, t2634, t2635, t2636, t2637, 
                t2638, t2639, t2640, t2641, t2642, t2643, t2644, t2645, 
                t2646, t2647, t2648, t2649, t2650, t2651, t2652, t2653, 
                t2654, t2655, t2656, t2657, t2658, t2659, t2660, t2661, 
                t2662, t2663, t2664, t2665, t2666, t2667, t2668, t2669, 
                t2670, t2671, t2672, t2673, t2674, t2675, t2676, t2677, 
                t2678, t2679, t2680, t2681, t2682, t2683, t2684, t2685, 
                t2686, t2687, t2688, t2689, t2690, t2691, t2692, t2693, 
                t2694, t2695, t2696, t2697, t2698, t2699, t2700, t2701, 
                t2702, t2703, t2704, t2705, t2706, t2707, t2708, t2709, 
                t2710, t2711, t2712, t2713, t2714, t2715;
        int a5542, a5543, a5544, a5545, a5546, a5547, a5548, a5549, 
                a5550, a5551, a5552, a5553, a5554, a5555, a5556, a5557, 
                a5558, a5559, a5560, a5561, a5562, a5563, a5564, a5565, 
                a5566, a5567, a5568, a5569, a5570, a5571, a5572, a5573, 
                a5574, a5575, a5576, a5577, a5578;
        a5542 = (2*i103);
        s2942 = T266[((a5542 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5543 = (a5542 + 1);
        s2943 = T266[((a5543 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5544 = (a5542 + 108);
        s2944 = T266[((a5544 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5545 = (a5542 + 109);
        s2945 = T266[((a5545 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5546 = (a5542 + 216);
        s2946 = T266[((a5546 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5547 = (a5542 + 217);
        s2947 = T266[((a5547 + (325*threadIdx.x)) + (975*threadIdx.y))];
        t2632 = (s2944 + s2946);
        t2633 = (s2945 + s2947);
        s2948 = (s2942 + t2632);
        s2949 = (s2943 + t2633);
        s2950 = (s2942 - (0.5*t2632));
        s2951 = (s2943 - (0.5*t2633));
        s2952 = (0.8660254037844386*(s2945 - s2947));
        s2953 = (0.8660254037844386*(s2944 - s2946));
        t2634 = (s2950 + s2952);
        t2635 = (s2951 - s2953);
        t2636 = (s2950 - s2952);
        t2637 = (s2951 + s2953);
        a5548 = (a5542 + 18);
        s2954 = T266[((a5548 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5549 = (a5542 + 19);
        s2955 = T266[((a5549 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5550 = (a5542 + 126);
        s2956 = T266[((a5550 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5551 = (a5542 + 127);
        s2957 = T266[((a5551 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5552 = (a5542 + 234);
        s2958 = T266[((a5552 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5553 = (a5542 + 235);
        s2959 = T266[((a5553 + (325*threadIdx.x)) + (975*threadIdx.y))];
        t2638 = (s2956 + s2958);
        t2639 = (s2957 + s2959);
        s2960 = (s2954 + t2638);
        s2961 = (s2955 + t2639);
        s2962 = (s2954 - (0.5*t2638));
        s2963 = (s2955 - (0.5*t2639));
        s2964 = (0.8660254037844386*(s2957 - s2959));
        s2965 = (0.8660254037844386*(s2956 - s2958));
        t2640 = (s2962 + s2964);
        t2641 = (s2963 - s2965);
        t2642 = (s2962 - s2964);
        t2643 = (s2963 + s2965);
        s2966 = ((0.93969262078590843*t2640) + (0.34202014332566871*t2641));
        s2967 = ((0.93969262078590843*t2641) - (0.34202014332566871*t2640));
        s2968 = ((0.76604444311897812*t2642) + (0.64278760968653925*t2643));
        s2969 = ((0.76604444311897812*t2643) - (0.64278760968653925*t2642));
        a5554 = (a5542 + 36);
        s2970 = T266[((a5554 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5555 = (a5542 + 37);
        s2971 = T266[((a5555 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5556 = (a5542 + 144);
        s2972 = T266[((a5556 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5557 = (a5542 + 145);
        s2973 = T266[((a5557 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5558 = (a5542 + 252);
        s2974 = T266[((a5558 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5559 = (a5542 + 253);
        s2975 = T266[((a5559 + (325*threadIdx.x)) + (975*threadIdx.y))];
        t2644 = (s2972 + s2974);
        t2645 = (s2973 + s2975);
        s2976 = (s2970 + t2644);
        s2977 = (s2971 + t2645);
        s2978 = (s2970 - (0.5*t2644));
        s2979 = (s2971 - (0.5*t2645));
        s2980 = (0.8660254037844386*(s2973 - s2975));
        s2981 = (0.8660254037844386*(s2972 - s2974));
        t2646 = (s2978 + s2980);
        t2647 = (s2979 - s2981);
        t2648 = (s2978 - s2980);
        t2649 = (s2979 + s2981);
        s2982 = ((0.76604444311897812*t2646) + (0.64278760968653925*t2647));
        s2983 = ((0.76604444311897812*t2647) - (0.64278760968653925*t2646));
        s2984 = ((0.17364817766693033*t2648) + (0.98480775301220802*t2649));
        s2985 = ((0.17364817766693033*t2649) - (0.98480775301220802*t2648));
        a5560 = (a5542 + 54);
        s2986 = T266[((a5560 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5561 = (a5542 + 55);
        s2987 = T266[((a5561 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5562 = (a5542 + 162);
        s2988 = T266[((a5562 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5563 = (a5542 + 163);
        s2989 = T266[((a5563 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5564 = (a5542 + 270);
        s2990 = T266[((a5564 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5565 = (a5542 + 271);
        s2991 = T266[((a5565 + (325*threadIdx.x)) + (975*threadIdx.y))];
        t2650 = (s2988 + s2990);
        t2651 = (s2989 + s2991);
        s2992 = (s2986 + t2650);
        s2993 = (s2987 + t2651);
        s2994 = (s2986 - (0.5*t2650));
        s2995 = (s2987 - (0.5*t2651));
        s2996 = (0.8660254037844386*(s2989 - s2991));
        s2997 = (0.8660254037844386*(s2988 - s2990));
        t2652 = (s2994 + s2996);
        t2653 = (s2995 - s2997);
        t2654 = (s2994 - s2996);
        t2655 = (s2995 + s2997);
        s2998 = ((0.5*t2652) + (0.8660254037844386*t2653));
        s2999 = ((0.5*t2653) - (0.8660254037844386*t2652));
        s3000 = ((0.8660254037844386*t2655) - (0.5*t2654));
        s3001 = ((0.8660254037844386*t2654) + (0.5*t2655));
        a5566 = (a5542 + 72);
        s3002 = T266[((a5566 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5567 = (a5542 + 73);
        s3003 = T266[((a5567 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5568 = (a5542 + 180);
        s3004 = T266[((a5568 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5569 = (a5542 + 181);
        s3005 = T266[((a5569 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5570 = (a5542 + 288);
        s3006 = T266[((a5570 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5571 = (a5542 + 289);
        s3007 = T266[((a5571 + (325*threadIdx.x)) + (975*threadIdx.y))];
        t2656 = (s3004 + s3006);
        t2657 = (s3005 + s3007);
        s3008 = (s3002 + t2656);
        s3009 = (s3003 + t2657);
        s3010 = (s3002 - (0.5*t2656));
        s3011 = (s3003 - (0.5*t2657));
        s3012 = (0.8660254037844386*(s3005 - s3007));
        s3013 = (0.8660254037844386*(s3004 - s3006));
        t2658 = (s3010 + s3012);
        t2659 = (s3011 - s3013);
        t2660 = (s3010 - s3012);
        t2661 = (s3011 + s3013);
        s3014 = ((0.17364817766693033*t2658) + (0.98480775301220802*t2659));
        s3015 = ((0.17364817766693033*t2659) - (0.98480775301220802*t2658));
        s3016 = ((0.34202014332566871*t2661) - (0.93969262078590843*t2660));
        s3017 = ((0.34202014332566871*t2660) + (0.93969262078590843*t2661));
        a5572 = (a5542 + 90);
        s3018 = T266[((a5572 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5573 = (a5542 + 91);
        s3019 = T266[((a5573 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5574 = (a5542 + 198);
        s3020 = T266[((a5574 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5575 = (a5542 + 199);
        s3021 = T266[((a5575 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5576 = (a5542 + 306);
        s3022 = T266[((a5576 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5577 = (a5542 + 307);
        s3023 = T266[((a5577 + (325*threadIdx.x)) + (975*threadIdx.y))];
        t2662 = (s3020 + s3022);
        t2663 = (s3021 + s3023);
        s3024 = (s3018 + t2662);
        s3025 = (s3019 + t2663);
        s3026 = (s3018 - (0.5*t2662));
        s3027 = (s3019 - (0.5*t2663));
        s3028 = (0.8660254037844386*(s3021 - s3023));
        s3029 = (0.8660254037844386*(s3020 - s3022));
        t2664 = (s3026 + s3028);
        t2665 = (s3027 - s3029);
        t2666 = (s3026 - s3028);
        t2667 = (s3027 + s3029);
        s3030 = ((0.98480775301220802*t2665) - (0.17364817766693033*t2664));
        s3031 = ((0.98480775301220802*t2664) + (0.17364817766693033*t2665));
        s3032 = ((0.93969262078590843*t2666) + (0.34202014332566871*t2667));
        s3033 = ((0.34202014332566871*t2666) - (0.93969262078590843*t2667));
        t2668 = (s2948 + s2992);
        t2669 = (s2949 + s2993);
        t2670 = (s2948 - s2992);
        t2671 = (s2949 - s2993);
        t2672 = (s2960 + s3008);
        t2673 = (s2961 + s3009);
        t2674 = (s2960 - s3008);
        t2675 = (s2961 - s3009);
        s3034 = ((0.5*t2674) + (0.8660254037844386*t2675));
        s3035 = ((0.5*t2675) - (0.8660254037844386*t2674));
        t2676 = (s2976 + s3024);
        t2677 = (s2977 + s3025);
        t2678 = (s2976 - s3024);
        t2679 = (s2977 - s3025);
        s3036 = ((0.8660254037844386*t2679) - (0.5*t2678));
        s3037 = ((0.8660254037844386*t2678) + (0.5*t2679));
        t2680 = (t2672 + t2676);
        t2681 = (t2673 + t2677);
        s3038 = (t2668 - (0.5*t2680));
        s3039 = (t2669 - (0.5*t2681));
        s3040 = (0.8660254037844386*(t2673 - t2677));
        s3041 = (0.8660254037844386*(t2672 - t2676));
        a5578 = ((12*i36) + i39 + (3*i43) + (6*i44) + (13284*i103));
        a5579 = sym[a5578];
        T265[((a5542 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5579*(t2668 + t2680));
        T265[((a5543 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5579*(t2669 + t2681));
        a5580 = sym[(a5578 + 717336)];
        a5581 = sym[(a5578 + 1434672)];
        T265[((a5544 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5580*(s3038 + s3040));
        T265[((a5545 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5580*(s3039 - s3041));
        T265[((a5546 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5581*(s3038 - s3040));
        T265[((a5547 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5581*(s3039 + s3041));
        t2682 = (s3034 + s3036);
        t2683 = (s3035 - s3037);
        s3042 = (t2670 - (0.5*t2682));
        s3043 = (t2671 - (0.5*t2683));
        s3044 = (0.8660254037844386*(s3035 + s3037));
        s3045 = (0.8660254037844386*(s3034 - s3036));
        a5582 = sym[(a5578 + 358668)];
        T265[((a5560 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5582*(t2670 + t2682));
        T265[((a5561 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5582*(t2671 + t2683));
        a5583 = sym[(a5578 + 1076004)];
        a5584 = sym[(a5578 + 1793340)];
        T265[((a5562 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5583*(s3042 + s3044));
        T265[((a5563 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5583*(s3043 - s3045));
        T265[((a5564 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5584*(s3042 - s3044));
        T265[((a5565 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5584*(s3043 + s3045));
        t2684 = (t2634 + s2998);
        t2685 = (t2635 + s2999);
        t2686 = (t2634 - s2998);
        t2687 = (t2635 - s2999);
        t2688 = (s2966 + s3014);
        t2689 = (s2967 + s3015);
        t2690 = (s2966 - s3014);
        t2691 = (s2967 - s3015);
        s3046 = ((0.5*t2690) + (0.8660254037844386*t2691));
        s3047 = ((0.5*t2691) - (0.8660254037844386*t2690));
        t2692 = (s2982 + s3030);
        t2693 = (s2983 - s3031);
        t2694 = (s2982 - s3030);
        t2695 = (s2983 + s3031);
        s3048 = ((0.8660254037844386*t2695) - (0.5*t2694));
        s3049 = ((0.8660254037844386*t2694) + (0.5*t2695));
        t2696 = (t2688 + t2692);
        t2697 = (t2689 + t2693);
        s3050 = (t2684 - (0.5*t2696));
        s3051 = (t2685 - (0.5*t2697));
        s3052 = (0.8660254037844386*(t2689 - t2693));
        s3053 = (0.8660254037844386*(t2688 - t2692));
        a5585 = sym[(a5578 + 119556)];
        T265[((a5548 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5585*(t2684 + t2696));
        T265[((a5549 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5585*(t2685 + t2697));
        a5586 = sym[(a5578 + 836892)];
        a5587 = sym[(a5578 + 1554228)];
        T265[((a5550 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5586*(s3050 + s3052));
        T265[((a5551 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5586*(s3051 - s3053));
        T265[((a5552 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5587*(s3050 - s3052));
        T265[((a5553 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5587*(s3051 + s3053));
        t2698 = (s3046 + s3048);
        t2699 = (s3047 - s3049);
        s3054 = (t2686 - (0.5*t2698));
        s3055 = (t2687 - (0.5*t2699));
        s3056 = (0.8660254037844386*(s3047 + s3049));
        s3057 = (0.8660254037844386*(s3046 - s3048));
        a5588 = sym[(a5578 + 478224)];
        T265[((a5566 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5588*(t2686 + t2698));
        T265[((a5567 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5588*(t2687 + t2699));
        a5589 = sym[(a5578 + 1195560)];
        a5590 = sym[(a5578 + 1912896)];
        T265[((a5568 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5589*(s3054 + s3056));
        T265[((a5569 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5589*(s3055 - s3057));
        T265[((a5570 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5590*(s3054 - s3056));
        T265[((a5571 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5590*(s3055 + s3057));
        t2700 = (t2636 + s3000);
        t2701 = (t2637 - s3001);
        t2702 = (t2636 - s3000);
        t2703 = (t2637 + s3001);
        t2704 = (s2968 + s3016);
        t2705 = (s2969 - s3017);
        t2706 = (s2968 - s3016);
        t2707 = (s2969 + s3017);
        s3058 = ((0.5*t2706) + (0.8660254037844386*t2707));
        s3059 = ((0.5*t2707) - (0.8660254037844386*t2706));
        t2708 = (s2984 - s3032);
        t2709 = (s2985 + s3033);
        t2710 = (s2984 + s3032);
        t2711 = (s2985 - s3033);
        s3060 = ((0.8660254037844386*t2711) - (0.5*t2710));
        s3061 = ((0.8660254037844386*t2710) + (0.5*t2711));
        t2712 = (t2704 + t2708);
        t2713 = (t2705 + t2709);
        s3062 = (t2700 - (0.5*t2712));
        s3063 = (t2701 - (0.5*t2713));
        s3064 = (0.8660254037844386*(t2705 - t2709));
        s3065 = (0.8660254037844386*(t2704 - t2708));
        a5591 = sym[(a5578 + 239112)];
        T265[((a5554 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5591*(t2700 + t2712));
        T265[((a5555 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5591*(t2701 + t2713));
        a5592 = sym[(a5578 + 956448)];
        a5593 = sym[(a5578 + 1673784)];
        T265[((a5556 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5592*(s3062 + s3064));
        T265[((a5557 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5592*(s3063 - s3065));
        T265[((a5558 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5593*(s3062 - s3064));
        T265[((a5559 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5593*(s3063 + s3065));
        t2714 = (s3058 + s3060);
        t2715 = (s3059 - s3061);
        s3066 = (t2702 - (0.5*t2714));
        s3067 = (t2703 - (0.5*t2715));
        s3068 = (0.8660254037844386*(s3059 + s3061));
        s3069 = (0.8660254037844386*(s3058 - s3060));
        a5594 = sym[(a5578 + 597780)];
        T265[((a5572 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5594*(t2702 + t2714));
        T265[((a5573 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5594*(t2703 + t2715));
        a5595 = sym[(a5578 + 1315116)];
        a5596 = sym[(a5578 + 2032452)];
        T265[((a5574 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5595*(s3066 + s3068));
        T265[((a5575 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5595*(s3067 - s3069));
        T265[((a5576 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5596*(s3066 - s3068));
        T265[((a5577 + (325*threadIdx.x)) + (975*threadIdx.y))] = (a5596*(s3067 + s3069));
    }
    for(int i95 = 0; i95 <= 17; i95++) {
        double a6010, a6011, a6013, a6014, a6015, a6016, a6017, a6018, 
                a6019, a6020, a6021, a6022, a6023, a6024, a6025, a6026, 
                a6027, a6028, s3292, s3293, s3294, s3295, s3296, s3297, 
                s3298, s3299, s3300, s3301, s3302, s3303, s3304, s3305, 
                s3306, s3307, s3308, s3309, s3310, s3311, s3312, s3313, 
                s3314, s3315, s3316, s3317, s3318, s3319, s3320, s3321, 
                s3322, s3323, s3324, s3325, s3326, s3327, s3328, s3329, 
                s3330, s3331, s3332, s3333, s3334, s3335, s3336, s3337, 
                s3338, s3339, s3340, s3341, s3342, s3343, s3344, s3345, 
                s3346, s3347, s3348, s3349, s3350, s3351, s3352, s3353, 
                t2848, t2849, t2850, t2851, t2852, t2853, t2854, t2855, 
                t2856, t2857, t2858, t2859, t2860, t2861, t2862, t2863, 
                t2864, t2865, t2866, t2867, t2868, t2869, t2870, t2871, 
                t2872, t2873, t2874, t2875, t2876, t2877, t2878, t2879, 
                t2880, t2881, t2882, t2883;
        int a5991, a5992, a5993, a5994, a5995, a5996, a5997, a5998, 
                a5999, a6000, a6001, a6002, a6003, a6004, a6005, a6006, 
                a6007, a6008, a6009, a6012;
        a5991 = (2*i95);
        s3292 = T265[((a5991 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5992 = (a5991 + 1);
        s3293 = T265[((a5992 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5993 = (a5991 + 108);
        s3294 = T265[((a5993 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5994 = (a5991 + 109);
        s3295 = T265[((a5994 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5995 = (a5991 + 216);
        s3296 = T265[((a5995 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5996 = (a5991 + 217);
        s3297 = T265[((a5996 + (325*threadIdx.x)) + (975*threadIdx.y))];
        t2848 = (s3294 + s3296);
        t2849 = (s3295 + s3297);
        s3298 = (s3292 + t2848);
        s3299 = (s3293 + t2849);
        s3300 = (s3292 - (0.5*t2848));
        s3301 = (s3293 - (0.5*t2849));
        s3302 = (0.8660254037844386*(s3295 - s3297));
        s3303 = (0.8660254037844386*(s3294 - s3296));
        t2850 = (s3300 - s3302);
        t2851 = (s3301 + s3303);
        t2852 = (s3300 + s3302);
        t2853 = (s3301 - s3303);
        a5997 = (a5991 + 36);
        s3304 = T265[((a5997 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5998 = (a5991 + 37);
        s3305 = T265[((a5998 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a5999 = (a5991 + 144);
        s3306 = T265[((a5999 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a6000 = (a5991 + 145);
        s3307 = T265[((a6000 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a6001 = (a5991 + 252);
        s3308 = T265[((a6001 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a6002 = (a5991 + 253);
        s3309 = T265[((a6002 + (325*threadIdx.x)) + (975*threadIdx.y))];
        t2854 = (s3306 + s3308);
        t2855 = (s3307 + s3309);
        s3310 = (s3304 + t2854);
        s3311 = (s3305 + t2855);
        s3312 = (s3304 - (0.5*t2854));
        s3313 = (s3305 - (0.5*t2855));
        s3314 = (0.8660254037844386*(s3307 - s3309));
        s3315 = (0.8660254037844386*(s3306 - s3308));
        t2856 = (s3312 - s3314);
        t2857 = (s3313 + s3315);
        t2858 = (s3312 + s3314);
        t2859 = (s3313 - s3315);
        s3316 = ((0.76604444311897812*t2856) - (0.64278760968653925*t2857));
        s3317 = ((0.64278760968653925*t2856) + (0.76604444311897812*t2857));
        s3318 = ((0.17364817766693033*t2858) - (0.98480775301220802*t2859));
        s3319 = ((0.98480775301220802*t2858) + (0.17364817766693033*t2859));
        a6003 = (a5991 + 72);
        s3320 = T265[((a6003 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a6004 = (a5991 + 73);
        s3321 = T265[((a6004 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a6005 = (a5991 + 180);
        s3322 = T265[((a6005 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a6006 = (a5991 + 181);
        s3323 = T265[((a6006 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a6007 = (a5991 + 288);
        s3324 = T265[((a6007 + (325*threadIdx.x)) + (975*threadIdx.y))];
        a6008 = (a5991 + 289);
        s3325 = T265[((a6008 + (325*threadIdx.x)) + (975*threadIdx.y))];
        t2860 = (s3322 + s3324);
        t2861 = (s3323 + s3325);
        s3326 = (s3320 + t2860);
        s3327 = (s3321 + t2861);
        s3328 = (s3320 - (0.5*t2860));
        s3329 = (s3321 - (0.5*t2861));
        s3330 = (0.8660254037844386*(s3323 - s3325));
        s3331 = (0.8660254037844386*(s3322 - s3324));
        t2862 = (s3328 - s3330);
        t2863 = (s3329 + s3331);
        t2864 = (s3328 + s3330);
        t2865 = (s3329 - s3331);
        s3332 = ((0.17364817766693033*t2862) - (0.98480775301220802*t2863));
        s3333 = ((0.98480775301220802*t2862) + (0.17364817766693033*t2863));
        s3334 = ((0.93969262078590843*t2864) + (0.34202014332566871*t2865));
        s3335 = ((0.34202014332566871*t2864) - (0.93969262078590843*t2865));
        t2866 = (s3310 + s3326);
        t2867 = (s3311 + s3327);
        s3336 = (s3298 + t2866);
        s3337 = (s3299 + t2867);
        s3338 = (s3298 - (0.5*t2866));
        s3339 = (s3299 - (0.5*t2867));
        s3340 = (0.8660254037844386*(s3311 - s3327));
        s3341 = (0.8660254037844386*(s3310 - s3326));
        a6009 = (6*i95);
        a6010 = D5[a6009];
        a6011 = D5[(a6009 + 1)];
        T264[((a5991 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6010*s3336) - (a6011*s3337));
        T264[((a5992 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6011*s3336) + (a6010*s3337));
        t2868 = (s3338 - s3340);
        t2869 = (s3339 + s3341);
        t2870 = (s3338 + s3340);
        t2871 = (s3339 - s3341);
        a6012 = (12*i95);
        a6013 = D6[a6012];
        a6014 = D6[(a6012 + 1)];
        a6015 = D6[(a6012 + 2)];
        a6016 = D6[(a6012 + 3)];
        T264[((a5993 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6013*t2868) - (a6014*t2869));
        T264[((a5994 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6014*t2868) + (a6013*t2869));
        T264[((a5995 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6015*t2870) - (a6016*t2871));
        T264[((a5996 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6016*t2870) + (a6015*t2871));
        t2872 = (s3316 + s3332);
        t2873 = (s3317 + s3333);
        s3342 = (t2850 + t2872);
        s3343 = (t2851 + t2873);
        s3344 = (t2850 - (0.5*t2872));
        s3345 = (t2851 - (0.5*t2873));
        s3346 = (0.8660254037844386*(s3317 - s3333));
        s3347 = (0.8660254037844386*(s3316 - s3332));
        a6017 = D5[(a6009 + 2)];
        a6018 = D5[(a6009 + 3)];
        T264[((a5997 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6017*s3342) - (a6018*s3343));
        T264[((a5998 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6018*s3342) + (a6017*s3343));
        t2874 = (s3344 - s3346);
        t2875 = (s3345 + s3347);
        t2876 = (s3344 + s3346);
        t2877 = (s3345 - s3347);
        a6019 = D6[(a6012 + 4)];
        a6020 = D6[(a6012 + 5)];
        a6021 = D6[(a6012 + 6)];
        a6022 = D6[(a6012 + 7)];
        T264[((a5999 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6019*t2874) - (a6020*t2875));
        T264[((a6000 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6020*t2874) + (a6019*t2875));
        T264[((a6001 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6021*t2876) - (a6022*t2877));
        T264[((a6002 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6022*t2876) + (a6021*t2877));
        t2878 = (s3318 - s3334);
        t2879 = (s3319 + s3335);
        s3348 = (t2852 + t2878);
        s3349 = (t2853 + t2879);
        s3350 = (t2852 - (0.5*t2878));
        s3351 = (t2853 - (0.5*t2879));
        s3352 = (0.8660254037844386*(s3319 - s3335));
        s3353 = (0.8660254037844386*(s3318 + s3334));
        a6023 = D5[(a6009 + 4)];
        a6024 = D5[(a6009 + 5)];
        T264[((a6003 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6023*s3348) - (a6024*s3349));
        T264[((a6004 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6024*s3348) + (a6023*s3349));
        t2880 = (s3350 - s3352);
        t2881 = (s3351 + s3353);
        t2882 = (s3350 + s3352);
        t2883 = (s3351 - s3353);
        a6025 = D6[(a6012 + 8)];
        a6026 = D6[(a6012 + 9)];
        a6027 = D6[(a6012 + 10)];
        a6028 = D6[(a6012 + 11)];
        T264[((a6005 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6025*t2880) - (a6026*t2881));
        T264[((a6006 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6026*t2880) + (a6025*t2881));
        T264[((a6007 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6027*t2882) - (a6028*t2883));
        T264[((a6008 + (325*threadIdx.x)) + (975*threadIdx.y))] = ((a6028*t2882) + (a6027*t2883));
    }
    for(int i93 = 0; i93 <= 8; i93++) {
        double s3738, s3739, s3740, s3741, s3742, s3743, s3744, s3745, 
                s3746, s3747, s3748, s3749, s3750, s3751, s3752, s3753, 
                s3754, s3755, s3756, s3757, s3758, s3759, s3760, s3761, 
                s3762, s3763, s3764, s3765, s3766, s3767, s3768, s3769, 
                s3770, s3771, s3772, s3773, s3774, s3775, s3776, s3777, 
                s3778, s3779, s3780, s3781, s3782, s3783, s3784, s3785, 
                s3786, s3787, s3788, s3789, s3790, s3791, s3792, s3793, 
                s3794, s3795, s3796, s3797, s3798, s3799, s3800, s3801, 
                s3802, s3803, s3804, s3805, s3806, s3807, s3808, s3809, 
                s3810, s3811, s3812, s3813, s3814, s3815, s3816, s3817, 
                s3818, s3819, s3820, s3821, s3822, s3823, s3824, s3825, 
                s3826, s3827, s3828, s3829, s3830, s3831, s3832, s3833, 
                s3834, s3835, s3836, s3837, s3838, s3839, s3840, s3841, 
                s3842, s3843, s3844, s3845, s3846, s3847, s3848, s3849, 
                s3850, s3851, s3852, s3853, t3202, t3203, t3204, t3205, 
                t3206, t3207, t3208, t3209, t3210, t3211, t3212, t3213, 
                t3214, t3215, t3216, t3217, t3218, t3219, t3220, t3221, 
                t3222, t3223, t3224, t3225, t3226, t3227, t3228, t3229, 
                t3230, t3231, t3232, t3233, t3234, t3235, t3236, t3237, 
                t3238, t3239, t3240, t3241, t3242, t3243, t3244, t3245, 
                t3246, t3247, t3248, t3249, t3250, t3251, t3252, t3253, 
                t3254, t3255, t3256, t3257, t3258, t3259, t3260, t3261;
        int a6424, b952;
        a6424 = (36*i93);
        s3738 = T264[((a6424 + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3739 = T264[(((a6424 + 1) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3740 = T264[(((a6424 + 12) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3741 = T264[(((a6424 + 13) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3742 = T264[(((a6424 + 24) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3743 = T264[(((a6424 + 25) + (325*threadIdx.x)) + (975*threadIdx.y))];
        t3202 = (s3740 + s3742);
        t3203 = (s3741 + s3743);
        s3744 = (s3738 + t3202);
        s3745 = (s3739 + t3203);
        s3746 = (s3738 - (0.5*t3202));
        s3747 = (s3739 - (0.5*t3203));
        s3748 = (0.8660254037844386*(s3741 - s3743));
        s3749 = (0.8660254037844386*(s3740 - s3742));
        t3204 = (s3746 - s3748);
        t3205 = (s3747 + s3749);
        t3206 = (s3746 + s3748);
        t3207 = (s3747 - s3749);
        s3750 = T264[(((a6424 + 2) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3751 = T264[(((a6424 + 3) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3752 = T264[(((a6424 + 14) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3753 = T264[(((a6424 + 15) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3754 = T264[(((a6424 + 26) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3755 = T264[(((a6424 + 27) + (325*threadIdx.x)) + (975*threadIdx.y))];
        t3208 = (s3752 + s3754);
        t3209 = (s3753 + s3755);
        s3756 = (s3750 + t3208);
        s3757 = (s3751 + t3209);
        s3758 = (s3750 - (0.5*t3208));
        s3759 = (s3751 - (0.5*t3209));
        s3760 = (0.8660254037844386*(s3753 - s3755));
        s3761 = (0.8660254037844386*(s3752 - s3754));
        t3210 = (s3758 - s3760);
        t3211 = (s3759 + s3761);
        t3212 = (s3758 + s3760);
        t3213 = (s3759 - s3761);
        s3762 = ((0.93969262078590843*t3210) - (0.34202014332566871*t3211));
        s3763 = ((0.34202014332566871*t3210) + (0.93969262078590843*t3211));
        s3764 = ((0.76604444311897812*t3212) - (0.64278760968653925*t3213));
        s3765 = ((0.64278760968653925*t3212) + (0.76604444311897812*t3213));
        s3766 = T264[(((a6424 + 4) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3767 = T264[(((a6424 + 5) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3768 = T264[(((a6424 + 16) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3769 = T264[(((a6424 + 17) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3770 = T264[(((a6424 + 28) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3771 = T264[(((a6424 + 29) + (325*threadIdx.x)) + (975*threadIdx.y))];
        t3214 = (s3768 + s3770);
        t3215 = (s3769 + s3771);
        s3772 = (s3766 + t3214);
        s3773 = (s3767 + t3215);
        s3774 = (s3766 - (0.5*t3214));
        s3775 = (s3767 - (0.5*t3215));
        s3776 = (0.8660254037844386*(s3769 - s3771));
        s3777 = (0.8660254037844386*(s3768 - s3770));
        t3216 = (s3774 - s3776);
        t3217 = (s3775 + s3777);
        t3218 = (s3774 + s3776);
        t3219 = (s3775 - s3777);
        s3778 = ((0.76604444311897812*t3216) - (0.64278760968653925*t3217));
        s3779 = ((0.64278760968653925*t3216) + (0.76604444311897812*t3217));
        s3780 = ((0.17364817766693033*t3218) - (0.98480775301220802*t3219));
        s3781 = ((0.98480775301220802*t3218) + (0.17364817766693033*t3219));
        s3782 = T264[(((a6424 + 6) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3783 = T264[(((a6424 + 7) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3784 = T264[(((a6424 + 18) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3785 = T264[(((a6424 + 19) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3786 = T264[(((a6424 + 30) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3787 = T264[(((a6424 + 31) + (325*threadIdx.x)) + (975*threadIdx.y))];
        t3220 = (s3784 + s3786);
        t3221 = (s3785 + s3787);
        s3788 = (s3782 + t3220);
        s3789 = (s3783 + t3221);
        s3790 = (s3782 - (0.5*t3220));
        s3791 = (s3783 - (0.5*t3221));
        s3792 = (0.8660254037844386*(s3785 - s3787));
        s3793 = (0.8660254037844386*(s3784 - s3786));
        t3222 = (s3790 - s3792);
        t3223 = (s3791 + s3793);
        t3224 = (s3790 + s3792);
        t3225 = (s3791 - s3793);
        s3794 = ((0.5*t3222) - (0.8660254037844386*t3223));
        s3795 = ((0.8660254037844386*t3222) + (0.5*t3223));
        s3796 = ((0.5*t3224) + (0.8660254037844386*t3225));
        s3797 = ((0.8660254037844386*t3224) - (0.5*t3225));
        s3798 = T264[(((a6424 + 8) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3799 = T264[(((a6424 + 9) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3800 = T264[(((a6424 + 20) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3801 = T264[(((a6424 + 21) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3802 = T264[(((a6424 + 32) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3803 = T264[(((a6424 + 33) + (325*threadIdx.x)) + (975*threadIdx.y))];
        t3226 = (s3800 + s3802);
        t3227 = (s3801 + s3803);
        s3804 = (s3798 + t3226);
        s3805 = (s3799 + t3227);
        s3806 = (s3798 - (0.5*t3226));
        s3807 = (s3799 - (0.5*t3227));
        s3808 = (0.8660254037844386*(s3801 - s3803));
        s3809 = (0.8660254037844386*(s3800 - s3802));
        t3228 = (s3806 - s3808);
        t3229 = (s3807 + s3809);
        t3230 = (s3806 + s3808);
        t3231 = (s3807 - s3809);
        s3810 = ((0.17364817766693033*t3228) - (0.98480775301220802*t3229));
        s3811 = ((0.98480775301220802*t3228) + (0.17364817766693033*t3229));
        s3812 = ((0.93969262078590843*t3230) + (0.34202014332566871*t3231));
        s3813 = ((0.34202014332566871*t3230) - (0.93969262078590843*t3231));
        s3814 = T264[(((a6424 + 10) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3815 = T264[(((a6424 + 11) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3816 = T264[(((a6424 + 22) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3817 = T264[(((a6424 + 23) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3818 = T264[(((a6424 + 34) + (325*threadIdx.x)) + (975*threadIdx.y))];
        s3819 = T264[(((a6424 + 35) + (325*threadIdx.x)) + (975*threadIdx.y))];
        t3232 = (s3816 + s3818);
        t3233 = (s3817 + s3819);
        s3820 = (s3814 + t3232);
        s3821 = (s3815 + t3233);
        s3822 = (s3814 - (0.5*t3232));
        s3823 = (s3815 - (0.5*t3233));
        s3824 = (0.8660254037844386*(s3817 - s3819));
        s3825 = (0.8660254037844386*(s3816 - s3818));
        t3234 = (s3822 - s3824);
        t3235 = (s3823 + s3825);
        t3236 = (s3822 + s3824);
        t3237 = (s3823 - s3825);
        s3826 = ((0.17364817766693033*t3234) + (0.98480775301220802*t3235));
        s3827 = ((0.98480775301220802*t3234) - (0.17364817766693033*t3235));
        s3828 = ((0.34202014332566871*t3237) - (0.93969262078590843*t3236));
        s3829 = ((0.34202014332566871*t3236) + (0.93969262078590843*t3237));
        t3238 = (s3756 + s3804);
        t3239 = (s3757 + s3805);
        t3240 = (s3756 - s3804);
        t3241 = (s3757 - s3805);
        t3242 = (s3772 + s3820);
        t3243 = (s3773 + s3821);
        t3244 = (s3772 - s3820);
        t3245 = (s3773 - s3821);
        b952 = ((1944*blockIdx.x) + (162*threadIdx.x) + (486*threadIdx.y) + (2*i93));
        P1[(b952 + 54)] = (((s3744 + s3788) - (0.5*(t3238 + t3242))) + (0.8660254037844386*(t3239 - t3243)));
        P1[(b952 + 55)] = (((s3745 + s3789) - (0.5*(t3239 + t3243))) - (0.8660254037844386*(t3238 - t3242)));
        s3830 = ((0.5*t3240) - (0.8660254037844386*t3241));
        s3831 = ((0.8660254037844386*t3240) + (0.5*t3241));
        s3832 = ((0.5*t3244) + (0.8660254037844386*t3245));
        s3833 = ((0.8660254037844386*t3244) - (0.5*t3245));
        s3834 = ((s3744 - s3788) - (0.5*(s3830 - s3832)));
        s3835 = ((s3745 - s3789) - (0.5*(s3831 + s3833)));
        s3836 = (0.8660254037844386*(s3831 - s3833));
        s3837 = (0.8660254037844386*(s3830 + s3832));
        P1[b952] = (s3834 - s3836);
        P1[(b952 + 1)] = (s3835 + s3837);
        P1[(b952 + 108)] = (s3834 + s3836);
        P1[(b952 + 109)] = (s3835 - s3837);
        t3246 = (s3762 + s3810);
        t3247 = (s3763 + s3811);
        t3248 = (s3762 - s3810);
        t3249 = (s3763 - s3811);
        t3250 = (s3778 - s3826);
        t3251 = (s3779 + s3827);
        t3252 = (s3778 + s3826);
        t3253 = (s3779 - s3827);
        P1[(b952 + 72)] = (((t3204 + s3794) - (0.5*(t3246 + t3250))) + (0.8660254037844386*(t3247 - t3251)));
        P1[(b952 + 73)] = (((t3205 + s3795) - (0.5*(t3247 + t3251))) - (0.8660254037844386*(t3246 - t3250)));
        s3838 = ((0.5*t3248) - (0.8660254037844386*t3249));
        s3839 = ((0.8660254037844386*t3248) + (0.5*t3249));
        s3840 = ((0.5*t3252) + (0.8660254037844386*t3253));
        s3841 = ((0.8660254037844386*t3252) - (0.5*t3253));
        s3842 = ((t3204 - s3794) - (0.5*(s3838 - s3840)));
        s3843 = ((t3205 - s3795) - (0.5*(s3839 + s3841)));
        s3844 = (0.8660254037844386*(s3839 - s3841));
        s3845 = (0.8660254037844386*(s3838 + s3840));
        P1[(b952 + 18)] = (s3842 - s3844);
        P1[(b952 + 19)] = (s3843 + s3845);
        P1[(b952 + 126)] = (s3842 + s3844);
        P1[(b952 + 127)] = (s3843 - s3845);
        t3254 = (s3764 - s3812);
        t3255 = (s3765 + s3813);
        t3256 = (s3764 + s3812);
        t3257 = (s3765 - s3813);
        t3258 = (s3780 + s3828);
        t3259 = (s3781 - s3829);
        t3260 = (s3780 - s3828);
        t3261 = (s3781 + s3829);
        P1[(b952 + 90)] = (((t3206 - s3796) - (0.5*(t3254 + t3258))) + (0.8660254037844386*(t3255 - t3259)));
        P1[(b952 + 91)] = (((t3207 + s3797) - (0.5*(t3255 + t3259))) - (0.8660254037844386*(t3254 - t3258)));
        s3846 = ((0.5*t3256) - (0.8660254037844386*t3257));
        s3847 = ((0.8660254037844386*t3256) + (0.5*t3257));
        s3848 = ((0.5*t3260) + (0.8660254037844386*t3261));
        s3849 = ((0.8660254037844386*t3260) - (0.5*t3261));
        s3850 = ((t3206 + s3796) - (0.5*(s3846 - s3848)));
        s3851 = ((t3207 - s3797) - (0.5*(s3847 + s3849)));
        s3852 = (0.8660254037844386*(s3847 - s3849));
        s3853 = (0.8660254037844386*(s3846 + s3848));
        P1[(b952 + 36)] = (s3850 - s3852);
        P1[(b952 + 37)] = (s3851 + s3853);
        P1[(b952 + 144)] = (s3850 + s3852);
        P1[(b952 + 145)] = (s3851 - s3853);
    }
}

__global__ void ker_Mdrconv_81_cu3() {
    __shared__ double T422[2916];
    double a7770, a7771, a7774, a7775, a7776, a7777, a7778, a7779, 
            a7780, a7781, a7782, a7783, a7784, a7785, a7786, a7787, 
            a7788, a7789, s4076, s4077, s4078, s4079, s4080, s4081, 
            s4082, s4083, s4084, s4085, s4086, s4087, s4088, s4089, 
            s4090, s4091, s4092, s4093, s4094, s4095, s4096, s4097, 
            s4098, s4099, s4100, s4101, s4102, s4103, s4104, s4105, 
            s4106, s4107, s4108, s4109, s4110, s4111, s4112, s4113, 
            s4114, s4115, s4116, s4117, s4118, s4119, s4120, s4121, 
            s4122, s4123, s4124, s4125, s4126, s4127, s4128, s4129, 
            s4130, s4131, s4132, s4133, s4134, s4135, s4136, s4137, 
            t3394, t3395, t3396, t3397, t3398, t3399, t3400, t3401, 
            t3402, t3403, t3404, t3405, t3406, t3407, t3408, t3409, 
            t3410, t3411, t3412, t3413, t3414, t3415, t3416, t3417, 
            t3418, t3419, t3420, t3421, t3422, t3423, t3424, t3425, 
            t3426, t3427, t3428, t3429;
    int a7737, a7738, a7739, a7740, a7741, a7742, a7743, a7744, 
            a7745, a7746, a7747, a7748, a7749, a7750, a7751, a7752, 
            a7753, a7754, a7755, a7756, a7757, a7758, a7759, a7760, 
            a7761, a7762, a7763, a7764, a7765, a7766, a7767, a7768, 
            a7769, a7772, a7773;
    a7737 = (18*blockIdx.x);
    a7738 = (threadIdx.x / 54);
    a7739 = (threadIdx.x % 54);
    a7740 = (a7739 / 18);
    a7741 = (a7739 % 18);
    a7742 = ((486*a7738) + (162*a7740) + a7741);
    a7743 = (a7742 / 162);
    a7744 = (a7737 + (13284*((a7743 + (9*(a7742 % 162))) / 9)) + (2*(a7743 % 9)));
    s4076 = P1[a7744];
    s4077 = P1[(a7744 + 1)];
    a7745 = (a7742 + 54);
    a7746 = (a7745 / 162);
    a7747 = (a7737 + (13284*((a7746 + (9*(a7745 % 162))) / 9)) + (2*(a7746 % 9)));
    s4078 = P1[a7747];
    s4079 = P1[(a7747 + 1)];
    a7748 = (a7742 + 108);
    a7749 = (a7748 / 162);
    a7750 = (a7737 + (13284*((a7749 + (9*(a7748 % 162))) / 9)) + (2*(a7749 % 9)));
    s4080 = P1[a7750];
    s4081 = P1[(a7750 + 1)];
    t3394 = (s4078 + s4080);
    t3395 = (s4079 + s4081);
    s4082 = (s4076 + t3394);
    s4083 = (s4077 + t3395);
    s4084 = (s4076 - (0.5*t3394));
    s4085 = (s4077 - (0.5*t3395));
    s4086 = (0.8660254037844386*(s4079 - s4081));
    s4087 = (0.8660254037844386*(s4078 - s4080));
    t3396 = (s4084 - s4086);
    t3397 = (s4085 + s4087);
    t3398 = (s4084 + s4086);
    t3399 = (s4085 - s4087);
    a7751 = (a7742 + 18);
    a7752 = (a7751 / 162);
    a7753 = (a7737 + (13284*((a7752 + (9*(a7751 % 162))) / 9)) + (2*(a7752 % 9)));
    s4088 = P1[a7753];
    s4089 = P1[(a7753 + 1)];
    a7754 = (a7742 + 72);
    a7755 = (a7754 / 162);
    a7756 = (a7737 + (13284*((a7755 + (9*(a7754 % 162))) / 9)) + (2*(a7755 % 9)));
    s4090 = P1[a7756];
    s4091 = P1[(a7756 + 1)];
    a7757 = (a7742 + 126);
    a7758 = (a7757 / 162);
    a7759 = (a7737 + (13284*((a7758 + (9*(a7757 % 162))) / 9)) + (2*(a7758 % 9)));
    s4092 = P1[a7759];
    s4093 = P1[(a7759 + 1)];
    t3400 = (s4090 + s4092);
    t3401 = (s4091 + s4093);
    s4094 = (s4088 + t3400);
    s4095 = (s4089 + t3401);
    s4096 = (s4088 - (0.5*t3400));
    s4097 = (s4089 - (0.5*t3401));
    s4098 = (0.8660254037844386*(s4091 - s4093));
    s4099 = (0.8660254037844386*(s4090 - s4092));
    t3402 = (s4096 - s4098);
    t3403 = (s4097 + s4099);
    t3404 = (s4096 + s4098);
    t3405 = (s4097 - s4099);
    s4100 = ((0.76604444311897812*t3402) - (0.64278760968653925*t3403));
    s4101 = ((0.64278760968653925*t3402) + (0.76604444311897812*t3403));
    s4102 = ((0.17364817766693033*t3404) - (0.98480775301220802*t3405));
    s4103 = ((0.98480775301220802*t3404) + (0.17364817766693033*t3405));
    a7760 = (a7742 + 36);
    a7761 = (a7760 / 162);
    a7762 = (a7737 + (13284*((a7761 + (9*(a7760 % 162))) / 9)) + (2*(a7761 % 9)));
    s4104 = P1[a7762];
    s4105 = P1[(a7762 + 1)];
    a7763 = (a7742 + 90);
    a7764 = (a7763 / 162);
    a7765 = (a7737 + (13284*((a7764 + (9*(a7763 % 162))) / 9)) + (2*(a7764 % 9)));
    s4106 = P1[a7765];
    s4107 = P1[(a7765 + 1)];
    a7766 = (a7742 + 144);
    a7767 = (a7766 / 162);
    a7768 = (a7737 + (13284*((a7767 + (9*(a7766 % 162))) / 9)) + (2*(a7767 % 9)));
    s4108 = P1[a7768];
    s4109 = P1[(a7768 + 1)];
    t3406 = (s4106 + s4108);
    t3407 = (s4107 + s4109);
    s4110 = (s4104 + t3406);
    s4111 = (s4105 + t3407);
    s4112 = (s4104 - (0.5*t3406));
    s4113 = (s4105 - (0.5*t3407));
    s4114 = (0.8660254037844386*(s4107 - s4109));
    s4115 = (0.8660254037844386*(s4106 - s4108));
    t3408 = (s4112 - s4114);
    t3409 = (s4113 + s4115);
    t3410 = (s4112 + s4114);
    t3411 = (s4113 - s4115);
    s4116 = ((0.17364817766693033*t3408) - (0.98480775301220802*t3409));
    s4117 = ((0.98480775301220802*t3408) + (0.17364817766693033*t3409));
    s4118 = ((0.93969262078590843*t3410) + (0.34202014332566871*t3411));
    s4119 = ((0.34202014332566871*t3410) - (0.93969262078590843*t3411));
    t3412 = (s4094 + s4110);
    t3413 = (s4095 + s4111);
    s4120 = (s4082 + t3412);
    s4121 = (s4083 + t3413);
    s4122 = (s4082 - (0.5*t3412));
    s4123 = (s4083 - (0.5*t3413));
    s4124 = (0.8660254037844386*(s4095 - s4111));
    s4125 = (0.8660254037844386*(s4094 - s4110));
    a7769 = (6*a7741);
    a7770 = D5[a7769];
    a7771 = D5[(a7769 + 1)];
    a7772 = ((972*a7738) + (324*a7740) + (2*a7741));
    T422[a7772] = ((a7770*s4120) - (a7771*s4121));
    T422[(a7772 + 1)] = ((a7771*s4120) + (a7770*s4121));
    t3414 = (s4122 - s4124);
    t3415 = (s4123 + s4125);
    t3416 = (s4122 + s4124);
    t3417 = (s4123 - s4125);
    a7773 = (12*a7741);
    a7774 = D6[a7773];
    a7775 = D6[(a7773 + 1)];
    a7776 = D6[(a7773 + 2)];
    a7777 = D6[(a7773 + 3)];
    T422[(a7772 + 108)] = ((a7774*t3414) - (a7775*t3415));
    T422[(a7772 + 109)] = ((a7775*t3414) + (a7774*t3415));
    T422[(a7772 + 216)] = ((a7776*t3416) - (a7777*t3417));
    T422[(a7772 + 217)] = ((a7777*t3416) + (a7776*t3417));
    t3418 = (s4100 + s4116);
    t3419 = (s4101 + s4117);
    s4126 = (t3396 + t3418);
    s4127 = (t3397 + t3419);
    s4128 = (t3396 - (0.5*t3418));
    s4129 = (t3397 - (0.5*t3419));
    s4130 = (0.8660254037844386*(s4101 - s4117));
    s4131 = (0.8660254037844386*(s4100 - s4116));
    a7778 = D5[(a7769 + 2)];
    a7779 = D5[(3 + a7769)];
    T422[(a7772 + 36)] = ((a7778*s4126) - (a7779*s4127));
    T422[(a7772 + 37)] = ((a7779*s4126) + (a7778*s4127));
    t3420 = (s4128 - s4130);
    t3421 = (s4129 + s4131);
    t3422 = (s4128 + s4130);
    t3423 = (s4129 - s4131);
    a7780 = D6[(a7773 + 4)];
    a7781 = D6[(5 + a7773)];
    a7782 = D6[(6 + a7773)];
    a7783 = D6[(7 + a7773)];
    T422[(a7772 + 144)] = ((a7780*t3420) - (a7781*t3421));
    T422[(a7772 + 145)] = ((a7781*t3420) + (a7780*t3421));
    T422[(a7772 + 252)] = ((a7782*t3422) - (a7783*t3423));
    T422[(a7772 + 253)] = ((a7783*t3422) + (a7782*t3423));
    t3424 = (s4102 - s4118);
    t3425 = (s4103 + s4119);
    s4132 = (t3398 + t3424);
    s4133 = (t3399 + t3425);
    s4134 = (t3398 - (0.5*t3424));
    s4135 = (t3399 - (0.5*t3425));
    s4136 = (0.8660254037844386*(s4103 - s4119));
    s4137 = (0.8660254037844386*(s4102 + s4118));
    a7784 = D5[(a7769 + 4)];
    a7785 = D5[(5 + a7769)];
    T422[(a7772 + 72)] = ((a7784*s4132) - (a7785*s4133));
    T422[(a7772 + 73)] = ((a7785*s4132) + (a7784*s4133));
    t3426 = (s4134 - s4136);
    t3427 = (s4135 + s4137);
    t3428 = (s4134 + s4136);
    t3429 = (s4135 - s4137);
    a7786 = D6[(a7773 + 8)];
    a7787 = D6[(9 + a7773)];
    a7788 = D6[(10 + a7773)];
    a7789 = D6[(11 + a7773)];
    T422[(a7772 + 180)] = ((a7786*t3426) - (a7787*t3427));
    T422[(a7772 + 181)] = ((a7787*t3426) + (a7786*t3427));
    T422[(a7772 + 288)] = ((a7788*t3428) - (a7789*t3429));
    T422[(a7772 + 289)] = ((a7789*t3428) + (a7788*t3429));
    __syncthreads();
    if( threadIdx.x <= 80 ) {
        double s4522, s4523, s4524, s4525, s4526, s4527, s4528, s4529, 
                s4530, s4531, s4532, s4533, s4534, s4535, s4536, s4537, 
                s4538, s4539, s4540, s4541, s4542, s4543, s4544, s4545, 
                s4546, s4547, s4548, s4549, s4550, s4551, s4552, s4553, 
                s4554, s4555, s4556, s4557, s4558, s4559, s4560, s4561, 
                s4562, s4563, s4564, s4565, s4566, s4567, s4568, s4569, 
                s4570, s4571, s4572, s4573, s4574, s4575, s4576, s4577, 
                s4578, s4579, s4580, s4581, s4582, s4583, s4584, s4585, 
                s4586, s4587, s4588, s4589, s4590, s4591, s4592, s4593, 
                s4594, s4595, s4596, s4597, s4598, s4599, s4600, s4601, 
                s4602, s4603, s4604, s4605, s4606, s4607, s4608, s4609, 
                s4610, s4611, s4612, s4613, t3760, t3761, t3762, t3763, 
                t3764, t3765, t3766, t3767, t3768, t3769, t3770, t3771, 
                t3772, t3773, t3774, t3775, t3776, t3777, t3778, t3779, 
                t3780, t3781, t3782, t3783, t3784, t3785, t3786, t3787, 
                t3788, t3789, t3790, t3791, t3792, t3793, t3794, t3795, 
                t3796, t3797, t3798, t3799, t3800, t3801, t3802, t3803, 
                t3804, t3805, t3806, t3807, t3808, t3809, t3810, t3811, 
                t3812, t3813, t3814, t3815, t3816, t3817, t3818, t3819, 
                t3820, t3821, t3822, t3823, t3824, t3825, t3826, t3827, 
                t3828, t3829, t3830, t3831;
        int a8541, a8542, a8543, a8544, a8545, a8546;
        a8541 = (threadIdx.x / 27);
        a8542 = (threadIdx.x % 27);
        a8543 = (a8542 / 9);
        a8544 = (a8542 % 9);
        a8545 = ((972*a8541) + (324*a8543) + (36*a8544));
        s4522 = T422[a8545];
        s4523 = T422[(a8545 + 1)];
        s4524 = T422[(a8545 + 12)];
        s4525 = T422[(a8545 + 13)];
        s4526 = T422[(a8545 + 24)];
        s4527 = T422[(a8545 + 25)];
        t3760 = (s4524 + s4526);
        t3761 = (s4525 + s4527);
        s4528 = (s4522 + t3760);
        s4529 = (s4523 + t3761);
        s4530 = (s4522 - (0.5*t3760));
        s4531 = (s4523 - (0.5*t3761));
        s4532 = (0.8660254037844386*(s4525 - s4527));
        s4533 = (0.8660254037844386*(s4524 - s4526));
        t3762 = (s4530 - s4532);
        t3763 = (s4531 + s4533);
        t3764 = (s4530 + s4532);
        t3765 = (s4531 - s4533);
        s4534 = T422[(a8545 + 2)];
        s4535 = T422[(a8545 + 3)];
        s4536 = T422[(a8545 + 14)];
        s4537 = T422[(a8545 + 15)];
        s4538 = T422[(a8545 + 26)];
        s4539 = T422[(a8545 + 27)];
        t3766 = (s4536 + s4538);
        t3767 = (s4537 + s4539);
        s4540 = (s4534 + t3766);
        s4541 = (s4535 + t3767);
        s4542 = (s4534 - (0.5*t3766));
        s4543 = (s4535 - (0.5*t3767));
        s4544 = (0.8660254037844386*(s4537 - s4539));
        s4545 = (0.8660254037844386*(s4536 - s4538));
        t3768 = (s4542 - s4544);
        t3769 = (s4543 + s4545);
        t3770 = (s4542 + s4544);
        t3771 = (s4543 - s4545);
        s4546 = ((0.93969262078590843*t3768) - (0.34202014332566871*t3769));
        s4547 = ((0.34202014332566871*t3768) + (0.93969262078590843*t3769));
        s4548 = ((0.76604444311897812*t3770) - (0.64278760968653925*t3771));
        s4549 = ((0.64278760968653925*t3770) + (0.76604444311897812*t3771));
        s4550 = T422[(a8545 + 4)];
        s4551 = T422[(a8545 + 5)];
        s4552 = T422[(a8545 + 16)];
        s4553 = T422[(a8545 + 17)];
        s4554 = T422[(a8545 + 28)];
        s4555 = T422[(a8545 + 29)];
        t3772 = (s4552 + s4554);
        t3773 = (s4553 + s4555);
        s4556 = (s4550 + t3772);
        s4557 = (s4551 + t3773);
        s4558 = (s4550 - (0.5*t3772));
        s4559 = (s4551 - (0.5*t3773));
        s4560 = (0.8660254037844386*(s4553 - s4555));
        s4561 = (0.8660254037844386*(s4552 - s4554));
        t3774 = (s4558 - s4560);
        t3775 = (s4559 + s4561);
        t3776 = (s4558 + s4560);
        t3777 = (s4559 - s4561);
        s4562 = ((0.76604444311897812*t3774) - (0.64278760968653925*t3775));
        s4563 = ((0.64278760968653925*t3774) + (0.76604444311897812*t3775));
        s4564 = ((0.17364817766693033*t3776) - (0.98480775301220802*t3777));
        s4565 = ((0.98480775301220802*t3776) + (0.17364817766693033*t3777));
        s4566 = T422[(a8545 + 6)];
        s4567 = T422[(a8545 + 7)];
        s4568 = T422[(a8545 + 18)];
        s4569 = T422[(a8545 + 19)];
        s4570 = T422[(a8545 + 30)];
        s4571 = T422[(a8545 + 31)];
        t3778 = (s4568 + s4570);
        t3779 = (s4569 + s4571);
        s4572 = (s4566 + t3778);
        s4573 = (s4567 + t3779);
        s4574 = (s4566 - (0.5*t3778));
        s4575 = (s4567 - (0.5*t3779));
        s4576 = (0.8660254037844386*(s4569 - s4571));
        s4577 = (0.8660254037844386*(s4568 - s4570));
        t3780 = (s4574 - s4576);
        t3781 = (s4575 + s4577);
        t3782 = (s4574 + s4576);
        t3783 = (s4575 - s4577);
        s4578 = ((0.5*t3780) - (0.8660254037844386*t3781));
        s4579 = ((0.8660254037844386*t3780) + (0.5*t3781));
        s4580 = ((0.5*t3782) + (0.8660254037844386*t3783));
        s4581 = ((0.8660254037844386*t3782) - (0.5*t3783));
        s4582 = T422[(a8545 + 8)];
        s4583 = T422[(a8545 + 9)];
        s4584 = T422[(a8545 + 20)];
        s4585 = T422[(a8545 + 21)];
        s4586 = T422[(a8545 + 32)];
        s4587 = T422[(a8545 + 33)];
        t3784 = (s4584 + s4586);
        t3785 = (s4585 + s4587);
        s4588 = (s4582 + t3784);
        s4589 = (s4583 + t3785);
        s4590 = (s4582 - (0.5*t3784));
        s4591 = (s4583 - (0.5*t3785));
        s4592 = (0.8660254037844386*(s4585 - s4587));
        s4593 = (0.8660254037844386*(s4584 - s4586));
        t3786 = (s4590 - s4592);
        t3787 = (s4591 + s4593);
        t3788 = (s4590 + s4592);
        t3789 = (s4591 - s4593);
        s4594 = ((0.17364817766693033*t3786) - (0.98480775301220802*t3787));
        s4595 = ((0.98480775301220802*t3786) + (0.17364817766693033*t3787));
        s4596 = ((0.93969262078590843*t3788) + (0.34202014332566871*t3789));
        s4597 = ((0.34202014332566871*t3788) - (0.93969262078590843*t3789));
        s4598 = T422[(a8545 + 10)];
        s4599 = T422[(a8545 + 11)];
        s4600 = T422[(a8545 + 22)];
        s4601 = T422[(a8545 + 23)];
        s4602 = T422[(a8545 + 34)];
        s4603 = T422[(a8545 + 35)];
        t3790 = (s4600 + s4602);
        t3791 = (s4601 + s4603);
        s4604 = (s4598 + t3790);
        s4605 = (s4599 + t3791);
        s4606 = (s4598 - (0.5*t3790));
        s4607 = (s4599 - (0.5*t3791));
        s4608 = (0.8660254037844386*(s4601 - s4603));
        s4609 = (0.8660254037844386*(s4600 - s4602));
        t3792 = (s4606 - s4608);
        t3793 = (s4607 + s4609);
        t3794 = (s4606 + s4608);
        t3795 = (s4607 - s4609);
        s4610 = ((0.17364817766693033*t3792) + (0.98480775301220802*t3793));
        s4611 = ((0.98480775301220802*t3792) - (0.17364817766693033*t3793));
        s4612 = ((0.34202014332566871*t3795) - (0.93969262078590843*t3794));
        s4613 = ((0.34202014332566871*t3794) + (0.93969262078590843*t3795));
        t3796 = (s4528 + s4572);
        t3797 = (s4529 + s4573);
        t3798 = (s4540 + s4588);
        t3799 = (s4541 + s4589);
        t3800 = (s4540 - s4588);
        t3801 = (s4541 - s4589);
        t3802 = (s4556 + s4604);
        t3803 = (s4557 + s4605);
        t3804 = (s4556 - s4604);
        t3805 = (s4557 - s4605);
        t3806 = (t3798 + t3802);
        t3807 = (t3799 + t3803);
        a8546 = ((1458*blockIdx.x) + (486*a8541) + (162*a8543) + (2*a8544));
        P2[a8546] = (t3796 + t3806);
        P2[(a8546 + 1)] = (t3797 + t3807);
        P2[(a8546 + 108)] = ((t3796 - (0.5*t3806)) - (0.8660254037844386*(t3799 - t3803)));
        P2[(a8546 + 109)] = ((t3797 - (0.5*t3807)) + (0.8660254037844386*(t3798 - t3802)));
        P2[(a8546 + 54)] = ((s4528 - s4572) + (((0.5*t3800) - (0.8660254037844386*t3801)) - ((0.5*t3804) + (0.8660254037844386*t3805))));
        P2[(a8546 + 55)] = ((s4529 - s4573) + (0.8660254037844386*t3800) + (0.5*t3801) + ((0.8660254037844386*t3804) - (0.5*t3805)));
        t3808 = (t3762 + s4578);
        t3809 = (t3763 + s4579);
        t3810 = (s4546 + s4594);
        t3811 = (s4547 + s4595);
        t3812 = (s4546 - s4594);
        t3813 = (s4547 - s4595);
        t3814 = (s4562 - s4610);
        t3815 = (s4563 + s4611);
        t3816 = (s4562 + s4610);
        t3817 = (s4563 - s4611);
        t3818 = (t3810 + t3814);
        t3819 = (t3811 + t3815);
        P2[(a8546 + 18)] = (t3808 + t3818);
        P2[(a8546 + 19)] = (t3809 + t3819);
        P2[(a8546 + 126)] = ((t3808 - (0.5*t3818)) - (0.8660254037844386*(t3811 - t3815)));
        P2[(a8546 + 127)] = ((t3809 - (0.5*t3819)) + (0.8660254037844386*(t3810 - t3814)));
        P2[(a8546 + 72)] = ((t3762 - s4578) + (((0.5*t3812) - (0.8660254037844386*t3813)) - ((0.5*t3816) + (0.8660254037844386*t3817))));
        P2[(a8546 + 73)] = ((t3763 - s4579) + (0.8660254037844386*t3812) + (0.5*t3813) + ((0.8660254037844386*t3816) - (0.5*t3817)));
        t3820 = (t3764 - s4580);
        t3821 = (t3765 + s4581);
        t3822 = (s4548 - s4596);
        t3823 = (s4549 + s4597);
        t3824 = (s4548 + s4596);
        t3825 = (s4549 - s4597);
        t3826 = (s4564 + s4612);
        t3827 = (s4565 - s4613);
        t3828 = (s4564 - s4612);
        t3829 = (s4565 + s4613);
        t3830 = (t3822 + t3826);
        t3831 = (t3823 + t3827);
        P2[(a8546 + 36)] = (t3820 + t3830);
        P2[(a8546 + 37)] = (t3821 + t3831);
        P2[(a8546 + 144)] = ((t3820 - (0.5*t3830)) - (0.8660254037844386*(t3823 - t3827)));
        P2[(a8546 + 145)] = ((t3821 - (0.5*t3831)) + (0.8660254037844386*(t3822 - t3826)));
        P2[(a8546 + 90)] = (t3764 + s4580 + (((0.5*t3824) - (0.8660254037844386*t3825)) - ((0.5*t3828) + (0.8660254037844386*t3829))));
        P2[(a8546 + 91)] = ((t3765 - s4581) + (0.8660254037844386*t3824) + (0.5*t3825) + ((0.8660254037844386*t3828) - (0.5*t3829)));
    }
    __syncthreads();
}

__global__ void ker_Mdrconv_81_cu4(double  *Y) {
    __shared__ double T482[1629];
    double s4819, s4820, s4821, s4822, s4823, s4824, s4825, s4826, 
            s4827, s4828, s4829, s4830, s4831, s4832, s4833, s4834, 
            s4835, s4836, s4837, s4838, s4839, s4840, s4841, s4842, 
            s4843, s4844, s4845, s4846, s4847, s4848, s4849, s4850, 
            s4851, s4852, s4853, s4854, s4855, s4856, s4857, s4858, 
            s4859, s4860, s4861, s4862, s4863, s4864, s4865, s4866, 
            s4867, s4868, s4869, s4870, s4871, s4872, s4873, s4874, 
            s4875, s4876, s4877, t3959, t3960, t3961, t3962, t3963, 
            t3964, t3965, t3966, t3967, t3968, t3969, t3970, t3971, 
            t3972, t3973, t3974, t3975, t3976, t3977, t3978, t3979, 
            t3980, t3981, t3982, t3983, t3984, t3985, t3986, t3987, 
            t3988, t3989;
    int a8974, a8975, a8976, a8977, a8978, a8979, a8980, a8981, 
            a8982, a8983, a8984, a8985, a8986, a8987, a8988, a8989, 
            a8990, b1347;
    a8974 = ((738*blockIdx.x) + (246*threadIdx.y) + (82*threadIdx.x));
    b1347 = ((18*blockIdx.x) + (6*threadIdx.y) + (2*threadIdx.x));
    s4819 = P2[(b1347 + (13122*(a8974 % 82)))];
    s4820 = P2[(b1347 + (13122*((a8974 + 81) % 82)))];
    s4821 = (s4819 + s4820);
    s4822 = (s4819 - s4820);
    a8975 = (a8974 + 27);
    a8976 = ((2*(a8975 / 82)) + (13122*(a8975 % 82)));
    s4823 = P2[a8976];
    s4824 = P2[(a8976 + 1)];
    a8977 = (a8974 + 54);
    a8978 = ((2*(a8977 / 82)) + (13122*(a8977 % 82)));
    s4825 = P2[a8978];
    s4826 = P2[(a8978 + 1)];
    t3959 = (s4823 + s4825);
    t3960 = (s4823 - s4825);
    t3961 = (s4824 + s4826);
    s4827 = ((0.5*t3960) - (0.8660254037844386*t3961));
    s4828 = (s4821 + (2.0*t3959));
    s4829 = (s4821 - t3959);
    s4830 = (1.7320508075688772*(s4824 - s4826));
    t3962 = (s4829 - s4830);
    t3963 = (s4829 + s4830);
    s4831 = (s4822 + (2.0*s4827));
    s4832 = (s4822 - s4827);
    s4833 = ((1.4999999999999998*t3960) + (0.8660254037844386*t3961));
    t3964 = (s4832 - s4833);
    t3965 = (s4832 + s4833);
    a8979 = (a8974 + 9);
    a8980 = ((2*(a8979 / 82)) + (13122*(a8979 % 82)));
    s4834 = P2[a8980];
    s4835 = P2[(a8980 + 1)];
    a8981 = (a8974 + 72);
    a8982 = ((2*(a8981 / 82)) + (13122*(a8981 % 82)));
    s4836 = P2[a8982];
    s4837 = P2[(a8982 + 1)];
    t3966 = (s4834 + s4836);
    t3967 = (s4835 - s4837);
    t3968 = (s4834 - s4836);
    t3969 = (s4835 + s4837);
    a8983 = (a8974 + 36);
    a8984 = ((2*(a8983 / 82)) + (13122*(a8983 % 82)));
    s4838 = P2[a8984];
    s4839 = P2[(a8984 + 1)];
    a8985 = (a8974 + 45);
    a8986 = ((2*(a8985 / 82)) + (13122*(a8985 % 82)));
    s4840 = P2[a8986];
    s4841 = P2[(a8986 + 1)];
    t3970 = (s4838 + s4840);
    t3971 = (s4839 - s4841);
    t3972 = (s4838 - s4840);
    t3973 = (s4839 + s4841);
    s4842 = ((0.5*t3972) - (0.8660254037844386*t3973));
    s4843 = ((0.8660254037844386*t3972) + (0.5*t3973));
    a8987 = (a8974 + 63);
    a8988 = ((2*(a8987 / 82)) + (13122*(a8987 % 82)));
    s4844 = P2[a8988];
    s4845 = P2[(a8988 + 1)];
    a8989 = (a8974 + 18);
    a8990 = ((2*(a8989 / 82)) + (13122*(a8989 % 82)));
    s4846 = P2[a8990];
    s4847 = P2[(a8990 + 1)];
    t3974 = (s4844 + s4846);
    t3975 = (s4845 - s4847);
    t3976 = (s4844 - s4846);
    t3977 = (s4845 + s4847);
    s4848 = ((0.5*t3976) + (0.8660254037844386*t3977));
    s4849 = ((0.8660254037844386*t3976) - (0.5*t3977));
    t3978 = (t3970 + t3974);
    t3979 = (t3971 + t3975);
    s4850 = (t3966 + t3978);
    s4851 = (t3966 - (0.5*t3978));
    s4852 = (t3967 - (0.5*t3979));
    s4853 = (0.8660254037844386*(t3971 - t3975));
    s4854 = (0.8660254037844386*(t3970 - t3974));
    t3980 = (s4851 - s4853);
    t3981 = (s4852 + s4854);
    t3982 = (s4851 + s4853);
    t3983 = (s4852 - s4854);
    s4855 = ((0.76604444311897812*t3980) - (0.64278760968653925*t3981));
    s4856 = ((0.17364817766693033*t3982) - (0.98480775301220802*t3983));
    t3984 = (s4842 - s4848);
    t3985 = (s4843 + s4849);
    s4857 = (t3968 + t3984);
    s4858 = (t3969 + t3985);
    s4859 = (t3968 - (0.5*t3984));
    s4860 = (t3969 - (0.5*t3985));
    s4861 = (0.8660254037844386*(s4843 - s4849));
    s4862 = (0.8660254037844386*(s4842 + s4848));
    s4863 = ((0.93969262078590843*s4857) - (0.34202014332566871*s4858));
    t3986 = (s4859 - s4861);
    t3987 = (s4860 + s4862);
    t3988 = (s4859 + s4861);
    t3989 = (s4860 - s4862);
    s4864 = ((0.5*t3986) - (0.8660254037844386*t3987));
    s4865 = ((0.17364817766693033*t3988) + (0.98480775301220802*t3989));
    s4866 = (s4828 - s4850);
    s4867 = (1.7320508075688772*(t3967 + t3979));
    T482[((181*threadIdx.x) + (543*threadIdx.y))] = (s4828 + (2.0*s4850));
    T482[((60 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s4866 - s4867);
    T482[((120 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s4866 + s4867);
    s4868 = (s4831 - s4863);
    s4869 = ((0.5923962654520476*s4857) + (1.6275953626987474*s4858));
    T482[((10 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s4831 + (2.0*s4863));
    T482[((70 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s4868 - s4869);
    T482[((130 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s4868 + s4869);
    s4870 = (t3962 - s4855);
    s4871 = ((1.1133407984528385*t3980) + (1.3268278963378768*t3981));
    T482[((20 + (181*threadIdx.x)) + (543*threadIdx.y))] = (t3962 + (2.0*s4855));
    T482[((80 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s4870 - s4871);
    T482[((140 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s4870 + s4871);
    s4872 = (t3964 - s4864);
    s4873 = ((1.4999999999999998*t3986) + (0.8660254037844386*t3987));
    T482[((30 + (181*threadIdx.x)) + (543*threadIdx.y))] = (t3964 + (2.0*s4864));
    T482[((90 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s4872 - s4873);
    T482[((150 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s4872 + s4873);
    s4874 = (t3963 - s4856);
    s4875 = ((1.7057370639048863*t3982) + (0.30076746636087054*t3983));
    T482[((40 + (181*threadIdx.x)) + (543*threadIdx.y))] = (t3963 + (2.0*s4856));
    T482[((100 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s4874 - s4875);
    T482[((160 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s4874 + s4875);
    s4876 = (t3965 + s4865);
    s4877 = ((1.7057370639048863*t3988) - (0.30076746636087054*t3989));
    T482[((50 + (181*threadIdx.x)) + (543*threadIdx.y))] = (t3965 - (2.0*s4865));
    T482[((110 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s4876 - s4877);
    T482[((170 + (181*threadIdx.x)) + (543*threadIdx.y))] = (s4876 + s4877);
    for(int i85 = 0; i85 <= 3; i85++) {
        double a10450, a10451, a10454, a10455, a10456, a10457, a10458, a10459, 
                a10460, a10461, a10462, a10463, a10464, a10465, a10466, a10467, 
                a10468, a10469, a10470, a10471, a10472, a10473, a10474, a10475, 
                a10476, a10477, a10478, a10479, a10480, a10481, a10482, a10483, 
                a10484, a10485, a10486, a10487, s5370, s5371, s5372, s5373, 
                s5374, s5375, s5376, s5377, s5378, s5379, s5380, s5381, 
                s5382, s5383, s5384, s5385, s5386, s5387, s5388, s5389, 
                s5390, s5391, s5392, s5393, s5394, s5395, s5396, s5397, 
                s5398, s5399, s5400, s5401, s5402, s5403, s5404, s5405, 
                s5406, s5407, s5408, s5409, s5410, s5411, s5412, s5413, 
                s5414, s5415, s5416, s5417, s5418, s5419, s5420, s5421, 
                s5422, s5423, s5424, s5425, s5426, s5427, s5428, s5429, 
                s5430, s5431, s5432, s5433, s5434, s5435, s5436, s5437, 
                s5438, s5439, s5440, s5441, s5442, s5443, s5444, s5445, 
                s5446, s5447, s5448, s5449, s5450, s5451, s5452, s5453, 
                s5454, s5455, s5456, s5457, s5458, s5459, s5460, s5461, 
                s5462, s5463, s5464, s5465, s5466, s5467, s5468, s5469, 
                s5470, s5471, s5472, s5473, s5474, s5475, s5476, s5477, 
                s5478, s5479, s5480, s5481, s5482, s5483, s5484, s5485, 
                s5486, s5487, s5488, s5489, s5490, s5491, s5492, s5493, 
                s5494, s5495, s5496, s5497, s5498, s5499, s5500, s5501, 
                s5502, s5503, s5504, s5505, s5506, s5507, s5508, s5509, 
                t4362, t4363, t4364, t4365, t4366, t4367, t4368, t4369, 
                t4370, t4371, t4372, t4373, t4374, t4375, t4376, t4377, 
                t4378, t4379, t4380, t4381, t4382, t4383, t4384, t4385, 
                t4386, t4387, t4388, t4389, t4390, t4391, t4392, t4393, 
                t4394, t4395, t4396, t4397, t4398, t4399, t4400, t4401, 
                t4402, t4403, t4404, t4405, t4406, t4407, t4408, t4409, 
                t4410, t4411, t4412, t4413, t4414, t4415, t4416, t4417, 
                t4418, t4419, t4420, t4421, t4422, t4423, t4424, t4425, 
                t4426, t4427, t4428, t4429, t4430, t4431, t4432, t4433, 
                t4434, t4435, t4436, t4437, t4438, t4439, t4440, t4441, 
                t4442, t4443, t4444, t4445, t4446, t4447, t4448, t4449, 
                t4450, t4451, t4452, t4453, t4454, t4455, t4456, t4457, 
                t4458, t4459, t4460, t4461, t4462, t4463, t4464, t4465, 
                t4466, t4467, t4468, t4469;
        int a10413, a10414, a10415, a10416, a10417, a10418, a10419, a10420, 
                a10421, a10422, a10423, a10424, a10425, a10426, a10427, a10428, 
                a10429, a10430, a10431, a10432, a10433, a10434, a10435, a10436, 
                a10437, a10438, a10439, a10440, a10441, a10442, a10443, a10444, 
                a10445, a10446, a10447, a10448, a10449, a10452, a10453, b1589, 
                b1590, b1591;
        b1589 = ((738*blockIdx.x) + (246*threadIdx.y) + (82*threadIdx.x));
        b1590 = (b1589 + i85);
        a10413 = (b1590 + 1);
        a10414 = ((2*(a10413 / 82)) + (13122*(a10413 % 82)));
        s5370 = P2[a10414];
        s5371 = P2[(a10414 + 1)];
        a10415 = (b1590 + 55);
        a10416 = ((2*(a10415 / 82)) + (13122*(a10415 % 82)));
        s5372 = P2[a10416];
        s5373 = P2[(a10416 + 1)];
        b1591 = (b1589 - i85);
        a10417 = (b1591 + 53);
        a10418 = ((2*(a10417 / 82)) + (13122*(a10417 % 82)));
        s5374 = P2[a10418];
        s5375 = P2[(a10418 + 1)];
        t4362 = (s5372 + s5374);
        t4363 = (s5373 - s5375);
        s5376 = (s5370 + t4362);
        s5377 = (s5371 + t4363);
        s5378 = (s5370 - (0.5*t4362));
        s5379 = (s5371 - (0.5*t4363));
        s5380 = (0.8660254037844386*(s5373 + s5375));
        s5381 = (0.8660254037844386*(s5372 - s5374));
        t4364 = (s5378 - s5380);
        t4365 = (s5379 + s5381);
        t4366 = (s5378 + s5380);
        t4367 = (s5379 - s5381);
        a10419 = (b1590 + 10);
        a10420 = ((2*(a10419 / 82)) + (13122*(a10419 % 82)));
        s5382 = P2[a10420];
        s5383 = P2[(a10420 + 1)];
        a10421 = (b1590 + 64);
        a10422 = ((2*(a10421 / 82)) + (13122*(a10421 % 82)));
        s5384 = P2[a10422];
        s5385 = P2[(a10422 + 1)];
        a10423 = (b1591 + 44);
        a10424 = ((2*(a10423 / 82)) + (13122*(a10423 % 82)));
        s5386 = P2[a10424];
        s5387 = P2[(a10424 + 1)];
        t4368 = (s5384 + s5386);
        t4369 = (s5385 - s5387);
        s5388 = (s5382 + t4368);
        s5389 = (s5383 + t4369);
        s5390 = (s5382 - (0.5*t4368));
        s5391 = (s5383 - (0.5*t4369));
        s5392 = (0.8660254037844386*(s5385 + s5387));
        s5393 = (0.8660254037844386*(s5384 - s5386));
        t4370 = (s5390 - s5392);
        t4371 = (s5391 + s5393);
        t4372 = (s5390 + s5392);
        t4373 = (s5391 - s5393);
        s5394 = ((0.93969262078590843*t4370) - (0.34202014332566871*t4371));
        s5395 = ((0.34202014332566871*t4370) + (0.93969262078590843*t4371));
        s5396 = ((0.76604444311897812*t4372) - (0.64278760968653925*t4373));
        s5397 = ((0.64278760968653925*t4372) + (0.76604444311897812*t4373));
        a10425 = (b1590 + 19);
        a10426 = ((2*(a10425 / 82)) + (13122*(a10425 % 82)));
        s5398 = P2[a10426];
        s5399 = P2[(a10426 + 1)];
        a10427 = (b1590 + 73);
        a10428 = ((2*(a10427 / 82)) + (13122*(a10427 % 82)));
        s5400 = P2[a10428];
        s5401 = P2[(a10428 + 1)];
        a10429 = (b1591 + 35);
        a10430 = ((2*(a10429 / 82)) + (13122*(a10429 % 82)));
        s5402 = P2[a10430];
        s5403 = P2[(a10430 + 1)];
        t4374 = (s5400 + s5402);
        t4375 = (s5401 - s5403);
        s5404 = (s5398 + t4374);
        s5405 = (s5399 + t4375);
        s5406 = (s5398 - (0.5*t4374));
        s5407 = (s5399 - (0.5*t4375));
        s5408 = (0.8660254037844386*(s5401 + s5403));
        s5409 = (0.8660254037844386*(s5400 - s5402));
        t4376 = (s5406 - s5408);
        t4377 = (s5407 + s5409);
        t4378 = (s5406 + s5408);
        t4379 = (s5407 - s5409);
        s5410 = ((0.76604444311897812*t4376) - (0.64278760968653925*t4377));
        s5411 = ((0.64278760968653925*t4376) + (0.76604444311897812*t4377));
        s5412 = ((0.17364817766693033*t4378) - (0.98480775301220802*t4379));
        s5413 = ((0.98480775301220802*t4378) + (0.17364817766693033*t4379));
        a10431 = (b1590 + 28);
        a10432 = ((2*(a10431 / 82)) + (13122*(a10431 % 82)));
        s5414 = P2[a10432];
        s5415 = P2[(a10432 + 1)];
        a10433 = (b1591 + 80);
        a10434 = ((2*(a10433 / 82)) + (13122*(a10433 % 82)));
        s5416 = P2[a10434];
        s5417 = P2[(a10434 + 1)];
        a10435 = (b1591 + 26);
        a10436 = ((2*(a10435 / 82)) + (13122*(a10435 % 82)));
        s5418 = P2[a10436];
        s5419 = P2[(a10436 + 1)];
        t4380 = (s5416 + s5418);
        t4381 = (s5417 + s5419);
        s5420 = (s5414 + t4380);
        s5421 = (s5415 - t4381);
        s5422 = (s5414 - (0.5*t4380));
        s5423 = (s5415 + (0.5*t4381));
        s5424 = (0.8660254037844386*(s5419 - s5417));
        s5425 = (0.8660254037844386*(s5416 - s5418));
        t4382 = (s5422 - s5424);
        t4383 = (s5423 + s5425);
        t4384 = (s5422 + s5424);
        t4385 = (s5423 - s5425);
        s5426 = ((0.5*t4382) - (0.8660254037844386*t4383));
        s5427 = ((0.8660254037844386*t4382) + (0.5*t4383));
        s5428 = ((0.5*t4384) + (0.8660254037844386*t4385));
        s5429 = ((0.8660254037844386*t4384) - (0.5*t4385));
        a10437 = (b1590 + 37);
        a10438 = ((2*(a10437 / 82)) + (13122*(a10437 % 82)));
        s5430 = P2[a10438];
        s5431 = P2[(a10438 + 1)];
        a10439 = (b1591 + 71);
        a10440 = ((2*(a10439 / 82)) + (13122*(a10439 % 82)));
        s5432 = P2[a10440];
        s5433 = P2[(a10440 + 1)];
        a10441 = (b1591 + 17);
        a10442 = ((2*(a10441 / 82)) + (13122*(a10441 % 82)));
        s5434 = P2[a10442];
        s5435 = P2[(a10442 + 1)];
        t4386 = (s5432 + s5434);
        t4387 = (s5433 + s5435);
        s5436 = (s5430 + t4386);
        s5437 = (s5431 - t4387);
        s5438 = (s5430 - (0.5*t4386));
        s5439 = (s5431 + (0.5*t4387));
        s5440 = (0.8660254037844386*(s5435 - s5433));
        s5441 = (0.8660254037844386*(s5432 - s5434));
        t4388 = (s5438 - s5440);
        t4389 = (s5439 + s5441);
        t4390 = (s5438 + s5440);
        t4391 = (s5439 - s5441);
        s5442 = ((0.17364817766693033*t4388) - (0.98480775301220802*t4389));
        s5443 = ((0.98480775301220802*t4388) + (0.17364817766693033*t4389));
        s5444 = ((0.93969262078590843*t4390) + (0.34202014332566871*t4391));
        s5445 = ((0.34202014332566871*t4390) - (0.93969262078590843*t4391));
        a10443 = (b1590 + 46);
        a10444 = ((2*(a10443 / 82)) + (13122*(a10443 % 82)));
        s5446 = P2[a10444];
        s5447 = P2[(a10444 + 1)];
        a10445 = (b1591 + 62);
        a10446 = ((2*(a10445 / 82)) + (13122*(a10445 % 82)));
        s5448 = P2[a10446];
        s5449 = P2[(a10446 + 1)];
        a10447 = (b1591 + 8);
        a10448 = ((2*(a10447 / 82)) + (13122*(a10447 % 82)));
        s5450 = P2[a10448];
        s5451 = P2[(a10448 + 1)];
        t4392 = (s5448 + s5450);
        t4393 = (s5449 + s5451);
        s5452 = (s5446 + t4392);
        s5453 = (s5447 - t4393);
        s5454 = (s5446 - (0.5*t4392));
        s5455 = (s5447 + (0.5*t4393));
        s5456 = (0.8660254037844386*(s5451 - s5449));
        s5457 = (0.8660254037844386*(s5448 - s5450));
        t4394 = (s5454 - s5456);
        t4395 = (s5455 + s5457);
        t4396 = (s5454 + s5456);
        t4397 = (s5455 - s5457);
        s5458 = ((0.17364817766693033*t4394) + (0.98480775301220802*t4395));
        s5459 = ((0.98480775301220802*t4394) - (0.17364817766693033*t4395));
        s5460 = ((0.34202014332566871*t4397) - (0.93969262078590843*t4396));
        s5461 = ((0.34202014332566871*t4396) + (0.93969262078590843*t4397));
        t4398 = (s5376 + s5420);
        t4399 = (s5377 + s5421);
        t4400 = (s5376 - s5420);
        t4401 = (s5377 - s5421);
        t4402 = (s5388 + s5436);
        t4403 = (s5389 + s5437);
        t4404 = (s5388 - s5436);
        t4405 = (s5389 - s5437);
        s5462 = ((0.5*t4404) - (0.8660254037844386*t4405));
        s5463 = ((0.8660254037844386*t4404) + (0.5*t4405));
        t4406 = (s5404 + s5452);
        t4407 = (s5405 + s5453);
        t4408 = (s5404 - s5452);
        t4409 = (s5405 - s5453);
        s5464 = ((0.5*t4408) + (0.8660254037844386*t4409));
        s5465 = ((0.8660254037844386*t4408) - (0.5*t4409));
        t4410 = (t4402 + t4406);
        t4411 = (t4403 + t4407);
        s5466 = (t4398 + t4410);
        s5467 = (t4399 + t4411);
        s5468 = (t4398 - (0.5*t4410));
        s5469 = (t4399 - (0.5*t4411));
        s5470 = (0.8660254037844386*(t4403 - t4407));
        s5471 = (0.8660254037844386*(t4402 - t4406));
        a10449 = (12*i85);
        a10450 = D1[a10449];
        a10451 = D1[(a10449 + 1)];
        a10452 = (2*i85);
        T482[(((a10452 + 2) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10450*s5466) - (a10451*s5467));
        T482[(((a10452 + 3) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10451*s5466) + (a10450*s5467));
        t4412 = (s5468 - s5470);
        t4413 = (s5469 + s5471);
        t4414 = (s5468 + s5470);
        t4415 = (s5469 - s5471);
        a10453 = (24*i85);
        a10454 = D2[a10453];
        a10455 = D2[(a10453 + 1)];
        a10456 = D2[(a10453 + 2)];
        a10457 = D2[(a10453 + 3)];
        T482[(((a10452 + 62) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10454*t4412) - (a10455*t4413));
        T482[(((a10452 + 63) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10455*t4412) + (a10454*t4413));
        T482[(((a10452 + 122) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10456*t4414) - (a10457*t4415));
        T482[(((a10452 + 123) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10457*t4414) + (a10456*t4415));
        t4416 = (s5462 - s5464);
        t4417 = (s5463 + s5465);
        s5472 = (t4400 + t4416);
        s5473 = (t4401 + t4417);
        s5474 = (t4400 - (0.5*t4416));
        s5475 = (t4401 - (0.5*t4417));
        s5476 = (0.8660254037844386*(s5463 - s5465));
        s5477 = (0.8660254037844386*(s5462 + s5464));
        a10458 = D1[(a10449 + 2)];
        a10459 = D1[(a10449 + 3)];
        T482[(((a10452 + 32) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10458*s5472) - (a10459*s5473));
        T482[(((a10452 + 33) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10459*s5472) + (a10458*s5473));
        t4418 = (s5474 - s5476);
        t4419 = (s5475 + s5477);
        t4420 = (s5474 + s5476);
        t4421 = (s5475 - s5477);
        a10460 = D2[(a10453 + 4)];
        a10461 = D2[(a10453 + 5)];
        a10462 = D2[(a10453 + 6)];
        a10463 = D2[(a10453 + 7)];
        T482[(((a10452 + 92) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10460*t4418) - (a10461*t4419));
        T482[(((a10452 + 93) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10461*t4418) + (a10460*t4419));
        T482[(((a10452 + 152) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10462*t4420) - (a10463*t4421));
        T482[(((a10452 + 153) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10463*t4420) + (a10462*t4421));
        t4422 = (t4364 + s5426);
        t4423 = (t4365 + s5427);
        t4424 = (t4364 - s5426);
        t4425 = (t4365 - s5427);
        t4426 = (s5394 + s5442);
        t4427 = (s5395 + s5443);
        t4428 = (s5394 - s5442);
        t4429 = (s5395 - s5443);
        s5478 = ((0.5*t4428) - (0.8660254037844386*t4429));
        s5479 = ((0.8660254037844386*t4428) + (0.5*t4429));
        t4430 = (s5410 - s5458);
        t4431 = (s5411 + s5459);
        t4432 = (s5410 + s5458);
        t4433 = (s5411 - s5459);
        s5480 = ((0.5*t4432) + (0.8660254037844386*t4433));
        s5481 = ((0.8660254037844386*t4432) - (0.5*t4433));
        t4434 = (t4426 + t4430);
        t4435 = (t4427 + t4431);
        s5482 = (t4422 + t4434);
        s5483 = (t4423 + t4435);
        s5484 = (t4422 - (0.5*t4434));
        s5485 = (t4423 - (0.5*t4435));
        s5486 = (0.8660254037844386*(t4427 - t4431));
        s5487 = (0.8660254037844386*(t4426 - t4430));
        a10464 = D1[(a10449 + 4)];
        a10465 = D1[(a10449 + 5)];
        T482[(((a10452 + 12) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10464*s5482) - (a10465*s5483));
        T482[(((a10452 + 13) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10465*s5482) + (a10464*s5483));
        t4436 = (s5484 - s5486);
        t4437 = (s5485 + s5487);
        t4438 = (s5484 + s5486);
        t4439 = (s5485 - s5487);
        a10466 = D2[(a10453 + 8)];
        a10467 = D2[(a10453 + 9)];
        a10468 = D2[(a10453 + 10)];
        a10469 = D2[(a10453 + 11)];
        T482[(((a10452 + 72) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10466*t4436) - (a10467*t4437));
        T482[(((a10452 + 73) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10467*t4436) + (a10466*t4437));
        T482[(((a10452 + 132) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10468*t4438) - (a10469*t4439));
        T482[(((a10452 + 133) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10469*t4438) + (a10468*t4439));
        t4440 = (s5478 - s5480);
        t4441 = (s5479 + s5481);
        s5488 = (t4424 + t4440);
        s5489 = (t4425 + t4441);
        s5490 = (t4424 - (0.5*t4440));
        s5491 = (t4425 - (0.5*t4441));
        s5492 = (0.8660254037844386*(s5479 - s5481));
        s5493 = (0.8660254037844386*(s5478 + s5480));
        a10470 = D1[(a10449 + 6)];
        a10471 = D1[(a10449 + 7)];
        T482[(((a10452 + 42) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10470*s5488) - (a10471*s5489));
        T482[(((a10452 + 43) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10471*s5488) + (a10470*s5489));
        t4442 = (s5490 - s5492);
        t4443 = (s5491 + s5493);
        t4444 = (s5490 + s5492);
        t4445 = (s5491 - s5493);
        a10472 = D2[(a10453 + 12)];
        a10473 = D2[(a10453 + 13)];
        a10474 = D2[(a10453 + 14)];
        a10475 = D2[(a10453 + 15)];
        T482[(((a10452 + 102) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10472*t4442) - (a10473*t4443));
        T482[(((a10452 + 103) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10473*t4442) + (a10472*t4443));
        T482[(((a10452 + 162) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10474*t4444) - (a10475*t4445));
        T482[(((a10452 + 163) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10475*t4444) + (a10474*t4445));
        t4446 = (t4366 - s5428);
        t4447 = (t4367 + s5429);
        t4448 = (t4366 + s5428);
        t4449 = (t4367 - s5429);
        t4450 = (s5396 - s5444);
        t4451 = (s5397 + s5445);
        t4452 = (s5396 + s5444);
        t4453 = (s5397 - s5445);
        s5494 = ((0.5*t4452) - (0.8660254037844386*t4453));
        s5495 = ((0.8660254037844386*t4452) + (0.5*t4453));
        t4454 = (s5412 + s5460);
        t4455 = (s5413 - s5461);
        t4456 = (s5412 - s5460);
        t4457 = (s5413 + s5461);
        s5496 = ((0.5*t4456) + (0.8660254037844386*t4457));
        s5497 = ((0.8660254037844386*t4456) - (0.5*t4457));
        t4458 = (t4450 + t4454);
        t4459 = (t4451 + t4455);
        s5498 = (t4446 + t4458);
        s5499 = (t4447 + t4459);
        s5500 = (t4446 - (0.5*t4458));
        s5501 = (t4447 - (0.5*t4459));
        s5502 = (0.8660254037844386*(t4451 - t4455));
        s5503 = (0.8660254037844386*(t4450 - t4454));
        a10476 = D1[(a10449 + 8)];
        a10477 = D1[(a10449 + 9)];
        T482[(((a10452 + 22) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10476*s5498) - (a10477*s5499));
        T482[(((a10452 + 23) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10477*s5498) + (a10476*s5499));
        t4460 = (s5500 - s5502);
        t4461 = (s5501 + s5503);
        t4462 = (s5500 + s5502);
        t4463 = (s5501 - s5503);
        a10478 = D2[(a10453 + 16)];
        a10479 = D2[(a10453 + 17)];
        a10480 = D2[(a10453 + 18)];
        a10481 = D2[(a10453 + 19)];
        T482[(((a10452 + 82) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10478*t4460) - (a10479*t4461));
        T482[(((a10452 + 83) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10479*t4460) + (a10478*t4461));
        T482[(((a10452 + 142) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10480*t4462) - (a10481*t4463));
        T482[(((a10452 + 143) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10481*t4462) + (a10480*t4463));
        t4464 = (s5494 - s5496);
        t4465 = (s5495 + s5497);
        s5504 = (t4448 + t4464);
        s5505 = (t4449 + t4465);
        s5506 = (t4448 - (0.5*t4464));
        s5507 = (t4449 - (0.5*t4465));
        s5508 = (0.8660254037844386*(s5495 - s5497));
        s5509 = (0.8660254037844386*(s5494 + s5496));
        a10482 = D1[(a10449 + 10)];
        a10483 = D1[(a10449 + 11)];
        T482[(((a10452 + 52) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10482*s5504) - (a10483*s5505));
        T482[(((a10452 + 53) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10483*s5504) + (a10482*s5505));
        t4466 = (s5506 - s5508);
        t4467 = (s5507 + s5509);
        t4468 = (s5506 + s5508);
        t4469 = (s5507 - s5509);
        a10484 = D2[(a10453 + 20)];
        a10485 = D2[(a10453 + 21)];
        a10486 = D2[(a10453 + 22)];
        a10487 = D2[(a10453 + 23)];
        T482[(((a10452 + 112) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10484*t4466) - (a10485*t4467));
        T482[(((a10452 + 113) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10485*t4466) + (a10484*t4467));
        T482[(((a10452 + 172) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10486*t4468) - (a10487*t4469));
        T482[(((a10452 + 173) + (181*threadIdx.x)) + (543*threadIdx.y))] = ((a10487*t4468) + (a10486*t4469));
    }
    for(int i86 = 0; i86 <= 8; i86++) {
        double s5591, s5592, s5593, s5594, s5595, s5596, s5597, s5598, 
                s5599, s5600, s5601, s5602, s5603, s5604, s5605, s5606, 
                s5607, t4506, t4507, t4508, t4509, t4510;
        int a10575, a10576;
        a10575 = (10*i86);
        s5591 = T482[((a10575 + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5592 = T482[(((a10575 + 6) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5593 = (s5591 + (2.0*s5592));
        s5594 = (s5591 - s5592);
        s5595 = (1.7320508075688772*T482[(((a10575 + 7) + (181*threadIdx.x)) + (543*threadIdx.y))]);
        t4506 = (s5594 - s5595);
        s5596 = T482[(((a10575 + 2) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5597 = T482[(((a10575 + 3) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5598 = T482[(((a10575 + 8) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5599 = T482[(((a10575 + 9) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5600 = T482[(((a10575 + 4) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5601 = T482[(((a10575 + 5) + (181*threadIdx.x)) + (543*threadIdx.y))];
        t4507 = (s5598 + s5600);
        t4508 = (s5599 - s5601);
        s5602 = (s5596 + t4507);
        s5603 = (s5596 - (0.5*t4507));
        s5604 = (s5597 - (0.5*t4508));
        s5605 = (0.8660254037844386*(s5599 + s5601));
        s5606 = (0.8660254037844386*(s5598 - s5600));
        t4509 = (s5603 - s5605);
        t4510 = (s5604 + s5606);
        s5607 = ((0.76604444311897812*t4509) - (0.64278760968653925*t4510));
        a10576 = ((729*blockIdx.x) + (243*threadIdx.y) + (81*threadIdx.x) + i86);
        Y[a10576] = (s5593 + (2.0*s5602));
        Y[(a10576 + 54)] = ((s5593 - s5602) - (1.7320508075688772*(s5597 + t4508)));
        Y[(a10576 + 18)] = (t4506 + (2.0*s5607));
        Y[(a10576 + 72)] = ((t4506 - s5607) - ((1.1133407984528385*t4509) + (1.3268278963378768*t4510)));
        Y[(a10576 + 36)] = (s5594 + s5595 + ((0.34729635533386066*(s5603 + s5605)) - (1.969615506024416*(s5604 - s5606))));
    }
    for(int i87 = 0; i87 <= 8; i87++) {
        double s5689, s5690, s5691, s5692, s5693, s5694, s5695, s5696, 
                s5697, s5698, s5699, s5700, s5701, s5702, s5703, s5704, 
                t4546, t4547;
        int a10660, b1624;
        a10660 = (10*i87);
        s5689 = T482[(((a10660 + 90) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5690 = T482[(((a10660 + 96) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5691 = (s5689 + (2.0*s5690));
        s5692 = (s5689 - s5690);
        s5693 = (1.7320508075688772*T482[(((a10660 + 97) + (181*threadIdx.x)) + (543*threadIdx.y))]);
        s5694 = T482[(((a10660 + 92) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5695 = T482[(((a10660 + 93) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5696 = T482[(((a10660 + 98) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5697 = T482[(((a10660 + 99) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5698 = T482[(((a10660 + 94) + (181*threadIdx.x)) + (543*threadIdx.y))];
        s5699 = T482[(((a10660 + 95) + (181*threadIdx.x)) + (543*threadIdx.y))];
        t4546 = (s5696 + s5698);
        t4547 = (s5697 - s5699);
        s5700 = (s5694 + t4546);
        s5701 = (s5694 - (0.5*t4546));
        s5702 = (s5695 - (0.5*t4547));
        s5703 = (0.8660254037844386*(s5697 + s5699));
        s5704 = (0.8660254037844386*(s5696 - s5698));
        b1624 = ((729*blockIdx.x) + (243*threadIdx.y) + (81*threadIdx.x) + i87);
        Y[(b1624 + 9)] = (s5691 + (2.0*s5700));
        Y[(b1624 + 63)] = ((s5691 - s5700) - (1.7320508075688772*(s5695 + t4547)));
        Y[(b1624 + 27)] = ((s5692 - s5693) + ((1.5320888862379562*(s5701 - s5703)) - (1.2855752193730785*(s5702 + s5704))));
        Y[(b1624 + 45)] = (s5692 + s5693 + ((0.34729635533386066*(s5701 + s5703)) - (1.969615506024416*(s5702 - s5704))));
    }
}

extern "C" {
void Mdrconv_81_cu(double  *Y, double  *X, double  *sym) {
    dim3 b1625(3, 3, 1), b1626(3, 3, 1), b1627(3, 4, 1), b1628(162, 1, 1), b1629(3, 3, 1), g1(729, 1, 1), g2(738, 1, 1), g3(1107, 1, 1), 
    g4(738, 1, 1), g5(729, 1, 1);
    ker_Mdrconv_81_cu0<<<g1, b1625>>>(X);
    ker_Mdrconv_81_cu1<<<g2, b1626>>>();
    ker_Mdrconv_81_cu2<<<g3, b1627>>>(sym);
    ker_Mdrconv_81_cu3<<<g4, b1628>>>();
    ker_Mdrconv_81_cu4<<<g5, b1629>>>(Y);
}
}

extern "C" {
void destroy_Mdrconv_81_cu() {
    double  *hp1;
    cudaMemcpyFromSymbol(&(hp1), P1, sizeof(double  *));
    cudaFree(hp1);
    cudaMemcpyFromSymbol(&(hp1), P2, sizeof(double  *));
    cudaFree(hp1);
}
}

extern "C" {
void init_Mdrconv_81_cu() {
    double  *hp1;
    cudaDeviceSetLimit(cudaLimitMallocHeapSize, 1073741824);
    cudaFuncSetCacheConfig(ker_Mdrconv_81_cu0, cudaFuncCachePreferL1);
    cudaFuncSetCacheConfig(ker_Mdrconv_81_cu1, cudaFuncCachePreferL1);
    cudaFuncSetCacheConfig(ker_Mdrconv_81_cu2, cudaFuncCachePreferL1);
    cudaFuncSetCacheConfig(ker_Mdrconv_81_cu3, cudaFuncCachePreferL1);
    cudaFuncSetCacheConfig(ker_Mdrconv_81_cu4, cudaFuncCachePreferL1);
    cudaMalloc(((void  * *) &(hp1)), (sizeof(double )*2152008));
    cudaMemcpyToSymbol(P1, &(hp1), sizeof(double  *));
    cudaMalloc(((void  * *) &(hp1)), (sizeof(double )*2152008));
    cudaMemcpyToSymbol(P2, &(hp1), sizeof(double  *));
}
}
