/* RuleTree:
rt :=
TFCall_tag( TFCall(MDPRDFT([ 96, 96, 96 ], 884735), rec(
  fname := "fftx_mdprdft_96x96x96",
  params := [ sym ] )).withTags([ ASIMTKernelFlag(ASIMTGridDimX), ASIMTBlockDimY, ASIMTBlockDimX ]),
  MDPRDFT_tSPL_RowCol_SIMT( MDPRDFT([ 96, 96, 96 ], 884735).withTags([ ASIMTKernelFlag(ASIMTGridDimX), ASIMTBlockDimY, ASIMTBlockDimX ]),
    AxI_SIMT( TTensorI(MDDFT([ 96, 96 ], 9215, false), 49, AVec, AVec).withTags([ ASIMTKernelFlag(ASIMTGridDimX), ASIMTBlockDimY, ASIMTBlockDimX ]),
      MDDFT_tSPL_Pease_SIMT( MDDFT([ 96, 96 ], 9215, false).withTags([ ASIMTBlockDimY, ASIMTBlockDimX ]),
        TCompose_tag( TCompose([ TTensorI(DFT(96, 95), 96, AVec, APar), TTensorI(DFT(96, 95), 96, AVec, APar) ]).withTags([ ASIMTBlockDimY, ASIMTBlockDimX ]),
          L_IxA_SIMT( TTensorI(DFT(96, 95), 96, AVec, APar).withTags([ ASIMTBlockDimY, ASIMTBlockDimX ]),
            TCompose_tag( TCompose([ TL(576, 96, 1, 16), TTensorI(TCompose([ TL(1536, 96, 1, 1), TTensorI(DFT(96, 95), 16, APar, APar) ]), 6, APar, APar) ]).withTags([ ASIMTBlockDimY, ASIMTBlockDimX ]),
              L_SIMT( TL(576, 96, 1, 16).withTags([ ASIMTBlockDimY, ASIMTBlockDimX ]) ),
              IxA_SIMT( TTensorI(TCompose([ TL(1536, 96, 1, 1), TTensorI(DFT(96, 95), 16, APar, APar) ]), 6, APar, APar).withTags([ ASIMTBlockDimY, ASIMTBlockDimX ]),
                TCompose_tag( TCompose([ TL(1536, 96, 1, 1), TTensorI(DFT(96, 95), 16, APar, APar) ]).withTags([ ASIMTBlockDimX ]),
                  L_SIMT( TL(1536, 96, 1, 1).withTags([ ASIMTBlockDimX ]) ),
                  IxA_SIMT( TTensorI(DFT(96, 95), 16, APar, APar).withTags([ ASIMTBlockDimX ]),
                    DFT_CT( DFT(96, 95),
                      DFT_CT( DFT(12, 11),
                        DFT_CT( DFT(4, 3),
                          DFT_Base( DFT(2, 1) ),
                          DFT_Base( DFT(2, 1) ) ),
                        DFT_PD( DFT(3, 2) ) ),
                      DFT_CT( DFT(8, 7),
                        DFT_CT( DFT(4, 3),
                          DFT_Base( DFT(2, 1) ),
                          DFT_Base( DFT(2, 1) ) ),
                        DFT_Base( DFT(2, 1) ) ) ) ) ) ) ) ),
          L_IxA_SIMT( TTensorI(DFT(96, 95), 96, AVec, APar).withTags([ ASIMTBlockDimY, ASIMTBlockDimX ]),
            TCompose_tag( TCompose([ TL(576, 96, 1, 16), TTensorI(TCompose([ TL(1536, 96, 1, 1), TTensorI(DFT(96, 95), 16, APar, APar) ]), 6, APar, APar) ]).withTags([ ASIMTBlockDimY, ASIMTBlockDimX ]),
              L_SIMT( TL(576, 96, 1, 16).withTags([ ASIMTBlockDimY, ASIMTBlockDimX ]) ),
              IxA_SIMT( TTensorI(TCompose([ TL(1536, 96, 1, 1), TTensorI(DFT(96, 95), 16, APar, APar) ]), 6, APar, APar).withTags([ ASIMTBlockDimY, ASIMTBlockDimX ]),
                TCompose_tag( TCompose([ TL(1536, 96, 1, 1), TTensorI(DFT(96, 95), 16, APar, APar) ]).withTags([ ASIMTBlockDimX ]),
                  L_SIMT( TL(1536, 96, 1, 1).withTags([ ASIMTBlockDimX ]) ),
                  IxA_SIMT( TTensorI(DFT(96, 95), 16, APar, APar).withTags([ ASIMTBlockDimX ]),
                    DFT_CT( DFT(96, 95),
                      DFT_CT( DFT(12, 11),
                        DFT_CT( DFT(4, 3),
                          DFT_Base( DFT(2, 1) ),
                          DFT_Base( DFT(2, 1) ) ),
                        DFT_PD( DFT(3, 2) ) ),
                      DFT_CT( DFT(8, 7),
                        DFT_CT( DFT(4, 3),
                          DFT_Base( DFT(2, 1) ),
                          DFT_Base( DFT(2, 1) ) ),
                        DFT_Base( DFT(2, 1) ) ) ) ) ) ) ) ) ) ) ),
    IxA_SIMT( TTensorI(TTensorI(PRDFT(96, 95), 96, APar, APar), 96, APar, APar).withTags([ ASIMTKernelFlag(ASIMTGridDimX), ASIMTBlockDimY, ASIMTBlockDimX ]),
      IxA_SIMT( TTensorI(PRDFT(96, 95), 96, APar, APar).withTags([ ASIMTBlockDimY, ASIMTBlockDimX ]),
        PRDFT1_CT( PRDFT(96, 95).withTags([ ASIMTBlockDimX ]),
          PRDFT1_CT( PRDFT(12, 11),
            PRDFT1_CT( PRDFT(4, 3),
              PRDFT1_Base2( PRDFT(2, 1) ),
              DFT_Base( DFT(2, 1) ),
              PRDFT1_Base2( PRDFT(2, 1) ),
              PRDFT3_Base2( PRDFT3(2, 3) ) ),
            DFT_CT( DFT(4, 3),
              DFT_Base( DFT(2, 1) ),
              DFT_Base( DFT(2, 1) ) ),
            PRDFT_PD( PRDFT(3, 2) ) ),
          DFT_CT( DFT(12, 11),
            DFT_CT( DFT(4, 3),
              DFT_Base( DFT(2, 1) ),
              DFT_Base( DFT(2, 1) ) ),
            DFT_PD( DFT(3, 2) ) ),
          PRDFT1_CT( PRDFT(8, 7),
            PRDFT1_CT( PRDFT(4, 3),
              PRDFT1_Base2( PRDFT(2, 1) ),
              DFT_Base( DFT(2, 1) ),
              PRDFT1_Base2( PRDFT(2, 1) ),
              PRDFT3_Base2( PRDFT3(2, 3) ) ),
            DFT_CT( DFT(4, 3),
              DFT_Base( DFT(2, 1) ),
              DFT_Base( DFT(2, 1) ) ),
            PRDFT1_Base2( PRDFT(2, 1) ),
            PRDFT3_CT( PRDFT3(4, 7),
              DFT_Base( DFT(2, 1) ),
              PRDFT3_Base2( PRDFT3(2, 3) ) ) ),
          PRDFT3_CT( PRDFT3(12, 23),
            DFT_PD( DFT(3, 2) ),
            PRDFT3_CT( PRDFT3(4, 7),
              DFT_Base( DFT(2, 1) ),
              PRDFT3_Base2( PRDFT3(2, 3) ) ) ) ) ) ) ) )
;
*/


/*
 * This code was generated by Spiral 8.3.0, www.spiral.net
 */

__device__ double  *P1, *P2, *T116, *T3, *T87;
 __device__ double D2[192] = {1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 0.96592582628906831, (-0.25881904510252079), 
      0.99144486137381038, (-0.1305261922200516), 0.92387953251128674, (-0.38268343236508978), 
      0.99785892323860348, (-0.065403129230143076), 0.94693012949510569, (-0.32143946530316159), 
      0.98078528040323043, (-0.19509032201612825), 0.89687274153268826, (-0.4422886902190013), 
      1.0, 0.0, 0.8660254037844386, (-0.5), 
      0.96592582628906831, (-0.25881904510252079), 0.70710678118654757, (-0.70710678118654757), 
      0.99144486137381038, (-0.1305261922200516), 0.79335334029123517, (-0.60876142900872066), 
      0.92387953251128674, (-0.38268343236508978), 0.60876142900872066, (-0.79335334029123517), 
      1.0, 0.0, 0.70710678118654757, (-0.70710678118654757), 
      0.92387953251128674, (-0.38268343236508978), 0.38268343236508978, (-0.92387953251128674), 
      0.98078528040323043, (-0.19509032201612825), 0.55557023301960218, (-0.83146961230254524), 
      0.83146961230254524, (-0.55557023301960218), 0.19509032201612825, (-0.98078528040323043), 
      1.0, 0.0, 0.5, (-0.8660254037844386), 
      0.8660254037844386, (-0.5), 0.0, (-1.0), 
      0.96592582628906831, (-0.25881904510252079), 0.25881904510252079, (-0.96592582628906831), 
      0.70710678118654757, (-0.70710678118654757), (-0.25881904510252079), (-0.96592582628906831), 
      1.0, 0.0, 0.25881904510252079, (-0.96592582628906831), 
      0.79335334029123517, (-0.60876142900872066), (-0.38268343236508978), (-0.92387953251128674), 
      0.94693012949510569, (-0.32143946530316159), (-0.065403129230143076), (-0.99785892323860348), 
      0.55557023301960218, (-0.83146961230254524), (-0.65934581510006895), (-0.75183980747897738), 
      1.0, 0.0, 0.0, (-1.0), 
      0.70710678118654757, (-0.70710678118654757), (-0.70710678118654757), (-0.70710678118654757), 
      0.92387953251128674, (-0.38268343236508978), (-0.38268343236508978), (-0.92387953251128674), 
      0.38268343236508978, (-0.92387953251128674), (-0.92387953251128674), (-0.38268343236508978), 
      1.0, 0.0, (-0.25881904510252079), (-0.96592582628906831), 
      0.60876142900872066, (-0.79335334029123517), (-0.92387953251128674), (-0.38268343236508978), 
      0.89687274153268826, (-0.4422886902190013), (-0.65934581510006895), (-0.75183980747897738), 
      0.19509032201612825, (-0.98078528040323043), (-0.99785892323860348), 0.065403129230143076, 
      1.0, 0.0, (-0.5), (-0.8660254037844386), 
      0.5, (-0.8660254037844386), (-1.0), 0.0, 
      0.8660254037844386, (-0.5), (-0.8660254037844386), (-0.5), 
      0.0, (-1.0), (-0.8660254037844386), 0.5, 
      1.0, 0.0, (-0.70710678118654757), (-0.70710678118654757), 
      0.38268343236508978, (-0.92387953251128674), (-0.92387953251128674), 0.38268343236508978, 
      0.83146961230254524, (-0.55557023301960218), (-0.98078528040323043), (-0.19509032201612825), 
      (-0.19509032201612825), (-0.98078528040323043), (-0.55557023301960218), 0.83146961230254524, 
      1.0, 0.0, (-0.8660254037844386), (-0.5), 
      0.25881904510252079, (-0.96592582628906831), (-0.70710678118654757), 0.70710678118654757, 
      0.79335334029123517, (-0.60876142900872066), (-0.99144486137381038), 0.1305261922200516, 
      (-0.38268343236508978), (-0.92387953251128674), (-0.1305261922200516), 0.99144486137381038, 
      1.0, 0.0, (-0.96592582628906831), (-0.25881904510252079), 
      0.1305261922200516, (-0.99144486137381038), (-0.38268343236508978), 0.92387953251128674, 
      0.75183980747897738, (-0.65934581510006895), (-0.89687274153268826), 0.4422886902190013, 
      (-0.55557023301960218), (-0.83146961230254524), 0.32143946530316159, 0.94693012949510569};

 __constant__ double D4[48] = {0.96592582628906831, (-0.25881904510252079), 0.8660254037844386, (-0.5), 
      0.94693012949510569, (-0.32143946530316159), 0.83146961230254524, (-0.55557023301960218), 
      0.92387953251128674, (-0.38268343236508978), 0.79335334029123517, (-0.60876142900872066), 
      0.89687274153268826, (-0.4422886902190013), 0.75183980747897738, (-0.65934581510006895), 
      0.8660254037844386, (-0.5), 0.5, (-0.8660254037844386), 
      0.79335334029123517, (-0.60876142900872066), 0.38268343236508978, (-0.92387953251128674), 
      0.70710678118654757, (-0.70710678118654757), 0.25881904510252079, (-0.96592582628906831), 
      0.60876142900872066, (-0.79335334029123517), 0.1305261922200516, (-0.99144486137381038), 
      0.70710678118654757, (-0.70710678118654757), 0.0, (-1.0), 
      0.55557023301960218, (-0.83146961230254524), (-0.19509032201612825), (-0.98078528040323043), 
      0.38268343236508978, (-0.92387953251128674), (-0.38268343236508978), (-0.92387953251128674), 
      0.19509032201612825, (-0.98078528040323043), (-0.55557023301960218), (-0.83146961230254524)};

 __constant__ double D3[24] = {1.0, 0.0, 0.99785892323860348, (-0.065403129230143076), 
      0.99144486137381038, (-0.1305261922200516), 0.98078528040323043, (-0.19509032201612825), 
      1.0, 0.0, 0.99144486137381038, (-0.1305261922200516), 
      0.96592582628906831, (-0.25881904510252079), 0.92387953251128674, (-0.38268343236508978), 
      1.0, 0.0, 0.98078528040323043, (-0.19509032201612825), 
      0.92387953251128674, (-0.38268343236508978), 0.83146961230254524, (-0.55557023301960218)};


__global__ void ker_fftx_mdprdft_96x96x960(double  *X) {
    double a131, a132, s67, s68, s69, s70, s71, s72, 
            s73, s74, s75, s76, s77, s78, s79, s80, 
            s81, s82, s83, s84;
    int a127, a128, a129, a130;
    a127 = (threadIdx.x / 12);
    a128 = (threadIdx.x % 12);
    a129 = ((9216*blockIdx.x) + (96*a127) + a128);
    s67 = X[a129];
    s68 = X[(a129 + 48)];
    s69 = (s67 + s68);
    s70 = (s67 - s68);
    s71 = X[(a129 + 12)];
    s72 = X[(a129 + 60)];
    s73 = (s71 + s72);
    s74 = X[(a129 + 24)];
    s75 = X[(a129 + 72)];
    s76 = (s74 + s75);
    s77 = (s74 - s75);
    s78 = X[(a129 + 36)];
    s79 = X[(a129 + 84)];
    s80 = (s78 + s79);
    s81 = (s69 + s76);
    s82 = (s73 + s80);
    a130 = ((120*a127) + (10*a128));
    T3[(a130 + (11520*blockIdx.x))] = (s81 + s82);
    T3[((a130 + 1) + (11520*blockIdx.x))] = 0.0;
    T3[((a130 + 8) + (11520*blockIdx.x))] = (s81 - s82);
    T3[((a130 + 9) + (11520*blockIdx.x))] = 0.0;
    T3[((a130 + 4) + (11520*blockIdx.x))] = (s69 - s76);
    T3[((a130 + 5) + (11520*blockIdx.x))] = (s80 - s73);
    a131 = (0.70710678118654757*(s71 - s72));
    a132 = (0.70710678118654757*(s78 - s79));
    s83 = (a131 - a132);
    s84 = (a131 + a132);
    T3[((a130 + 2) + (11520*blockIdx.x))] = (s70 + s83);
    T3[((a130 + 3) + (11520*blockIdx.x))] = -((s77 + s84));
    T3[((a130 + 6) + (11520*blockIdx.x))] = (s70 - s83);
    T3[((a130 + 7) + (11520*blockIdx.x))] = (s77 - s84);
    __syncthreads();
    if ((((threadIdx.x % 12) == 0))) {
        double s183, s184, s185, s186, s187, s188, s189, s190, 
                s191, s192, s193, s194, s195, s196, s197, s198, 
                s199, s200, s201, s202, s203, s204, s205, s206, 
                s207, s208, s209, s210, s211, s212, t263, t264, 
                t265, t266, t267, t268, t269, t270, t271, t272, 
                t273, t274;
        int a280, a281, a282;
        a280 = (threadIdx.x / 12);
        a281 = (120*a280);
        s183 = T3[(a281 + (11520*blockIdx.x))];
        s184 = T3[((a281 + 40) + (11520*blockIdx.x))];
        s185 = T3[((a281 + 80) + (11520*blockIdx.x))];
        t263 = (s184 + s185);
        s186 = (s183 + t263);
        s187 = (s183 - (0.5*t263));
        s188 = (0.8660254037844386*(s184 - s185));
        s189 = T3[((a281 + 10) + (11520*blockIdx.x))];
        s190 = T3[((a281 + 50) + (11520*blockIdx.x))];
        s191 = T3[((a281 + 90) + (11520*blockIdx.x))];
        t264 = (s190 + s191);
        s192 = (s189 + t264);
        s193 = (s189 - (0.5*t264));
        s194 = (0.8660254037844386*(s190 - s191));
        s195 = T3[((a281 + 20) + (11520*blockIdx.x))];
        s196 = T3[((a281 + 60) + (11520*blockIdx.x))];
        s197 = T3[((a281 + 100) + (11520*blockIdx.x))];
        t265 = (s196 + s197);
        s198 = (s195 + t265);
        s199 = (s195 - (0.5*t265));
        s200 = (0.8660254037844386*(s196 - s197));
        s201 = T3[((a281 + 30) + (11520*blockIdx.x))];
        s202 = T3[((a281 + 70) + (11520*blockIdx.x))];
        s203 = T3[((a281 + 110) + (11520*blockIdx.x))];
        t266 = (s202 + s203);
        s204 = (s201 + t266);
        s205 = (s201 - (0.5*t266));
        s206 = (0.8660254037844386*(s202 - s203));
        s207 = (s186 + s198);
        s208 = (s192 + s204);
        a282 = ((9408*blockIdx.x) + (98*a280));
        P1[a282] = (s207 + s208);
        P1[(a282 + 1)] = 0.0;
        P1[(a282 + 96)] = (s207 - s208);
        P1[(a282 + 97)] = 0.0;
        P1[(a282 + 48)] = (s186 - s198);
        P1[(a282 + 49)] = (s204 - s192);
        s209 = ((0.5*s199) - (0.8660254037844386*s200));
        s210 = ((0.8660254037844386*s199) + (0.5*s200));
        t267 = (s187 + s209);
        t268 = (s188 + s210);
        t269 = (s187 - s209);
        t270 = (s210 - s188);
        s211 = ((0.8660254037844386*s193) - (0.5*s194));
        s212 = ((0.5*s193) + (0.8660254037844386*s194));
        t271 = (s211 - s206);
        t272 = (s212 + s205);
        t273 = (s211 + s206);
        t274 = (s205 - s212);
        P1[(a282 + 16)] = (t267 + t271);
        P1[(a282 + 17)] = -((t268 + t272));
        P1[(a282 + 80)] = (t267 - t271);
        P1[(a282 + 81)] = (t268 - t272);
        P1[(a282 + 64)] = (t269 + t274);
        P1[(a282 + 65)] = (t270 - t273);
        P1[(a282 + 32)] = (t269 - t274);
        P1[(a282 + 33)] = -((t270 + t273));
    }
    if ((((threadIdx.x % 12) == 1))) {
        for(int i7 = 0; i7 <= 2; i7++) {
            double a929, a930, a932, a933, a934, a935, a936, a937, 
                    a938, a939, a940, a941, a942, a943, a944, a945, 
                    a946, a947, a948, a949, a950, a951, a952, a953, 
                    s454, s455, s456, s457, s458, s459, s460, s461, 
                    s462, s463, s464, s465, s466, s467, s468, s469, 
                    s470, s471, s472, s473, s474, s475, s476, s477, 
                    s478, s479, s480, s481, s482, s483, s484, s485, 
                    s486, s487, s488, s489, s490, s491, s492, s493, 
                    s494, s495, s496, s497, s498, s499, s500, s501, 
                    s502, s503, s504, s505, s506, s507, s508, s509, 
                    s510, s511, s512, s513, s514, s515, s516, s517, 
                    s518, s519, s520, s521, s522, s523, s524, s525, 
                    s526, s527, s528, s529, s530, s531, s532, s533, 
                    t484, t485, t486, t487, t488, t489, t490, t491, 
                    t492, t493, t494, t495, t496, t497, t498, t499, 
                    t500, t501, t502, t503, t504, t505, t506, t507, 
                    t508, t509, t510, t511, t512, t513, t514, t515, 
                    t516, t517, t518, t519, t520, t521, t522, t523, 
                    t524, t525, t526, t527, t528, t529, t530, t531;
            int a926, a927, a928, a931, b119, b120, b121, b122;
            a926 = (2*i7);
            a927 = (threadIdx.x / 12);
            b119 = ((120*a927) + a926);
            s454 = T3[((b119 + 2) + (11520*blockIdx.x))];
            s455 = T3[((b119 + 3) + (11520*blockIdx.x))];
            a928 = (8*i7);
            a929 = D3[a928];
            a930 = D3[(a928 + 1)];
            s456 = ((a929*s454) - (a930*s455));
            s457 = ((a930*s454) + (a929*s455));
            s458 = T3[((b119 + 42) + (11520*blockIdx.x))];
            s459 = T3[((b119 + 43) + (11520*blockIdx.x))];
            s460 = T3[((b119 + 82) + (11520*blockIdx.x))];
            s461 = T3[((b119 + 83) + (11520*blockIdx.x))];
            a931 = (16*i7);
            a932 = D4[a931];
            a933 = D4[(a931 + 1)];
            s462 = ((a932*s458) - (a933*s459));
            s463 = ((a933*s458) + (a932*s459));
            a934 = D4[(a931 + 2)];
            a935 = D4[(a931 + 3)];
            s464 = ((a934*s460) - (a935*s461));
            s465 = ((a935*s460) + (a934*s461));
            t484 = (s462 + s464);
            t485 = (s463 + s465);
            s466 = (s456 + t484);
            s467 = (s457 + t485);
            s468 = (s456 - (0.5*t484));
            s469 = (s457 - (0.5*t485));
            s470 = (0.8660254037844386*(s463 - s465));
            s471 = (0.8660254037844386*(s462 - s464));
            t486 = (s468 + s470);
            t487 = (s469 - s471);
            t488 = (s468 - s470);
            t489 = (s469 + s471);
            s472 = T3[((b119 + 12) + (11520*blockIdx.x))];
            s473 = T3[((b119 + 13) + (11520*blockIdx.x))];
            a936 = D3[(a928 + 2)];
            a937 = D3[(a928 + 3)];
            s474 = ((a936*s472) - (a937*s473));
            s475 = ((a937*s472) + (a936*s473));
            s476 = T3[((b119 + 52) + (11520*blockIdx.x))];
            s477 = T3[((b119 + 53) + (11520*blockIdx.x))];
            s478 = T3[((b119 + 92) + (11520*blockIdx.x))];
            s479 = T3[((b119 + 93) + (11520*blockIdx.x))];
            a938 = D4[(a931 + 4)];
            a939 = D4[(a931 + 5)];
            s480 = ((a938*s476) - (a939*s477));
            s481 = ((a939*s476) + (a938*s477));
            a940 = D4[(a931 + 6)];
            a941 = D4[(a931 + 7)];
            s482 = ((a940*s478) - (a941*s479));
            s483 = ((a941*s478) + (a940*s479));
            t490 = (s480 + s482);
            t491 = (s481 + s483);
            s484 = (s474 + t490);
            s485 = (s475 + t491);
            s486 = (s474 - (0.5*t490));
            s487 = (s475 - (0.5*t491));
            s488 = (0.8660254037844386*(s481 - s483));
            s489 = (0.8660254037844386*(s480 - s482));
            t492 = (s486 + s488);
            t493 = (s487 - s489);
            t494 = (s486 - s488);
            t495 = (s487 + s489);
            s490 = ((0.8660254037844386*t492) + (0.5*t493));
            s491 = ((0.8660254037844386*t493) - (0.5*t492));
            s492 = ((0.5*t494) + (0.8660254037844386*t495));
            s493 = ((0.5*t495) - (0.8660254037844386*t494));
            s494 = T3[((b119 + 22) + (11520*blockIdx.x))];
            s495 = T3[((b119 + 23) + (11520*blockIdx.x))];
            a942 = D3[(a928 + 4)];
            a943 = D3[(a928 + 5)];
            s496 = ((a942*s494) - (a943*s495));
            s497 = ((a943*s494) + (a942*s495));
            s498 = T3[((b119 + 62) + (11520*blockIdx.x))];
            s499 = T3[((b119 + 63) + (11520*blockIdx.x))];
            s500 = T3[((b119 + 102) + (11520*blockIdx.x))];
            s501 = T3[((b119 + 103) + (11520*blockIdx.x))];
            a944 = D4[(a931 + 8)];
            a945 = D4[(a931 + 9)];
            s502 = ((a944*s498) - (a945*s499));
            s503 = ((a945*s498) + (a944*s499));
            a946 = D4[(a931 + 10)];
            a947 = D4[(a931 + 11)];
            s504 = ((a946*s500) - (a947*s501));
            s505 = ((a947*s500) + (a946*s501));
            t496 = (s502 + s504);
            t497 = (s503 + s505);
            s506 = (s496 + t496);
            s507 = (s497 + t497);
            s508 = (s496 - (0.5*t496));
            s509 = (s497 - (0.5*t497));
            s510 = (0.8660254037844386*(s503 - s505));
            s511 = (0.8660254037844386*(s502 - s504));
            t498 = (s508 + s510);
            t499 = (s509 - s511);
            t500 = (s508 - s510);
            t501 = (s509 + s511);
            s512 = ((0.5*t498) + (0.8660254037844386*t499));
            s513 = ((0.5*t499) - (0.8660254037844386*t498));
            s514 = ((0.8660254037844386*t501) - (0.5*t500));
            s515 = ((0.8660254037844386*t500) + (0.5*t501));
            s516 = T3[((b119 + 32) + (11520*blockIdx.x))];
            s517 = T3[((b119 + 33) + (11520*blockIdx.x))];
            a948 = D3[(a928 + 6)];
            a949 = D3[(a928 + 7)];
            s518 = ((a948*s516) - (a949*s517));
            s519 = ((a949*s516) + (a948*s517));
            s520 = T3[((b119 + 72) + (11520*blockIdx.x))];
            s521 = T3[((b119 + 73) + (11520*blockIdx.x))];
            s522 = T3[((b119 + 112) + (11520*blockIdx.x))];
            s523 = T3[((b119 + 113) + (11520*blockIdx.x))];
            a950 = D4[(a931 + 12)];
            a951 = D4[(a931 + 13)];
            s524 = ((a950*s520) - (a951*s521));
            s525 = ((a951*s520) + (a950*s521));
            a952 = D4[(a931 + 14)];
            a953 = D4[(a931 + 15)];
            s526 = ((a952*s522) - (a953*s523));
            s527 = ((a953*s522) + (a952*s523));
            t502 = (s524 + s526);
            t503 = (s525 + s527);
            s528 = (s518 + t502);
            s529 = (s519 + t503);
            s530 = (s518 - (0.5*t502));
            s531 = (s519 - (0.5*t503));
            s532 = (0.8660254037844386*(s525 - s527));
            s533 = (0.8660254037844386*(s524 - s526));
            t504 = (s530 + s532);
            t505 = (s531 - s533);
            t506 = (s530 - s532);
            t507 = (s531 + s533);
            t508 = (s466 + s506);
            t509 = (s467 + s507);
            t510 = (s466 - s506);
            t511 = (s467 - s507);
            t512 = (s484 + s528);
            t513 = (s485 + s529);
            t514 = (s484 - s528);
            t515 = (s485 - s529);
            b120 = ((9408*blockIdx.x) + (98*a927));
            b121 = (b120 + a926);
            P1[(b121 + 2)] = (t508 + t512);
            P1[(b121 + 3)] = (t509 + t513);
            b122 = (b120 - a926);
            P1[(b122 + 94)] = (t508 - t512);
            P1[(b122 + 95)] = (t513 - t509);
            P1[(b121 + 50)] = (t510 + t515);
            P1[(b121 + 51)] = (t511 - t514);
            P1[(b122 + 46)] = (t510 - t515);
            P1[(b122 + 47)] = -((t511 + t514));
            t516 = (t486 + s512);
            t517 = (t487 + s513);
            t518 = (t486 - s512);
            t519 = (t487 - s513);
            t520 = (s490 + t505);
            t521 = (s491 - t504);
            t522 = (s490 - t505);
            t523 = (s491 + t504);
            P1[(b121 + 18)] = (t516 + t520);
            P1[(b121 + 19)] = (t517 + t521);
            P1[(b122 + 78)] = (t516 - t520);
            P1[(b122 + 79)] = (t521 - t517);
            P1[(b121 + 66)] = (t518 + t523);
            P1[(b121 + 67)] = (t519 - t522);
            P1[(b122 + 30)] = (t518 - t523);
            P1[(b122 + 31)] = -((t519 + t522));
            t524 = (t488 + s514);
            t525 = (t489 - s515);
            t526 = (t488 - s514);
            t527 = (t489 + s515);
            t528 = (s492 - t506);
            t529 = (s493 - t507);
            t530 = (s492 + t506);
            t531 = (s493 + t507);
            P1[(b121 + 34)] = (t524 + t528);
            P1[(b121 + 35)] = (t525 + t529);
            P1[(b122 + 62)] = (t524 - t528);
            P1[(b122 + 63)] = (t529 - t525);
            P1[(b121 + 82)] = (t526 + t531);
            P1[(b121 + 83)] = (t527 - t530);
            P1[(b122 + 14)] = (t526 - t531);
            P1[(b122 + 15)] = -((t527 + t530));
        }
    }
    if ((((threadIdx.x % 12) == 2))) {
        double a1126, a1127, a1128, a1129, a1130, a1131, a1132, a1133, 
                s632, s633, s634, s635, s636, s637, s638, s639, 
                s640, s641, s642, s643, s644, s645, s646, s647, 
                s648, s649, s650, s651, s652, s653, s654, s655, 
                s656, s657, t602, t603, t604, t605, t606, t607, 
                t608, t609, t610, t611, t612, t613, t614, t615;
        int a1124, a1125, b137;
        a1124 = (threadIdx.x / 12);
        a1125 = (120*a1124);
        s632 = T3[((a1125 + 8) + (11520*blockIdx.x))];
        s633 = T3[((a1125 + 68) + (11520*blockIdx.x))];
        a1126 = (0.70710678118654757*T3[((a1125 + 38) + (11520*blockIdx.x))]);
        a1127 = (0.70710678118654757*T3[((a1125 + 98) + (11520*blockIdx.x))]);
        s634 = (a1126 - a1127);
        s635 = (a1126 + a1127);
        t602 = (s632 + s634);
        t603 = (s633 + s635);
        t604 = (s632 - s634);
        t605 = (s635 - s633);
        s636 = T3[((a1125 + 18) + (11520*blockIdx.x))];
        s637 = T3[((a1125 + 78) + (11520*blockIdx.x))];
        a1128 = (0.70710678118654757*T3[((a1125 + 48) + (11520*blockIdx.x))]);
        a1129 = (0.70710678118654757*T3[((a1125 + 108) + (11520*blockIdx.x))]);
        s638 = (a1128 - a1129);
        s639 = (a1128 + a1129);
        t606 = (s636 + s638);
        t607 = (s637 + s639);
        s640 = T3[((a1125 + 28) + (11520*blockIdx.x))];
        s641 = T3[((a1125 + 88) + (11520*blockIdx.x))];
        a1130 = (0.70710678118654757*T3[((a1125 + 58) + (11520*blockIdx.x))]);
        a1131 = (0.70710678118654757*T3[((a1125 + 118) + (11520*blockIdx.x))]);
        s642 = (a1130 - a1131);
        s643 = (a1130 + a1131);
        t608 = (s640 + s642);
        t609 = (s641 + s643);
        t610 = (s640 - s642);
        t611 = (s643 - s641);
        s644 = ((0.96592582628906831*t606) - (0.25881904510252079*t607));
        s645 = ((0.25881904510252079*t606) + (0.96592582628906831*t607));
        s646 = ((0.8660254037844386*t608) - (0.5*t609));
        s647 = ((0.5*t608) + (0.8660254037844386*t609));
        t612 = (s644 + s646);
        t613 = (s645 + s647);
        s648 = (t602 - (0.5*t612));
        s649 = ((0.5*t613) - t603);
        s650 = (0.8660254037844386*(s647 - s645));
        s651 = (0.8660254037844386*(s644 - s646));
        b137 = ((9408*blockIdx.x) + (98*a1124));
        P1[(b137 + 8)] = (t602 + t612);
        P1[(b137 + 9)] = -((t603 + t613));
        P1[(b137 + 72)] = (s648 + s650);
        P1[(b137 + 73)] = (s649 - s651);
        P1[(b137 + 56)] = (s648 - s650);
        P1[(b137 + 57)] = -((s649 + s651));
        a1132 = (0.70710678118654757*(s636 - s638));
        a1133 = (0.70710678118654757*(s639 - s637));
        s652 = (a1132 - a1133);
        s653 = (a1132 + a1133);
        t614 = (s652 - t611);
        t615 = (s653 + t610);
        s654 = (t604 - (0.5*t614));
        s655 = ((0.5*t615) - t605);
        s656 = (0.8660254037844386*(t610 - s653));
        s657 = (0.8660254037844386*(s652 + t611));
        P1[(b137 + 24)] = (t604 + t614);
        P1[(b137 + 25)] = -((t605 + t615));
        P1[(b137 + 88)] = (s654 + s656);
        P1[(b137 + 89)] = (s655 - s657);
        P1[(b137 + 40)] = (s654 - s656);
        P1[(b137 + 41)] = -((s655 + s657));
    }
    __syncthreads();
}

__global__ void ker_fftx_mdprdft_96x96x961() {
    double a1778, a1779, a1780, a1781, a1783, a1784, a1785, a1786, 
            a1788, a1789, a1790, a1791, a1792, a1793, a1794, a1795, 
            a1796, a1797, a1798, a1799, s750, s751, s752, s753, 
            s754, s755, s756, s757, s758, s759, s760, s761, 
            s762, s763, s764, s765, s766, s767, s768, s769, 
            t756, t757, t758, t759, t760, t761, t762, t763, 
            t764, t765, t766, t767, t768, t769, t770, t771, 
            t772, t773, t774, t775, t776, t777, t778, t779, 
            t780, t781, t782, t783, t784, t785, t786, t787, 
            t788, t789, t790, t791, t792, t793, t794, t795, 
            t796, t797, t798, t799;
    int a1773, a1774, a1775, a1776, a1777, a1782, a1787;
    a1773 = (threadIdx.x / 192);
    a1774 = (threadIdx.x % 192);
    a1775 = (a1774 / 12);
    a1776 = (a1774 % 12);
    a1777 = ((2*blockIdx.x) + (150528*a1773) + (9408*a1775) + (98*a1776));
    s750 = P1[a1777];
    s751 = P1[(a1777 + 1)];
    s752 = P1[(a1777 + 4704)];
    s753 = P1[(a1777 + 4705)];
    t756 = (s750 + s752);
    t757 = (s751 + s753);
    t758 = (s750 - s752);
    t759 = (s751 - s753);
    s754 = P1[(a1777 + 1176)];
    s755 = P1[(a1777 + 1177)];
    s756 = P1[(a1777 + 5880)];
    s757 = P1[(a1777 + 5881)];
    t760 = (s754 + s756);
    t761 = (s755 + s757);
    a1778 = (0.70710678118654757*(s754 - s756));
    a1779 = (0.70710678118654757*(s755 - s757));
    s758 = (a1778 + a1779);
    s759 = (a1779 - a1778);
    s760 = P1[(a1777 + 2352)];
    s761 = P1[(a1777 + 2353)];
    s762 = P1[(a1777 + 7056)];
    s763 = P1[(a1777 + 7057)];
    t762 = (s760 + s762);
    t763 = (s761 + s763);
    t764 = (s760 - s762);
    t765 = (s761 - s763);
    s764 = P1[(a1777 + 3528)];
    s765 = P1[(a1777 + 3529)];
    s766 = P1[(a1777 + 8232)];
    s767 = P1[(a1777 + 8233)];
    t766 = (s764 + s766);
    t767 = (s765 + s767);
    a1780 = (0.70710678118654757*(s765 - s767));
    a1781 = (0.70710678118654757*(s764 - s766));
    s768 = (a1780 - a1781);
    s769 = (a1781 + a1780);
    t768 = (t756 + t762);
    t769 = (t757 + t763);
    t770 = (t756 - t762);
    t771 = (t757 - t763);
    t772 = (t760 + t766);
    t773 = (t761 + t767);
    t774 = (t760 - t766);
    t775 = (t761 - t767);
    t776 = (t768 + t772);
    t777 = (t769 + t773);
    t778 = (t768 - t772);
    t779 = (t769 - t773);
    a1782 = (16*a1776);
    a1783 = D2[a1782];
    a1784 = D2[(a1782 + 1)];
    a1785 = D2[(a1782 + 2)];
    a1786 = D2[(a1782 + 3)];
    a1787 = ((3072*a1773) + (192*a1775) + a1782);
    T87[(a1787 + (18432*blockIdx.x))] = ((a1783*t776) - (a1784*t777));
    T87[((a1787 + 1) + (18432*blockIdx.x))] = ((a1784*t776) + (a1783*t777));
    T87[((a1787 + 8) + (18432*blockIdx.x))] = ((a1785*t778) - (a1786*t779));
    T87[((a1787 + 9) + (18432*blockIdx.x))] = ((a1786*t778) + (a1785*t779));
    t780 = (t770 + t775);
    t781 = (t771 - t774);
    t782 = (t770 - t775);
    t783 = (t771 + t774);
    a1788 = D2[(4 + a1782)];
    a1789 = D2[(5 + a1782)];
    a1790 = D2[(6 + a1782)];
    a1791 = D2[(7 + a1782)];
    T87[((a1787 + 4) + (18432*blockIdx.x))] = ((a1788*t780) - (a1789*t781));
    T87[((a1787 + 5) + (18432*blockIdx.x))] = ((a1789*t780) + (a1788*t781));
    T87[((a1787 + 12) + (18432*blockIdx.x))] = ((a1790*t782) - (a1791*t783));
    T87[((a1787 + 13) + (18432*blockIdx.x))] = ((a1791*t782) + (a1790*t783));
    t784 = (t758 + t765);
    t785 = (t759 - t764);
    t786 = (t758 - t765);
    t787 = (t759 + t764);
    t788 = (s758 + s768);
    t789 = (s759 - s769);
    t790 = (s758 - s768);
    t791 = (s759 + s769);
    t792 = (t784 + t788);
    t793 = (t785 + t789);
    t794 = (t784 - t788);
    t795 = (t785 - t789);
    a1792 = D2[(a1782 + 8)];
    a1793 = D2[(9 + a1782)];
    a1794 = D2[(10 + a1782)];
    a1795 = D2[(11 + a1782)];
    T87[((a1787 + 2) + (18432*blockIdx.x))] = ((a1792*t792) - (a1793*t793));
    T87[((a1787 + 3) + (18432*blockIdx.x))] = ((a1793*t792) + (a1792*t793));
    T87[((a1787 + 10) + (18432*blockIdx.x))] = ((a1794*t794) - (a1795*t795));
    T87[((a1787 + 11) + (18432*blockIdx.x))] = ((a1795*t794) + (a1794*t795));
    t796 = (t786 + t791);
    t797 = (t787 - t790);
    t798 = (t786 - t791);
    t799 = (t787 + t790);
    a1796 = D2[(12 + a1782)];
    a1797 = D2[(13 + a1782)];
    a1798 = D2[(14 + a1782)];
    a1799 = D2[(15 + a1782)];
    T87[((a1787 + 6) + (18432*blockIdx.x))] = ((a1796*t796) - (a1797*t797));
    T87[((a1787 + 7) + (18432*blockIdx.x))] = ((a1797*t796) + (a1796*t797));
    T87[((a1787 + 14) + (18432*blockIdx.x))] = ((a1798*t798) - (a1799*t799));
    T87[((a1787 + 15) + (18432*blockIdx.x))] = ((a1799*t798) + (a1798*t799));
    __syncthreads();
    if( threadIdx.x <= 767 ) {
        double s938, s939, s940, s941, s942, s943, s944, s945, 
                s946, s947, s948, s949, s950, s951, s952, s953, 
                s954, s955, s956, s957, s958, s959, s960, s961, 
                s962, s963, s964, s965, s966, s967, s968, s969, 
                s970, s971, s972, s973, s974, s975, s976, s977, 
                s978, s979, s980, s981, s982, s983, s984, s985, 
                s986, s987, s988, s989, s990, s991, s992, s993, 
                t1008, t1009, t1010, t1011, t1012, t1013, t1014, t1015, 
                t1016, t1017, t1018, t1019, t1020, t1021, t1022, t1023, 
                t1024, t1025, t1026, t1027, t1028, t1029, t1030, t1031, 
                t1032, t1033, t1034, t1035, t1036, t1037, t1038, t1039, 
                t1040, t1041, t1042, t1043, t1044, t1045, t1046, t1047, 
                t1048, t1049, t1050, t1051, t1052, t1053, t1054, t1055;
        int a2369, a2370, a2371, a2372, a2373, a2374;
        a2369 = (threadIdx.x / 128);
        a2370 = (threadIdx.x % 128);
        a2371 = (a2370 / 8);
        a2372 = (a2370 % 8);
        a2373 = ((3072*a2369) + (192*a2371) + (2*a2372));
        s938 = T87[(a2373 + (18432*blockIdx.x))];
        s939 = T87[((a2373 + 1) + (18432*blockIdx.x))];
        s940 = T87[((a2373 + 64) + (18432*blockIdx.x))];
        s941 = T87[((a2373 + 65) + (18432*blockIdx.x))];
        s942 = T87[((a2373 + 128) + (18432*blockIdx.x))];
        s943 = T87[((a2373 + 129) + (18432*blockIdx.x))];
        t1008 = (s940 + s942);
        t1009 = (s941 + s943);
        s944 = (s938 + t1008);
        s945 = (s939 + t1009);
        s946 = (s938 - (0.5*t1008));
        s947 = (s939 - (0.5*t1009));
        s948 = (0.8660254037844386*(s941 - s943));
        s949 = (0.8660254037844386*(s940 - s942));
        t1010 = (s946 + s948);
        t1011 = (s947 - s949);
        t1012 = (s946 - s948);
        t1013 = (s947 + s949);
        s950 = T87[((a2373 + 16) + (18432*blockIdx.x))];
        s951 = T87[((a2373 + 17) + (18432*blockIdx.x))];
        s952 = T87[((a2373 + 80) + (18432*blockIdx.x))];
        s953 = T87[((a2373 + 81) + (18432*blockIdx.x))];
        s954 = T87[((a2373 + 144) + (18432*blockIdx.x))];
        s955 = T87[((a2373 + 145) + (18432*blockIdx.x))];
        t1014 = (s952 + s954);
        t1015 = (s953 + s955);
        s956 = (s950 + t1014);
        s957 = (s951 + t1015);
        s958 = (s950 - (0.5*t1014));
        s959 = (s951 - (0.5*t1015));
        s960 = (0.8660254037844386*(s953 - s955));
        s961 = (0.8660254037844386*(s952 - s954));
        t1016 = (s958 + s960);
        t1017 = (s959 - s961);
        t1018 = (s958 - s960);
        t1019 = (s959 + s961);
        s962 = ((0.8660254037844386*t1016) + (0.5*t1017));
        s963 = ((0.8660254037844386*t1017) - (0.5*t1016));
        s964 = ((0.5*t1018) + (0.8660254037844386*t1019));
        s965 = ((0.5*t1019) - (0.8660254037844386*t1018));
        s966 = T87[((a2373 + 32) + (18432*blockIdx.x))];
        s967 = T87[((a2373 + 33) + (18432*blockIdx.x))];
        s968 = T87[((a2373 + 96) + (18432*blockIdx.x))];
        s969 = T87[((a2373 + 97) + (18432*blockIdx.x))];
        s970 = T87[((a2373 + 160) + (18432*blockIdx.x))];
        s971 = T87[((a2373 + 161) + (18432*blockIdx.x))];
        t1020 = (s968 + s970);
        t1021 = (s969 + s971);
        s972 = (s966 + t1020);
        s973 = (s967 + t1021);
        s974 = (s966 - (0.5*t1020));
        s975 = (s967 - (0.5*t1021));
        s976 = (0.8660254037844386*(s969 - s971));
        s977 = (0.8660254037844386*(s968 - s970));
        t1022 = (s974 + s976);
        t1023 = (s975 - s977);
        t1024 = (s974 - s976);
        t1025 = (s975 + s977);
        s978 = ((0.5*t1022) + (0.8660254037844386*t1023));
        s979 = ((0.5*t1023) - (0.8660254037844386*t1022));
        s980 = ((0.8660254037844386*t1025) - (0.5*t1024));
        s981 = ((0.8660254037844386*t1024) + (0.5*t1025));
        s982 = T87[((a2373 + 48) + (18432*blockIdx.x))];
        s983 = T87[((a2373 + 49) + (18432*blockIdx.x))];
        s984 = T87[((a2373 + 112) + (18432*blockIdx.x))];
        s985 = T87[((a2373 + 113) + (18432*blockIdx.x))];
        s986 = T87[((a2373 + 176) + (18432*blockIdx.x))];
        s987 = T87[((a2373 + 177) + (18432*blockIdx.x))];
        t1026 = (s984 + s986);
        t1027 = (s985 + s987);
        s988 = (s982 + t1026);
        s989 = (s983 + t1027);
        s990 = (s982 - (0.5*t1026));
        s991 = (s983 - (0.5*t1027));
        s992 = (0.8660254037844386*(s985 - s987));
        s993 = (0.8660254037844386*(s984 - s986));
        t1028 = (s990 + s992);
        t1029 = (s991 - s993);
        t1030 = (s990 - s992);
        t1031 = (s991 + s993);
        t1032 = (s944 + s972);
        t1033 = (s945 + s973);
        t1034 = (s944 - s972);
        t1035 = (s945 - s973);
        t1036 = (s956 + s988);
        t1037 = (s957 + s989);
        t1038 = (s956 - s988);
        t1039 = (s957 - s989);
        a2374 = ((18432*blockIdx.x) + (192*a2372) + (32*a2369) + (2*a2371));
        P2[a2374] = (t1032 + t1036);
        P2[(a2374 + 1)] = (t1033 + t1037);
        P2[(a2374 + 9216)] = (t1032 - t1036);
        P2[(a2374 + 9217)] = (t1033 - t1037);
        P2[(a2374 + 4608)] = (t1034 + t1039);
        P2[(a2374 + 4609)] = (t1035 - t1038);
        P2[(a2374 + 13824)] = (t1034 - t1039);
        P2[(a2374 + 13825)] = (t1035 + t1038);
        t1040 = (t1010 + s978);
        t1041 = (t1011 + s979);
        t1042 = (t1010 - s978);
        t1043 = (t1011 - s979);
        t1044 = (s962 + t1029);
        t1045 = (s963 - t1028);
        t1046 = (s962 - t1029);
        t1047 = (s963 + t1028);
        P2[(a2374 + 1536)] = (t1040 + t1044);
        P2[(a2374 + 1537)] = (t1041 + t1045);
        P2[(a2374 + 10752)] = (t1040 - t1044);
        P2[(a2374 + 10753)] = (t1041 - t1045);
        P2[(a2374 + 6144)] = (t1042 + t1047);
        P2[(a2374 + 6145)] = (t1043 - t1046);
        P2[(a2374 + 15360)] = (t1042 - t1047);
        P2[(a2374 + 15361)] = (t1043 + t1046);
        t1048 = (t1012 + s980);
        t1049 = (t1013 - s981);
        t1050 = (t1012 - s980);
        t1051 = (t1013 + s981);
        t1052 = (s964 - t1030);
        t1053 = (s965 - t1031);
        t1054 = (s964 + t1030);
        t1055 = (s965 + t1031);
        P2[(a2374 + 3072)] = (t1048 + t1052);
        P2[(a2374 + 3073)] = (t1049 + t1053);
        P2[(a2374 + 12288)] = (t1048 - t1052);
        P2[(a2374 + 12289)] = (t1049 - t1053);
        P2[(a2374 + 7680)] = (t1050 + t1055);
        P2[(a2374 + 7681)] = (t1051 - t1054);
        P2[(a2374 + 16896)] = (t1050 - t1055);
        P2[(a2374 + 16897)] = (t1051 + t1054);
    }
    __syncthreads();
}

__global__ void ker_fftx_mdprdft_96x96x962(double  *Y) {
    double a3017, a3018, a3019, a3020, a3022, a3023, a3024, a3025, 
            a3027, a3028, a3029, a3030, a3031, a3032, a3033, a3034, 
            a3035, a3036, a3037, a3038, s1086, s1087, s1088, s1089, 
            s1090, s1091, s1092, s1093, s1094, s1095, s1096, s1097, 
            s1098, s1099, s1100, s1101, s1102, s1103, s1104, s1105, 
            t1196, t1197, t1198, t1199, t1200, t1201, t1202, t1203, 
            t1204, t1205, t1206, t1207, t1208, t1209, t1210, t1211, 
            t1212, t1213, t1214, t1215, t1216, t1217, t1218, t1219, 
            t1220, t1221, t1222, t1223, t1224, t1225, t1226, t1227, 
            t1228, t1229, t1230, t1231, t1232, t1233, t1234, t1235, 
            t1236, t1237, t1238, t1239;
    int a3012, a3013, a3014, a3015, a3016, a3021, a3026;
    a3012 = (3072*(threadIdx.x / 192));
    a3013 = (threadIdx.x % 192);
    a3014 = (192*(a3013 / 12));
    a3015 = (a3013 % 12);
    a3016 = ((18432*blockIdx.x) + a3012 + a3014 + (2*a3015));
    s1086 = P2[a3016];
    s1087 = P2[(a3016 + 1)];
    s1088 = P2[(a3016 + 96)];
    s1089 = P2[(a3016 + 97)];
    t1196 = (s1086 + s1088);
    t1197 = (s1087 + s1089);
    t1198 = (s1086 - s1088);
    t1199 = (s1087 - s1089);
    s1090 = P2[(a3016 + 24)];
    s1091 = P2[(a3016 + 25)];
    s1092 = P2[(a3016 + 120)];
    s1093 = P2[(a3016 + 121)];
    t1200 = (s1090 + s1092);
    t1201 = (s1091 + s1093);
    a3017 = (0.70710678118654757*(s1090 - s1092));
    a3018 = (0.70710678118654757*(s1091 - s1093));
    s1094 = (a3017 + a3018);
    s1095 = (a3018 - a3017);
    s1096 = P2[(a3016 + 48)];
    s1097 = P2[(a3016 + 49)];
    s1098 = P2[(a3016 + 144)];
    s1099 = P2[(a3016 + 145)];
    t1202 = (s1096 + s1098);
    t1203 = (s1097 + s1099);
    t1204 = (s1096 - s1098);
    t1205 = (s1097 - s1099);
    s1100 = P2[(a3016 + 72)];
    s1101 = P2[(a3016 + 73)];
    s1102 = P2[(a3016 + 168)];
    s1103 = P2[(a3016 + 169)];
    t1206 = (s1100 + s1102);
    t1207 = (s1101 + s1103);
    a3019 = (0.70710678118654757*(s1101 - s1103));
    a3020 = (0.70710678118654757*(s1100 - s1102));
    s1104 = (a3019 - a3020);
    s1105 = (a3020 + a3019);
    t1208 = (t1196 + t1202);
    t1209 = (t1197 + t1203);
    t1210 = (t1196 - t1202);
    t1211 = (t1197 - t1203);
    t1212 = (t1200 + t1206);
    t1213 = (t1201 + t1207);
    t1214 = (t1200 - t1206);
    t1215 = (t1201 - t1207);
    t1216 = (t1208 + t1212);
    t1217 = (t1209 + t1213);
    t1218 = (t1208 - t1212);
    t1219 = (t1209 - t1213);
    a3021 = (16*a3015);
    a3022 = D2[a3021];
    a3023 = D2[(a3021 + 1)];
    a3024 = D2[(a3021 + 2)];
    a3025 = D2[(a3021 + 3)];
    a3026 = (a3012 + a3014 + a3021);
    T116[(a3026 + (18432*blockIdx.x))] = ((a3022*t1216) - (a3023*t1217));
    T116[((a3026 + 1) + (18432*blockIdx.x))] = ((a3023*t1216) + (a3022*t1217));
    T116[((a3026 + 8) + (18432*blockIdx.x))] = ((a3024*t1218) - (a3025*t1219));
    T116[((a3026 + 9) + (18432*blockIdx.x))] = ((a3025*t1218) + (a3024*t1219));
    t1220 = (t1210 + t1215);
    t1221 = (t1211 - t1214);
    t1222 = (t1210 - t1215);
    t1223 = (t1211 + t1214);
    a3027 = D2[(4 + a3021)];
    a3028 = D2[(5 + a3021)];
    a3029 = D2[(6 + a3021)];
    a3030 = D2[(7 + a3021)];
    T116[((a3026 + 4) + (18432*blockIdx.x))] = ((a3027*t1220) - (a3028*t1221));
    T116[((a3026 + 5) + (18432*blockIdx.x))] = ((a3028*t1220) + (a3027*t1221));
    T116[((a3026 + 12) + (18432*blockIdx.x))] = ((a3029*t1222) - (a3030*t1223));
    T116[((a3026 + 13) + (18432*blockIdx.x))] = ((a3030*t1222) + (a3029*t1223));
    t1224 = (t1198 + t1205);
    t1225 = (t1199 - t1204);
    t1226 = (t1198 - t1205);
    t1227 = (t1199 + t1204);
    t1228 = (s1094 + s1104);
    t1229 = (s1095 - s1105);
    t1230 = (s1094 - s1104);
    t1231 = (s1095 + s1105);
    t1232 = (t1224 + t1228);
    t1233 = (t1225 + t1229);
    t1234 = (t1224 - t1228);
    t1235 = (t1225 - t1229);
    a3031 = D2[(a3021 + 8)];
    a3032 = D2[(9 + a3021)];
    a3033 = D2[(10 + a3021)];
    a3034 = D2[(11 + a3021)];
    T116[((a3026 + 2) + (18432*blockIdx.x))] = ((a3031*t1232) - (a3032*t1233));
    T116[((a3026 + 3) + (18432*blockIdx.x))] = ((a3032*t1232) + (a3031*t1233));
    T116[((a3026 + 10) + (18432*blockIdx.x))] = ((a3033*t1234) - (a3034*t1235));
    T116[((a3026 + 11) + (18432*blockIdx.x))] = ((a3034*t1234) + (a3033*t1235));
    t1236 = (t1226 + t1231);
    t1237 = (t1227 - t1230);
    t1238 = (t1226 - t1231);
    t1239 = (t1227 + t1230);
    a3035 = D2[(12 + a3021)];
    a3036 = D2[(13 + a3021)];
    a3037 = D2[(14 + a3021)];
    a3038 = D2[(15 + a3021)];
    T116[((a3026 + 6) + (18432*blockIdx.x))] = ((a3035*t1236) - (a3036*t1237));
    T116[((a3026 + 7) + (18432*blockIdx.x))] = ((a3036*t1236) + (a3035*t1237));
    T116[((a3026 + 14) + (18432*blockIdx.x))] = ((a3037*t1238) - (a3038*t1239));
    T116[((a3026 + 15) + (18432*blockIdx.x))] = ((a3038*t1238) + (a3037*t1239));
    __syncthreads();
    if( threadIdx.x <= 767 ) {
        double s1274, s1275, s1276, s1277, s1278, s1279, s1280, s1281, 
                s1282, s1283, s1284, s1285, s1286, s1287, s1288, s1289, 
                s1290, s1291, s1292, s1293, s1294, s1295, s1296, s1297, 
                s1298, s1299, s1300, s1301, s1302, s1303, s1304, s1305, 
                s1306, s1307, s1308, s1309, s1310, s1311, s1312, s1313, 
                s1314, s1315, s1316, s1317, s1318, s1319, s1320, s1321, 
                s1322, s1323, s1324, s1325, s1326, s1327, s1328, s1329, 
                t1448, t1449, t1450, t1451, t1452, t1453, t1454, t1455, 
                t1456, t1457, t1458, t1459, t1460, t1461, t1462, t1463, 
                t1464, t1465, t1466, t1467, t1468, t1469, t1470, t1471, 
                t1472, t1473, t1474, t1475, t1476, t1477, t1478, t1479, 
                t1480, t1481, t1482, t1483, t1484, t1485, t1486, t1487, 
                t1488, t1489, t1490, t1491, t1492, t1493, t1494, t1495;
        int a3608, a3609, a3610, a3611, a3612, a3613;
        a3608 = (threadIdx.x / 128);
        a3609 = (threadIdx.x % 128);
        a3610 = (a3609 / 8);
        a3611 = (a3609 % 8);
        a3612 = ((3072*a3608) + (192*a3610) + (2*a3611));
        s1274 = T116[(a3612 + (18432*blockIdx.x))];
        s1275 = T116[((a3612 + 1) + (18432*blockIdx.x))];
        s1276 = T116[((a3612 + 64) + (18432*blockIdx.x))];
        s1277 = T116[((a3612 + 65) + (18432*blockIdx.x))];
        s1278 = T116[((a3612 + 128) + (18432*blockIdx.x))];
        s1279 = T116[((a3612 + 129) + (18432*blockIdx.x))];
        t1448 = (s1276 + s1278);
        t1449 = (s1277 + s1279);
        s1280 = (s1274 + t1448);
        s1281 = (s1275 + t1449);
        s1282 = (s1274 - (0.5*t1448));
        s1283 = (s1275 - (0.5*t1449));
        s1284 = (0.8660254037844386*(s1277 - s1279));
        s1285 = (0.8660254037844386*(s1276 - s1278));
        t1450 = (s1282 + s1284);
        t1451 = (s1283 - s1285);
        t1452 = (s1282 - s1284);
        t1453 = (s1283 + s1285);
        s1286 = T116[((a3612 + 16) + (18432*blockIdx.x))];
        s1287 = T116[((a3612 + 17) + (18432*blockIdx.x))];
        s1288 = T116[((a3612 + 80) + (18432*blockIdx.x))];
        s1289 = T116[((a3612 + 81) + (18432*blockIdx.x))];
        s1290 = T116[((a3612 + 144) + (18432*blockIdx.x))];
        s1291 = T116[((a3612 + 145) + (18432*blockIdx.x))];
        t1454 = (s1288 + s1290);
        t1455 = (s1289 + s1291);
        s1292 = (s1286 + t1454);
        s1293 = (s1287 + t1455);
        s1294 = (s1286 - (0.5*t1454));
        s1295 = (s1287 - (0.5*t1455));
        s1296 = (0.8660254037844386*(s1289 - s1291));
        s1297 = (0.8660254037844386*(s1288 - s1290));
        t1456 = (s1294 + s1296);
        t1457 = (s1295 - s1297);
        t1458 = (s1294 - s1296);
        t1459 = (s1295 + s1297);
        s1298 = ((0.8660254037844386*t1456) + (0.5*t1457));
        s1299 = ((0.8660254037844386*t1457) - (0.5*t1456));
        s1300 = ((0.5*t1458) + (0.8660254037844386*t1459));
        s1301 = ((0.5*t1459) - (0.8660254037844386*t1458));
        s1302 = T116[((a3612 + 32) + (18432*blockIdx.x))];
        s1303 = T116[((a3612 + 33) + (18432*blockIdx.x))];
        s1304 = T116[((a3612 + 96) + (18432*blockIdx.x))];
        s1305 = T116[((a3612 + 97) + (18432*blockIdx.x))];
        s1306 = T116[((a3612 + 160) + (18432*blockIdx.x))];
        s1307 = T116[((a3612 + 161) + (18432*blockIdx.x))];
        t1460 = (s1304 + s1306);
        t1461 = (s1305 + s1307);
        s1308 = (s1302 + t1460);
        s1309 = (s1303 + t1461);
        s1310 = (s1302 - (0.5*t1460));
        s1311 = (s1303 - (0.5*t1461));
        s1312 = (0.8660254037844386*(s1305 - s1307));
        s1313 = (0.8660254037844386*(s1304 - s1306));
        t1462 = (s1310 + s1312);
        t1463 = (s1311 - s1313);
        t1464 = (s1310 - s1312);
        t1465 = (s1311 + s1313);
        s1314 = ((0.5*t1462) + (0.8660254037844386*t1463));
        s1315 = ((0.5*t1463) - (0.8660254037844386*t1462));
        s1316 = ((0.8660254037844386*t1465) - (0.5*t1464));
        s1317 = ((0.8660254037844386*t1464) + (0.5*t1465));
        s1318 = T116[((a3612 + 48) + (18432*blockIdx.x))];
        s1319 = T116[((a3612 + 49) + (18432*blockIdx.x))];
        s1320 = T116[((a3612 + 112) + (18432*blockIdx.x))];
        s1321 = T116[((a3612 + 113) + (18432*blockIdx.x))];
        s1322 = T116[((a3612 + 176) + (18432*blockIdx.x))];
        s1323 = T116[((a3612 + 177) + (18432*blockIdx.x))];
        t1466 = (s1320 + s1322);
        t1467 = (s1321 + s1323);
        s1324 = (s1318 + t1466);
        s1325 = (s1319 + t1467);
        s1326 = (s1318 - (0.5*t1466));
        s1327 = (s1319 - (0.5*t1467));
        s1328 = (0.8660254037844386*(s1321 - s1323));
        s1329 = (0.8660254037844386*(s1320 - s1322));
        t1468 = (s1326 + s1328);
        t1469 = (s1327 - s1329);
        t1470 = (s1326 - s1328);
        t1471 = (s1327 + s1329);
        t1472 = (s1280 + s1308);
        t1473 = (s1281 + s1309);
        t1474 = (s1280 - s1308);
        t1475 = (s1281 - s1309);
        t1476 = (s1292 + s1324);
        t1477 = (s1293 + s1325);
        t1478 = (s1292 - s1324);
        t1479 = (s1293 - s1325);
        a3613 = ((2*blockIdx.x) + (9408*a3611) + (1568*a3608) + (98*a3610));
        Y[a3613] = (t1472 + t1476);
        Y[(a3613 + 1)] = (t1473 + t1477);
        Y[(a3613 + 451584)] = (t1472 - t1476);
        Y[(a3613 + 451585)] = (t1473 - t1477);
        Y[(a3613 + 225792)] = (t1474 + t1479);
        Y[(a3613 + 225793)] = (t1475 - t1478);
        Y[(a3613 + 677376)] = (t1474 - t1479);
        Y[(a3613 + 677377)] = (t1475 + t1478);
        t1480 = (t1450 + s1314);
        t1481 = (t1451 + s1315);
        t1482 = (t1450 - s1314);
        t1483 = (t1451 - s1315);
        t1484 = (s1298 + t1469);
        t1485 = (s1299 - t1468);
        t1486 = (s1298 - t1469);
        t1487 = (s1299 + t1468);
        Y[(a3613 + 75264)] = (t1480 + t1484);
        Y[(a3613 + 75265)] = (t1481 + t1485);
        Y[(a3613 + 526848)] = (t1480 - t1484);
        Y[(a3613 + 526849)] = (t1481 - t1485);
        Y[(a3613 + 301056)] = (t1482 + t1487);
        Y[(a3613 + 301057)] = (t1483 - t1486);
        Y[(a3613 + 752640)] = (t1482 - t1487);
        Y[(a3613 + 752641)] = (t1483 + t1486);
        t1488 = (t1452 + s1316);
        t1489 = (t1453 - s1317);
        t1490 = (t1452 - s1316);
        t1491 = (t1453 + s1317);
        t1492 = (s1300 - t1470);
        t1493 = (s1301 - t1471);
        t1494 = (s1300 + t1470);
        t1495 = (s1301 + t1471);
        Y[(a3613 + 150528)] = (t1488 + t1492);
        Y[(a3613 + 150529)] = (t1489 + t1493);
        Y[(a3613 + 602112)] = (t1488 - t1492);
        Y[(a3613 + 602113)] = (t1489 - t1493);
        Y[(a3613 + 376320)] = (t1490 + t1495);
        Y[(a3613 + 376321)] = (t1491 - t1494);
        Y[(a3613 + 827904)] = (t1490 - t1495);
        Y[(a3613 + 827905)] = (t1491 + t1494);
    }
    __syncthreads();
}

extern "C" {
void fftx_mdprdft_96x96x96(double  *Y, double  *X, double  *sym) {
    dim3 b543(1152, 1, 1), b544(1152, 1, 1), b545(1152, 1, 1), g1(96, 1, 1), g2(49, 1, 1), g3(49, 1, 1);
    ker_fftx_mdprdft_96x96x960<<<g1, b543>>>(X);
    ker_fftx_mdprdft_96x96x961<<<g2, b544>>>();
    ker_fftx_mdprdft_96x96x962<<<g3, b545>>>(Y);
}
}

extern "C" {
void destroy_fftx_mdprdft_96x96x96() {
    double  *hp1;
    cudaMemcpyFromSymbol(&(hp1), P1, sizeof(double  *));
    cudaFree(hp1);
    cudaMemcpyFromSymbol(&(hp1), P2, sizeof(double  *));
    cudaFree(hp1);
    cudaMemcpyFromSymbol(&(hp1), T116, sizeof(double  *));
    cudaFree(hp1);
    cudaMemcpyFromSymbol(&(hp1), T3, sizeof(double  *));
    cudaFree(hp1);
    cudaMemcpyFromSymbol(&(hp1), T87, sizeof(double  *));
    cudaFree(hp1);
}
}

extern "C" {
void init_fftx_mdprdft_96x96x96() {
    double  *hp1;
    cudaDeviceSetLimit(cudaLimitMallocHeapSize, 1073741824);
    cudaFuncSetCacheConfig(ker_fftx_mdprdft_96x96x960, cudaFuncCachePreferL1);
    cudaFuncSetCacheConfig(ker_fftx_mdprdft_96x96x961, cudaFuncCachePreferL1);
    cudaFuncSetCacheConfig(ker_fftx_mdprdft_96x96x962, cudaFuncCachePreferL1);
    cudaMalloc(((void  * *) &(hp1)), (sizeof(double )*903168));
    cudaMemcpyToSymbol(P1, &(hp1), sizeof(double  *));
    cudaMalloc(((void  * *) &(hp1)), (sizeof(double )*903168));
    cudaMemcpyToSymbol(P2, &(hp1), sizeof(double  *));
    cudaMalloc(((void  * *) &(hp1)), (sizeof(double )*903168));
    cudaMemcpyToSymbol(T116, &(hp1), sizeof(double  *));
    cudaMalloc(((void  * *) &(hp1)), (sizeof(double )*1105920));
    cudaMemcpyToSymbol(T3, &(hp1), sizeof(double  *));
    cudaMalloc(((void  * *) &(hp1)), (sizeof(double )*903168));
    cudaMemcpyToSymbol(T87, &(hp1), sizeof(double  *));
}
}
